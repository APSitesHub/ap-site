{"version":3,"file":"static/js/Teacher Control Deutsch page.fdcd332b.chunk.js","mappings":"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","sources":["pages/Streams/TeacherAdminPanel/TeacherAdminPanel.styled.js","pages/Streams/TeacherAdminPanel/TeacherControlPageDe.jsx"],"sourcesContent":["import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport { ReactComponent as FilterIcon } from '../../../img/svg/filter.svg';\nimport styled from 'styled-components';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 20px;\n  display: flex;\n  align-items: flex-start;\n\n  gap: 30px;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const UsersForm = styled(Form)`\n  margin: 0 auto;\n\n  position: sticky;\n  top: 50%;\n\n  transform: translateY(-50%);\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const UsersEditForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  max-width: 400px;\n\n  background-color: white;\n  padding: 24px;\n  border-radius: 24px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n  height: 48px;\n  padding: 0;\n`;\n\nexport const AdminInput = styled(Input)`\n  width: 240px;\n  padding: 8px 10px;\n  font-size: 16px;\n  height: 40px;\n  -webkit-text-stroke: 0px;\n\n  border: 2px solid var(--main-color);\n\n  &.error {\n    border-color: red;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 360px;\n  }\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  color: var(--main-color);\n  font-size: 12px;\n  font-weight: 500;\n  position: static;\n  max-width: 240px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 360px;\n  }\n`;\n\nexport const UserDBTable = styled.table`\n  max-width: 50vw;\n  min-height: 80vh;\n  margin: 0 auto;\n\n  table-layout: auto;\n  width: 100%;\n\n  text-align: center;\n  border: 1px solid #000;\n  border-collapse: collapse;\n`;\n\nexport const UserDBCaption = styled.caption`\n  caption-side: top;\n  margin-bottom: 20px;\n`;\n\nexport const UserDBItemValue = styled.span`\n  font-size: 11px;\n`;\n\nexport const UserDBRow = styled.tr`\n  border: 1px solid #000;\n`;\n\nexport const UserHeadCell = styled.th`\n  border: 1px solid #000;\n  padding: 3px;\n`;\n\nexport const Filterable = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  position: relative;\n`;\n\nexport const UserCell = styled.td`\n  border: 1px solid #000;\n  padding: 3px;\n  height: 3em;\n\n  &.last-name {\n    text-transform: capitalize;\n  }\n\n  &.attention {\n    color: red;\n  }\n\n  &.error {\n    background-color: #ff0000;\n  }\n`;\n\nexport const UserCellLeft = styled(UserCell)`\n  text-align: start;\n  padding-left: 8px;\n  max-width: 50vw;\n`;\n\nexport const UserEditButton = styled.button`\n  background-color: transparent;\n  border: 1px solid var(--accent-color);\n  border-radius: 5px;\n`;\n\nexport const UserDeleteButton = styled.button`\n  background-color: transparent;\n  border: 1px solid var(--main-color);\n  border-radius: 5px;\n`;\n\nexport const UserBanButton = styled(UserDeleteButton)`\n  &.banned {\n    border-color: #023020;\n  }\n  &.not_banned {\n    border-color: #8b0000;\n  }\n`;\n\nexport const FilterButton = styled(FilterIcon)`\n  width: 18px;\n  height: 12px;\n\n  color: #000;\n\n  transition: color var(--animation-global);\n\n  &:hover {\n    color: var(--main-color);\n  }\n`;\n\nexport const FilterPicker = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n`;\n\nexport const FilterPickerButton = styled.button`\n  width: 100%;\n  text-transform: capitalize;\n`;\n\nexport const Feedback = styled.p`\n  font-size: 10px;\n  margin-bottom: 3px;\n  text-align: start;\n`;\n\nexport const TeacherTable = styled(UserDBTable)`\n  max-width: 80vw;\n`;\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  AdminPanelSection,\n  Feedback,\n  LoginForm,\n  TeacherTable,\n  UserCell,\n  UserDBCaption,\n  UserDBRow,\n  UserHeadCell,\n} from './TeacherAdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst TeacherControlPageDe = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\n  const [teachers, setTeachers] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    document.title = 'Teacher Admin Panel | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      setIsLoading(isLoading => (isLoading = true));\n      try {\n        if (localStorage.getItem('isAdmin')) {\n          const res = await axios.post('admins/refresh/teachers/', {});\n          setAuthToken(res.data.newToken);\n          console.log(res);\n          setIsUserAdmin(isAdmin => (isAdmin = true));\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    refreshToken();\n\n    const getTeachers = async () => {\n      setIsLoading(isLoading => (isLoading = true));\n      try {\n        if (isUserAdmin) {\n          const response = await axios.get('/teachers/de');\n          setTeachers(teachers => (teachers = [...response.data.reverse()]));\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getTeachers();\n\n    const getReviews = async () => {\n      setIsLoading(isLoading => (isLoading = true));\n      try {\n        if (isUserAdmin) {\n          const response = await axios.get('/speakingusers/admin/de');\n          setReviews(reviews => (reviews = [...response.data]));\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getReviews();\n  }, [isUserAdmin]);\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  const regex = /\\d{1,}\\.\\d{2}\\.\\d{4}/;\n\n  // const changeDateFormat = dateString => {\n  //   if (dateString) {\n  //     const dateArray = dateString.split('.');\n  //     return dateArray.length > 2\n  //       ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/'))\n  //       : Date.parse(dateString);\n  //   }\n  //   return;\n  // };\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.post('/admins/login/teachers', values);\n      setAuthToken(response.data.token);\n      setIsUserAdmin(isAdmin => (isAdmin = true));\n      localStorage.setItem('isAdmin', true);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        {!isUserAdmin && (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Login\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Залогінитись</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        )}\n\n        {isUserAdmin && teachers.length && (\n          <TeacherTable>\n            <UserDBCaption>\n              Список акаунтів тічерів з доступом до табличок відгуків\n            </UserDBCaption>\n            <thead>\n              <UserDBRow>\n                <UserHeadCell>Тічер</UserHeadCell>\n                <UserHeadCell>Відгуки</UserHeadCell>\n              </UserDBRow>\n            </thead>\n            <tbody>\n              {teachers\n                .sort((a, b) => a.name.localeCompare(b.name))\n                .map((teacher, i) => (\n                  <UserDBRow>\n                    <UserCell key={'Тічер' + teacher._id}>\n                      {teacher.name}\n                    </UserCell>\n                    <UserCell key={`Відгук ${i} ${teacher._id}`}>\n                      {reviews\n                        .filter(user =>\n                          user.feedback.some(\n                            review =>\n                              review.includes(teacher.name) ||\n                              review.includes(\n                                teacher.name.split(' ').reverse().join(' ')\n                              )\n                          )\n                        )\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map(\n                          user =>\n                            (user = {\n                              _id: user._id,\n                              name: user.name,\n                              feedback: user.feedback.filter(\n                                text =>\n                                  text.includes(teacher.name) ||\n                                  text.includes(\n                                    teacher.name.split(' ').reverse().join(' ')\n                                  )\n                              ),\n                            })\n                        )\n                        .flatMap(user =>\n                          user.feedback.map(\n                            feedback => `для ${user.name}) ${feedback}`\n                          )\n                        )\n                        .map(text => (\n                          <Feedback>\n                            {text.length > 200\n                              ? `(Відгук від ${text.match(regex)} ${text.slice(0, 200)}...`\n                              : `(Відгук від ${text.match(regex)} ${text}`}\n                          </Feedback>\n                        ))}\n                    </UserCell>\n                  </UserDBRow>\n                ))}\n            </tbody>\n          </TeacherTable>\n        )}\n\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n\nexport default TeacherControlPageDe;\n"],"names":["AdminPanelSection","styled","_templateObject","_taggedTemplateLiteral","LoginForm","Form","_templateObject2","UsersForm","_templateObject3","UsersEditForm","_templateObject4","AdminFormBtn","FormBtn","_templateObject5","AdminInput","Input","_templateObject6","AdminInputNote","InputNote","_templateObject7","UserDBTable","_templateObject8","UserDBCaption","_templateObject9","UserDBRow","_templateObject10","_templateObject11","UserHeadCell","_templateObject12","UserCell","_templateObject13","_templateObject14","UserEditButton","_templateObject15","_templateObject16","UserDeleteButton","_templateObject17","Feedback","_templateObject18","FilterIcon","_templateObject19","_templateObject20","_templateObject21","_templateObject22","TeacherTable","_templateObject23","axios","setAuthToken","token","concat","TeacherControlPageDe","isLoading","setIsLoading","useState","isUserAdmin","setIsUserAdmin","teachers","setTeachers","reviews","setReviews","useEffect","document","title","async","console","log","localStorage","getItem","res","data","newToken","isAdmin","error","refreshToken","response","reverse","getTeachers","getReviews","loginSchema","yup","shape","login","required","password","regex","_jsx","_Fragment","children","_jsxs","Formik","initialValues","onSubmit","values","_ref","resetForm","setItem","validationSchema","Label","type","name","placeholder","component","length","sort","a","b","localeCompare","map","teacher","i","_id","filter","user","feedback","some","review","includes","split","join","text","flatMap","match","slice","Loader"],"sourceRoot":""}