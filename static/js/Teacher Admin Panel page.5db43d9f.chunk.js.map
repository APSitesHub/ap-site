{"version":3,"file":"static/js/Teacher Admin Panel page.5db43d9f.chunk.js","mappings":"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","sources":["pages/Streams/TeacherAdminPanel/TeacherEditForm/TeacherEditForm.jsx","pages/Streams/TeacherAdminPanel/TeacherAdminPanel.jsx","pages/Streams/TeacherAdminPanel/TeacherAdminPanel.styled.js"],"sourcesContent":["import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  UsersEditForm,\n} from '../TeacherAdminPanel.styled';\nimport { EditFormHeader } from 'pages/TeacherPage/TeacherPage.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nexport const TeacherEditForm = ({ teacherToEdit, closeEditForm }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const initialTeacherValues = {\n    name: teacherToEdit.name,\n    login: teacherToEdit.login,\n    password: teacherToEdit.password,\n  };\n\n  const teachersSchema = yup.object().shape({\n    name: yup.string().required(\"Ім'я - обов'язкове поле\"),\n    login: yup.string().required(\"Логін - обов'язкове поле!\"),\n    password: yup.string().required(\"Пароль - обов'язкове поле!\"),\n  });\n\n  const handleTeacherSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.name = values.name.trim().trimStart();\n    values.login = values.login.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n\n    try {\n      const response = await axios.put(\n        `/teachers/${teacherToEdit._id}`,\n        values\n      );\n      console.log(response);\n      resetForm();\n      alert('Тічера відредаговано');\n      closeEditForm();\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialTeacherValues}\n        onSubmit={handleTeacherSubmit}\n        validationSchema={teachersSchema}\n      >\n        <UsersEditForm>\n          <EditFormHeader>{teacherToEdit.name}</EditFormHeader>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Прізвище та ім'я\"\n            />\n            <AdminInputNote component=\"p\" name=\"name\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"login\" placeholder=\"Логін\" />\n            <AdminInputNote component=\"p\" name=\"login\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"password\" placeholder=\"Пароль\" />\n            <AdminInputNote component=\"p\" name=\"password\" />\n          </Label>\n          <AdminFormBtn type=\"submit\">Підтвердити зміни</AdminFormBtn>\n        </UsersEditForm>\n      </Formik>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  AdminPanelSection,\n  LoginForm,\n  UserCell,\n  UserDBCaption,\n  UserDBRow,\n  UserDBTable,\n  UserDeleteButton,\n  UserEditButton,\n  UserHeadCell,\n  UsersForm,\n} from './TeacherAdminPanel.styled';\nimport { TeacherEditForm } from './TeacherEditForm/TeacherEditForm';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst UserAdminPanel = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\n  const [teachers, setTeachers] = useState([]);\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\n  const [teacherToEdit, setTeacherToEdit] = useState({});\n  const [isTimeToUpdate, setIsTimeToUpdate] = useState(false);\n\n  useEffect(() => {\n    document.title = 'Teacher Admin Panel | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        if (localStorage.getItem('isAdmin')) {\n          const res = await axios.post('admins/refresh/teachers/', {});\n          setAuthToken(res.data.newToken);\n          console.log(res);\n          setIsUserAdmin(isAdmin => (isAdmin = true));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n\n    const getTeachers = async () => {\n      try {\n        if (isUserAdmin) {\n          const response = await axios.get('/teachers/');\n          setTeachers(teachers => (teachers = [...response.data.reverse()]));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getTeachers();\n\n    const onEscapeClose = event => {\n      if (event.code === 'Escape' && isEditFormOpen) {\n        closeEditForm();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [isUserAdmin, isEditFormOpen, isTimeToUpdate]);\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2\n        ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/'))\n        : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.post('/admins/login/teachers', values);\n      setAuthToken(response.data.token);\n      setIsUserAdmin(isAdmin => (isAdmin = true));\n      localStorage.setItem('isAdmin', true);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const initialTeacherValues = {\n    name: '',\n    login: '',\n    password: '',\n  };\n\n  const teachersSchema = yup.object().shape({\n    name: yup.string().required(\"Ім'я - обов'язкове поле\"),\n    login: yup.string().required(\"Логін - обов'язкове поле!\"),\n    password: yup.string().required(\"Пароль - обов'язкове поле!\"),\n  });\n\n  const handleTeacherSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.name = values.name.trim().trimStart();\n    values.login = values.login.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    try {\n      const response = await axios.post('/teachers/new', values);\n      console.log(response);\n      resetForm();\n      alert('Юзера додано');\n      setIsTimeToUpdate(isTime => !isTime);\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const handleEdit = async id => {\n    setIsEditFormOpen(true);\n    setTeacherToEdit(\n      teacherToEdit =>\n        (teacherToEdit = teachers.find(teacher => teacher._id === id))\n    );\n  };\n\n  const closeEditForm = e => {\n    setIsEditFormOpen(false);\n  };\n\n  const closeEditFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditFormOpen(false);\n    }\n  };\n\n  const handleDelete = async id => {\n    setIsLoading(isLoading => (isLoading = true));\n    const areYouSure = window.confirm(\n      `Точно видалити ${teachers.find(teacher => teacher._id === id).name}?`\n    );\n\n    if (!areYouSure) {\n      setIsLoading(isLoading => (isLoading = false));\n      return;\n    } else {\n      try {\n        const response = await axios.delete(`/teachers/${id}`);\n        console.log(response);\n        alert('Тічера видалено');\n        setTeachers(\n          teachers =>\n            (teachers = [...teachers.filter(teacher => teacher._id !== id)])\n        );\n      } catch (error) {\n        console.error(error);\n        alert(\n          'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n        );\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    }\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        {!isUserAdmin && (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Login\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Залогінитись</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        )}\n\n        {isUserAdmin && (\n          <Formik\n            initialValues={initialTeacherValues}\n            onSubmit={handleTeacherSubmit}\n            validationSchema={teachersSchema}\n          >\n            <UsersForm>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Прізвище та ім'я\"\n                />\n                <AdminInputNote component=\"p\" name=\"name\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Логін\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"password\" placeholder=\"Пароль\" />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Додати тічера</AdminFormBtn>\n            </UsersForm>\n          </Formik>\n        )}\n        {isUserAdmin && teachers.length && (\n          <UserDBTable>\n            <UserDBCaption>\n              Список акаунтів тічерів з доступом до табличок відгуків\n            </UserDBCaption>\n            <thead>\n              <UserDBRow>\n                <UserHeadCell>Ім'я</UserHeadCell>\n                <UserHeadCell>Логін</UserHeadCell>\n                <UserHeadCell>Пароль</UserHeadCell>\n                <UserHeadCell>Відвідини</UserHeadCell>\n                <UserHeadCell>Відвідини з часом</UserHeadCell>\n                <UserHeadCell>Edit</UserHeadCell>\n                <UserHeadCell>Delete</UserHeadCell>\n              </UserDBRow>\n            </thead>\n            <tbody>\n              {teachers\n                .sort((a, b) => a.name.localeCompare(b.name))\n                .map(teacher => (\n                  <UserDBRow key={teacher._id}>\n                    <UserCell>{teacher.name}</UserCell>\n                    <UserCell>{teacher.login}</UserCell>\n                    <UserCell>{teacher.password}</UserCell>\n                    <UserCell>\n                      {teacher.visited[teacher.visited.length - 1]}\n                    </UserCell>\n                    <UserCell>\n                      {teacher.visitedTime.length\n                        ? new Date(\n                            changeDateFormat(\n                              teacher.visitedTime[\n                                teacher.visitedTime.length - 1\n                              ]\n                            )\n                          ).toLocaleString('uk-UA', { timeZone: '+03:00' })\n                        : ''}\n                    </UserCell>\n                    <UserCell>\n                      {teacher.name === 'Dev Acc' ? null : (\n                        <UserEditButton onClick={() => handleEdit(teacher._id)}>\n                          Edit\n                        </UserEditButton>\n                      )}\n                    </UserCell>\n                    <UserCell>\n                      {teacher.name === 'Dev Acc' ? null : (\n                        <UserDeleteButton\n                          onClick={() => handleDelete(teacher._id)}\n                        >\n                          Del\n                        </UserDeleteButton>\n                      )}\n                    </UserCell>\n                  </UserDBRow>\n                ))}\n            </tbody>\n          </UserDBTable>\n        )}\n        {isEditFormOpen && (\n          <Backdrop onMouseDown={closeEditFormOnClick} id=\"close-on-click\">\n            <TeacherEditForm\n              teacherToEdit={teacherToEdit}\n              closeEditForm={closeEditForm}\n            />\n          </Backdrop>\n        )}\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n\nexport default UserAdminPanel;\n","import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport { ReactComponent as FilterIcon } from '../../../img/svg/filter.svg';\nimport styled from 'styled-components';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 20px;\n  display: flex;\n  align-items: flex-start;\n\n  gap: 30px;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const UsersForm = styled(Form)`\n  margin: 0 auto;\n\n  position: sticky;\n  top: 50%;\n\n  transform: translateY(-50%);\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const UsersEditForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  max-width: 400px;\n\n  background-color: white;\n  padding: 24px;\n  border-radius: 24px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n  height: 48px;\n  padding: 0;\n`;\n\nexport const AdminInput = styled(Input)`\n  width: 240px;\n  padding: 8px 10px;\n  font-size: 16px;\n  height: 40px;\n  -webkit-text-stroke: 0px;\n\n  border: 2px solid var(--main-color);\n\n  &.error {\n    border-color: red;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 360px;\n  }\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  color: var(--main-color);\n  font-size: 12px;\n  font-weight: 500;\n  position: static;\n  max-width: 240px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 360px;\n  }\n`;\n\nexport const UserDBTable = styled.table`\n  max-width: 50vw;\n  min-height: 80vh;\n  margin: 0 auto;\n\n  table-layout: auto;\n  width: 100%;\n\n  text-align: center;\n  border: 1px solid #000;\n  border-collapse: collapse;\n`;\n\nexport const UserDBCaption = styled.caption`\n  caption-side: top;\n  margin-bottom: 20px;\n`;\n\nexport const UserDBItemValue = styled.span`\n  font-size: 11px;\n`;\n\nexport const UserDBRow = styled.tr`\n  border: 1px solid #000;\n`;\n\nexport const UserHeadCell = styled.th`\n  border: 1px solid #000;\n  padding: 3px;\n`;\n\nexport const Filterable = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  position: relative;\n`;\n\nexport const UserCell = styled.td`\n  border: 1px solid #000;\n  padding: 3px;\n  height: 3em;\n\n  &.last-name {\n    text-transform: capitalize;\n  }\n\n  &.attention {\n    color: red;\n  }\n\n  &.error {\n    background-color: #ff0000;\n  }\n`;\n\nexport const UserCellLeft = styled(UserCell)`\n  text-align: start;\n  padding-left: 8px;\n  max-width: 50vw;\n`;\n\nexport const UserEditButton = styled.button`\n  background-color: transparent;\n  border: 1px solid var(--accent-color);\n  border-radius: 5px;\n`;\n\nexport const UserDeleteButton = styled.button`\n  background-color: transparent;\n  border: 1px solid var(--main-color);\n  border-radius: 5px;\n`;\n\nexport const UserBanButton = styled(UserDeleteButton)`\n  &.banned {\n    border-color: #023020;\n  }\n  &.not_banned {\n    border-color: #8b0000;\n  }\n`;\n\nexport const FilterButton = styled(FilterIcon)`\n  width: 18px;\n  height: 12px;\n\n  color: #000;\n\n  transition: color var(--animation-global);\n\n  &:hover {\n    color: var(--main-color);\n  }\n`;\n\nexport const FilterPicker = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n`;\n\nexport const FilterPickerButton = styled.button`\n  width: 100%;\n  text-transform: capitalize;\n`;\n\nexport const Feedback = styled.p`\n  font-size: 10px;\n  margin-bottom: 3px;\n  text-align: start;\n`;\n\nexport const TeacherTable = styled(UserDBTable)`\n  max-width: 80vw;\n`;\n"],"names":["axios","TeacherEditForm","_ref","teacherToEdit","closeEditForm","isLoading","setIsLoading","useState","initialTeacherValues","name","login","password","teachersSchema","yup","shape","required","_jsxs","_Fragment","children","_jsx","Formik","initialValues","onSubmit","async","values","_ref2","resetForm","trim","trimStart","toLowerCase","response","concat","_id","console","log","alert","error","validationSchema","UsersEditForm","EditFormHeader","Label","AdminInput","type","placeholder","AdminInputNote","component","AdminFormBtn","Loader","setAuthToken","token","UserAdminPanel","isUserAdmin","setIsUserAdmin","teachers","setTeachers","isEditFormOpen","setIsEditFormOpen","setTeacherToEdit","isTimeToUpdate","setIsTimeToUpdate","useEffect","document","title","localStorage","getItem","res","data","newToken","isAdmin","refreshToken","reverse","getTeachers","onEscapeClose","event","code","window","addEventListener","removeEventListener","loginSchema","changeDateFormat","dateString","dateArray","split","length","Date","parse","join","e","AdminPanelSection","setItem","LoginForm","isTime","UsersForm","UserDBTable","UserDBCaption","UserDBRow","UserHeadCell","sort","a","b","localeCompare","map","teacher","UserCell","visited","visitedTime","toLocaleString","timeZone","UserEditButton","onClick","find","id","handleEdit","UserDeleteButton","confirm","filter","handleDelete","Backdrop","onMouseDown","target","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","_templateObject3","_templateObject4","FormBtn","_templateObject5","Input","_templateObject6","InputNote","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","Feedback","_templateObject18","FilterIcon","_templateObject19","_templateObject20","_templateObject21","_templateObject22","TeacherTable","_templateObject23"],"sourceRoot":""}