{"version":3,"file":"static/js/Speaking Club redirect page.7443e328.chunk.js","mappings":"4NAYAA,EAAAA,EAAAA,SAAAA,QAAyB,sCAEzB,MAyFA,EAzF2BC,KACzB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAE1CG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,CAAC,GAG5BK,GAFWC,EAAAA,EAAAA,MAAcC,SAETC,QAAQ,YAAa,IAAIA,QAAQ,KAAM,IACvDC,EAAOJ,EAAKK,SAAS,QACvBL,EAAKG,QAAQ,OAAQ,WACrBH,EAAKK,SAAS,MACdL,EAAKG,QAAQ,KAAM,WACnBH,EAAKK,SAAS,QACdL,EAAKG,QAAQ,OAAQ,UACrBH,EAAKK,SAAS,MACdL,EAAKG,QAAQ,KAAM,UACnBH,EAkDJ,OAhDAM,EAAAA,EAAAA,kBAAgB,KACUC,WACtB,IACEb,GAAaD,IAA0B,IACvCI,SAAuBN,EAAAA,EAAAA,IAAU,eAAeiB,KAAKJ,IACrD,MAAMK,QAAoBlB,EAAAA,EAAAA,KAAW,iBAAkB,CACrDmB,KAAMC,aAAaC,QAAQ,UAE7BC,QAAQC,IAAIL,EAAYD,KAAKV,MAC7BC,GACED,IACU,CACNiB,IAAKN,EAAYD,KAAKV,KAAKkB,GAC3BC,KAAMR,EAAYD,KAAKV,KAAKmB,KAC5BP,KAAMD,EAAYD,KAAKV,KAAKY,KAC5BQ,SAAUT,EAAYD,KAAKV,KAAKoB,SAChCC,IAAKV,EAAYD,KAAKV,KAAKqB,IAC3BC,KAAMX,EAAYD,KAAKV,KAAKsB,KAC5BC,OAAQZ,EAAYD,KAAKV,KAAKuB,OAC9BC,MAAOb,EAAYD,KAAKV,KAAKwB,MAC7BC,UAAWd,EAAYD,KAAKV,KAAKyB,UACjCC,YAAaf,EAAYD,KAAKV,KAAK0B,YACnCC,YAAahB,EAAYD,KAAKV,KAAK2B,YACnCC,QAASjB,EAAYD,KAAKV,KAAK4B,QAC/BC,YAAalB,EAAYD,KAAKV,KAAK6B,YACnCC,SAAUnB,EAAYD,KAAKV,KAAK8B,YAOxC,CAJE,MAAOC,GACPhB,QAAQC,IAAIe,EACd,CAAC,QACCnC,GAAaD,IAA0B,GACzC,GAEFqC,EAAiB,GAChB,CAAC1B,KAEJ2B,EAAAA,EAAAA,YAAU,KACRC,SAASC,MAAK,mHAEO1B,WACnBM,QAAQC,IAAIhB,EAAK,EAInBoC,EAAc,GACb,CAACpC,EAAMF,KAGRuC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAa,CAAAD,UACZE,EAAAA,EAAAA,MAACC,EAAAA,GAAwB,CAAAH,SAAA,CACtB5C,IACC0C,EAAAA,EAAAA,KAACM,EAAAA,GAAa,CAAAJ,UACZF,EAAAA,EAAAA,KAACO,EAAAA,EAAM,OAGXP,EAAAA,EAAAA,KAACQ,EAAAA,EAAiB,CAAAN,UAChBE,EAAAA,EAAAA,MAACK,EAAAA,GAAqB,CAAAP,SAAA,CAAC,0CACbF,EAAAA,EAAAA,KAAA,SAAM,sYAQrB,C","sources":["pages/Speakings/StreamSpeakingClub.jsx"],"sourcesContent":["import axios from 'axios';\nimport { StreamsBackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { LoaderWrapper } from 'components/SharedLayout/Loaders/Loader.styled';\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport {\n  StreamPlaceHolder,\n  StreamPlaceHolderText,\n  StreamSection,\n} from '../../components/Stream/Stream.styled';\nimport { useLocation } from 'react-router-dom';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nconst StreamSpeakingClub = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [redirectLink, setRedirectLink] = useState('');\n  // eslint-disable-next-line\n  const [user, setUser] = useState({});\n  const location = useLocation().pathname;\n\n  const page = location.replace('/streams/', '').replace('sc', '');\n  const link = page.includes('dea1')\n    ? page.replace('dea1', 'deutsch')\n    : page.includes('de')\n    ? page.replace('de', 'deutsch')\n    : page.includes('pla1')\n    ? page.replace('pla1', 'polski')\n    : page.includes('pl')\n    ? page.replace('pl', 'polski')\n    : page;\n\n  useLayoutEffect(() => {\n    const getLinksRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setRedirectLink((await axios.get('/speakings')).data[link]);\n        const currentUser = await axios.post('/users/refresh', {\n          mail: localStorage.getItem('mail'),\n        });\n        console.log(currentUser.data.user);\n        setUser(\n          user =>\n            (user = {\n              _id: currentUser.data.user.id,\n              name: currentUser.data.user.name,\n              mail: currentUser.data.user.mail,\n              zoomMail: currentUser.data.user.zoomMail,\n              age: currentUser.data.user.age,\n              lang: currentUser.data.user.lang,\n              course: currentUser.data.user.course,\n              crmId: currentUser.data.user.crmId,\n              contactId: currentUser.data.user.contactId,\n              successRate: currentUser.data.user.successRate,\n              temperament: currentUser.data.user.temperament,\n              visited: currentUser.data.user.visited, \n              visitedTime: currentUser.data.user.visitedTime,\n              feedback: currentUser.data.user.feedback,\n            })\n        );\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getLinksRequest();\n  }, [link]);\n\n  useEffect(() => {\n    document.title = `Практичне заняття | AP Education`;\n\n    const sendUserInfo = async () => {\n      console.log(user);\n      // const res = await axios.post('/speakingusers', user)\n      // res && console.log('sent');\n    };\n    sendUserInfo();\n  }, [user, redirectLink]);\n\n  return (\n    <>\n      <StreamSection>\n        <StreamsBackgroundWrapper>\n          {isLoading && (\n            <LoaderWrapper>\n              <Loader />\n            </LoaderWrapper>\n          )}\n          <StreamPlaceHolder>\n            <StreamPlaceHolderText>\n              Привіт! <br />\n              Будь ласка, зачекайте, незабаром вас переадресує на практичне\n              заняття в Zoom\n            </StreamPlaceHolderText>\n          </StreamPlaceHolder>\n          {/* {redirectLink && window.location.replace(redirectLink)} */}\n        </StreamsBackgroundWrapper>\n      </StreamSection>\n    </>\n  );\n};\n\nexport default StreamSpeakingClub;\n"],"names":["axios","StreamSpeakingClub","isLoading","setIsLoading","useState","redirectLink","setRedirectLink","user","setUser","page","useLocation","pathname","replace","link","includes","useLayoutEffect","async","data","currentUser","mail","localStorage","getItem","console","log","_id","id","name","zoomMail","age","lang","course","crmId","contactId","successRate","temperament","visited","visitedTime","feedback","error","getLinksRequest","useEffect","document","title","sendUserInfo","_jsx","_Fragment","children","StreamSection","_jsxs","StreamsBackgroundWrapper","LoaderWrapper","Loader","StreamPlaceHolder","StreamPlaceHolderText"],"sourceRoot":""}