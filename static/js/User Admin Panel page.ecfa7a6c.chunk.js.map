{"version":3,"file":"static/js/User Admin Panel page.ecfa7a6c.chunk.js","mappings":"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","sources":["pages/Streams/UserAdminPanel/UserEditForm/UserEditForm.jsx","pages/Streams/UserAdminPanel/UserAdminPanel.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  UsersEditForm,\n} from '../UserAdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nexport const UserEditForm = ({ userToEdit, updateUser, closeEditForm }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const initialUserValues = {\n    crmId: userToEdit.crmId || '',\n    contactId: userToEdit.contactId || '',\n    name: userToEdit.name,\n    mail: userToEdit.mail,\n    zoomMail: userToEdit.zoomMail || '',\n    password: userToEdit.password,\n    pupilId: userToEdit.pupilId,\n    marathonNumber: userToEdit.marathonNumber || '',\n    adult: userToEdit.adult,\n    age: userToEdit.age,\n    lang: userToEdit.lang,\n    course: userToEdit.course,\n    package: userToEdit.package,\n    knowledge: userToEdit.knowledge,\n    manager: userToEdit.manager,\n  };\n\n  const usersSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required(\n        \"Ім'я - обов'язкове поле, якщо імені з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    mail: yup.string().required(\"Пошта - обов'язкове поле!\"),\n    zoomMail: yup.string(),\n    password: yup.string().required(\"Пароль - обов'язкове поле!\"),\n    crmId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    contactId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    pupilId: yup\n      .string()\n      .min(6, 'Не менше 6 цифр')\n      .max(7, 'Не більше 7 цифр')\n      .matches(/^\\d{1,7}$/, 'Лише цифри')\n      .required(\"Обов'язкове поле, дивитись на платформі\"),\n    marathonNumber: yup\n      .string()\n      .max(1, 'Не більше 1 цифри')\n      .matches(/[12]/, 'Лише цифри 1 або 2'),\n    age: yup\n      .string()\n      .required(\n        \"Вік - обов'язкове поле, якщо віку з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    lang: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    course: yup\n      .string()\n      .required(\n        \"Обов'язкове поле, для тестових юзерів або нерозподілених користувачів введіть 0\"\n      ),\n    package: yup.string().optional(),\n    // .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    knowledge: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    manager: yup\n      .string()\n      .required(\"Менеджер - обов'язкове поле, введіть прізвище\"),\n  });\n\n  const handleUserSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.name = values.name.trim().trimStart();\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.zoomMail = values.zoomMail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    values.pupilId = values.pupilId.trim().trimStart();\n    values.marathonNumber = values.marathonNumber.trim().trimStart();\n    values.crmId =\n      values.crmId && typeof values.crmId !== 'number'\n        ? +values.crmId.trim().trimStart()\n        : typeof values.crmId === 'number'\n        ? values.crmId\n        : undefined;\n    values.contactId =\n      values.contactId && typeof values.contactId !== 'number'\n        ? +values.contactId.trim().trimStart()\n        : typeof values.contactId === 'number'\n        ? values.contactId\n        : undefined;\n    values.age = values.age.trim().trimStart();\n    values.adult = +values.age > 18 ? true : false;\n    values.lang = values.lang.toLowerCase().trim().trimStart();\n    values.package =\n      values.package === undefined\n        ? ''\n        : values.package.toLowerCase().trim().trimStart();\n    values.course =\n      values.course === undefined\n        ? ''\n        : values.course.toLowerCase().trim().trimStart();\n    values.knowledge =\n      values.knowledge === undefined\n        ? ''\n        : values.knowledge.toLowerCase().trim().trimStart();\n    values.manager = values.manager.toLowerCase().trim().trimStart();\n    try {\n      const response = await axios.put(`/users/${userToEdit._id}`, values);\n      console.log(response);\n      resetForm();\n      alert('Юзера відредаговано');\n      updateUser(userToEdit._id, values);\n      closeEditForm();\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialUserValues}\n        onSubmit={handleUserSubmit}\n        validationSchema={usersSchema}\n      >\n        <UsersEditForm>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Прізвище та ім'я\"\n            />\n            <AdminInputNote component=\"p\" name=\"name\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"email\"\n              name=\"mail\"\n              placeholder=\"Електронна пошта (логін)\"\n            />\n            <AdminInputNote component=\"p\" name=\"mail\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"email\" name=\"zoomMail\" placeholder=\"Zoom-пошта\" />\n            <AdminInputNote component=\"p\" name=\"zoomMail\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"password\" placeholder=\"Пароль\" />\n            <AdminInputNote component=\"p\" name=\"password\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"crmId\" placeholder=\"ID ліда в CRM\" />\n            <AdminInputNote component=\"p\" name=\"crmId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"contactId\"\n              placeholder=\"ID контакту в CRM\"\n            />\n            <AdminInputNote component=\"p\" name=\"contactId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"pupilId\"\n              placeholder=\"ID учня на платформі\"\n            />\n            <AdminInputNote component=\"p\" name=\"pupilId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"marathonNumber\"\n              placeholder=\"№ марафону на платформі\"\n            />\n            <AdminInputNote component=\"p\" name=\"marathonNumber\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"age\" placeholder=\"Вік\" />\n            <AdminInputNote component=\"p\" name=\"age\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"lang\" placeholder=\"Мова\" />\n            <AdminInputNote component=\"p\" name=\"lang\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"course\" placeholder=\"Потік\" />\n            <AdminInputNote component=\"p\" name=\"course\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"package\" placeholder=\"Пакет послуг\" />\n            <AdminInputNote component=\"p\" name=\"package\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"knowledge\"\n              placeholder=\"Рівень знань\"\n            />\n            <AdminInputNote component=\"p\" name=\"knowledge\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"manager\"\n              placeholder=\"Прізвище відповідального менеджера\"\n            />\n            <AdminInputNote component=\"p\" name=\"manager\" />\n          </Label>\n          <AdminFormBtn type=\"submit\">Підтвердити зміни</AdminFormBtn>\n        </UsersEditForm>\n      </Formik>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useEffect, useRef, useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  AdminPanelSection,\n  FilterButton,\n  FilterPicker,\n  FilterPickerButton,\n  Filterable,\n  LoginForm,\n  UserBanButton,\n  UserCell,\n  UserDBCaption,\n  UserDBRow,\n  UserDBTable,\n  UserDeleteButton,\n  UserEditButton,\n  UserHeadCell,\n  UsersForm,\n} from './UserAdminPanel.styled';\nimport { UserEditForm } from './UserEditForm/UserEditForm';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\nconst DAYS_SET = [1, 3, 7, 14, 30];\n\nconst UserAdminPanel = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [managers, setManagers] = useState([]);\n  const [levels, setLevels] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [langs, setLangs] = useState([]);\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\n  const [userToEdit, setUserToEdit] = useState({});\n  const [daysAfterLastLogin, setDaysAfterLastLogin] = useState(7);\n  const [isManagerPickerOpen, setIsManagerPickerOpen] = useState(false);\n  const [isLangPickerOpen, setIsLangPickerOpen] = useState(false);\n  const [isDaysPickerOpen, setIsDaysPickerOpen] = useState(false);\n  const [isLevelPickerOpen, setIsLevelPickerOpen] = useState(false);\n  const [isCoursePickerOpen, setIsCoursePickerOpen] = useState(false);\n\n  const persistentUsers = useRef([]);\n  const sortedUsers = useRef([]);\n  const filteredUsers = useRef([]);\n\n  useEffect(() => {\n    document.title = 'User Admin Panel | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        if (localStorage.getItem('isAdmin')) {\n          const res = await axios.post('admins/refresh/users/', {});\n          setAuthToken(res.data.newToken);\n          setIsUserAdmin(isAdmin => (isAdmin = true));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n\n    const getUsers = async () => {\n      try {\n        if (isUserAdmin) {\n          const response = await axios.get('/users/admin/');\n          setUsers(users => (users = [...response.data.reverse()]));\n          persistentUsers.current = [...response.data.reverse()];\n          setManagers(\n            managers =>\n              (managers = [\n                ...response.data\n                  .map(user => user.manager)\n                  .filter((manager, i, arr) => arr.indexOf(manager) === i)\n                  .sort(),\n              ])\n          );\n          setLevels(\n            levels =>\n              (levels = [\n                ...response.data\n                  .map(user => user.knowledge)\n                  .filter((level, i, arr) => arr.indexOf(level) === i)\n                  .sort(),\n              ])\n          );\n          setCourses(\n            courses =>\n              (courses = [\n                ...response.data\n                  .map(user => user.course)\n                  .filter((course, i, arr) => arr.indexOf(course) === i)\n                  .sort(),\n              ])\n          );\n          setLangs(\n            langs =>\n              (langs = [\n                ...response.data\n                  .map(user => user.lang)\n                  .filter((lang, i, arr) => arr.indexOf(lang) === i)\n                  .sort(),\n              ])\n          );\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getUsers();\n\n    const onEscapeClose = event => {\n      if (event.code === 'Escape') {\n        closeEditForm();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [isUserAdmin]);\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  // const calculateDaysFilter = current => {\n  //   setDaysAfterLastLogin(\n  //     days =>\n  //       (days = DAYS_SET[DAYS_SET.findIndex(days => current === days) + 1])\n  //   );\n\n  //   sortedUsers.current = [\n  //     ...users.sort(\n  //       (a, b) =>\n  //         (changeDateFormat(a.visited[a.visited.length - 1]) || 0) -\n  //         (changeDateFormat(b.visited[b.visited.length - 1]) || 0)\n  //     ),\n  //   ];\n  //   console.log(sortedUsers.current);\n  //   setUsers(users => (users = [...sortedUsers.current]));\n  // };\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2\n        ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/'))\n        : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const filterByManager = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (\n      sortedUsers.current.length > 0 &&\n      filteredUsers.current.length === 0\n    ) {\n      setUsers(\n        users =>\n          (users = [\n            ...sortedUsers.current.filter(user => user.manager === current),\n          ])\n      );\n      filteredUsers.current = [\n        ...sortedUsers.current.filter(user => user.manager === current),\n      ];\n    } else {\n      console.log('managers else');\n      console.log(filteredUsers);\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current.filter(user => user.manager === current),\n          ])\n      );\n      sortedUsers.current = [\n        ...persistentUsers.current.filter(user => user.manager === current),\n      ];\n      filteredUsers.current = [\n        ...persistentUsers.current.filter(user => user.manager === current),\n      ];\n      console.log(filteredUsers);\n    }\n  };\n\n  const filterByCourse = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (\n      sortedUsers.current.length > 0 &&\n      filteredUsers.current.length === 0\n    ) {\n      setUsers(\n        users =>\n          (users = [\n            ...sortedUsers.current.filter(user => user.course === current),\n          ])\n      );\n      filteredUsers.current = [\n        ...sortedUsers.current.filter(user => user.course === current),\n      ];\n    } else {\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current.filter(user => user.course === current),\n          ])\n      );\n      sortedUsers.current = [\n        ...persistentUsers.current.filter(user => user.course === current),\n      ];\n      filteredUsers.current = [\n        ...persistentUsers.current.filter(user => user.course === current),\n      ];\n    }\n  };\n\n  const filterByLang = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (\n      sortedUsers.current.length > 0 &&\n      filteredUsers.current.length === 0\n    ) {\n      setUsers(\n        users =>\n          (users = [\n            ...sortedUsers.current.filter(user => user.lang === current),\n          ])\n      );\n      filteredUsers.current = [\n        ...sortedUsers.current.filter(user => user.lang === current),\n      ];\n    } else {\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current.filter(user => user.lang === current),\n          ])\n      );\n      sortedUsers.current = [\n        ...persistentUsers.current.filter(user => user.lang === current),\n      ];\n      filteredUsers.current = [\n        ...persistentUsers.current.filter(user => user.lang === current),\n      ];\n    }\n  };\n\n  const filterByDays = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      console.log(\"current === '' && sortedUsers.current.length === 0\");\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (filteredUsers.current.length > 0) {\n      setUsers(\n        users =>\n          (users = [\n            ...filteredUsers.current\n              .filter(user =>\n                user.visited.length > 0\n                  ? (Date.now() -\n                      changeDateFormat(user.visited[user.visited.length - 1])) /\n                      86400000 >\n                    current\n                  : 0\n              )\n              .sort(\n                (a, b) =>\n                  (changeDateFormat(a.visited[a.visited.length - 1]) || 0) -\n                  (changeDateFormat(b.visited[b.visited.length - 1]) || 0)\n              ),\n          ])\n      );\n    } else {\n      console.log('else');\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current\n              .filter(user =>\n                user.visited.length > 0\n                  ? (Date.now() -\n                      changeDateFormat(user.visited[user.visited.length - 1])) /\n                      86400000 >\n                    current\n                  : 0\n              )\n              .sort(\n                (a, b) =>\n                  (changeDateFormat(b.visited[b.visited.length - 1]) || 0) -\n                  (changeDateFormat(a.visited[a.visited.length - 1]) || 0)\n              ),\n          ])\n      );\n    }\n  };\n\n  const filterByLevel = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (\n      sortedUsers.current.length > 0 &&\n      filteredUsers.current.length === 0\n    ) {\n      setUsers(\n        users =>\n          (users = [\n            ...sortedUsers.current.filter(user => user.knowledge === current),\n          ])\n      );\n      filteredUsers.current = [\n        ...sortedUsers.current.filter(user => user.knowledge === current),\n      ];\n    } else {\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current.filter(\n              user => user.knowledge === current\n            ),\n          ])\n      );\n      sortedUsers.current = [\n        ...persistentUsers.current.filter(user => user.knowledge === current),\n      ];\n      filteredUsers.current = [\n        ...persistentUsers.current.filter(user => user.knowledge === current),\n      ];\n    }\n  };\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.post('/admins/login/users', values);\n      setAuthToken(response.data.token);\n      setIsUserAdmin(isAdmin => (isAdmin = true));\n      localStorage.setItem('isAdmin', true);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const initialUserValues = {\n    name: '',\n    mail: '',\n    zoomMail: '',\n    password: '',\n    crmId: '',\n    contactId: '',\n    pupilId: '',\n    marathonNumber: '',\n    age: '',\n    adult: true,\n    lang: '',\n    course: '',\n    package: '',\n    knowledge: '',\n    manager: '',\n  };\n\n  const usersSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required(\n        \"Ім'я - обов'язкове поле, якщо імені з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    mail: yup.string().required(\"Пошта - обов'язкове поле!\"),\n    zoomMail: yup.string(),\n    password: yup.string().required(\"Пароль - обов'язкове поле!\"),\n    crmId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    contactId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    pupilId: yup\n      .string()\n      .min(6, 'Не менше 6 цифр')\n      .max(7, 'Не більше 7 цифр')\n      .matches(/^\\d{1,7}$/, 'Лише цифри')\n      .required(\"Обов'язкове поле, дивитись на платформі\"),\n    marathonNumber: yup\n      .string()\n      .max(1, 'Не більше 1 цифри')\n      .matches(/[12]/, 'Лише цифри 1 або 2'),\n    age: yup\n      .string()\n      .required(\n        \"Вік - обов'язкове поле, якщо віку з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    lang: yup\n      .string()\n      .required(\"Мова - обов'язкове поле\")\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    course: yup\n      .string()\n      .required(\n        \"Обов'язкове поле, для тестових юзерів або нерозподілених користувачів введіть 0\"\n      ),\n    package: yup.string().optional(),\n    // .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    knowledge: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    manager: yup\n      .string()\n      .required(\"Менеджер - обов'язкове поле, введіть прізвище\"),\n  });\n\n  const handleUserSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.name = values.name.trim().trimStart();\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.zoomMail = values.zoomMail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    values.crmId = values.crmId ? +values.crmId.trim().trimStart() : undefined;\n    values.contactId = values.contactId\n      ? +values.contactId.trim().trimStart()\n      : undefined;\n    values.pupilId = values.pupilId.trim().trimStart();\n    values.marathonNumber = values.marathonNumber.trim().trimStart();\n    values.age = values.age.trim().trimStart();\n    values.adult = +values.age >= 18 ? true : false;\n    values.lang = values.lang.toLowerCase().trim().trimStart();\n    values.package = values.package.toLowerCase().trim().trimStart();\n    values.knowledge = values.knowledge.toLowerCase().trim().trimStart();\n    values.manager = values.manager.toLowerCase().trim().trimStart();\n    try {\n      const response = await axios.post('/users/new', values);\n      console.log(response.data);\n      setUsers(users => [response.data, ...users]);\n      resetForm();\n      alert('Юзера додано');\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const handleEdit = async id => {\n    setIsEditFormOpen(true);\n    setUserToEdit(\n      userToEdit => (userToEdit = users.find(user => user._id === id))\n    );\n  };\n\n  const closeEditForm = e => {\n    setIsEditFormOpen(false);\n  };\n\n  const closeEditFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditFormOpen(false);\n    }\n  };\n\n  const updateUser = (id, values) => {\n    const userToUpdate = users.find(user => user._id === id);\n    userToUpdate.name = values.name;\n    userToUpdate.mail = values.mail;\n    userToUpdate.zoomMail = values.zoomMail;\n    userToUpdate.password = values.password;\n    userToUpdate.pupilId = values.pupilId;\n    userToUpdate.marathonNumber = values.marathonNumber;\n    userToUpdate.crmId = values.crmId;\n    userToUpdate.contactId = values.contactId;\n    userToUpdate.age = values.age;\n    userToUpdate.adult = values.adult;\n    userToUpdate.lang = values.lang;\n    userToUpdate.package = values.package;\n    userToUpdate.course = values.course;\n    userToUpdate.knowledge = values.knowledge;\n    userToUpdate.manager = values.manager;\n\n    console.log(userToUpdate);\n\n    setUsers(\n      users =>\n        (users = users.map((user, i) =>\n          i === users.findIndex(user => user._id === id) ? userToUpdate : user\n        ))\n    );\n  };\n\n  const toggleDaysSinceLastVisitPicker = () => {\n    setIsDaysPickerOpen(isOpen => !isOpen);\n  };\n\n  const toggleLevelPicker = () => {\n    setIsLevelPickerOpen(isOpen => !isOpen);\n  };\n\n  const toggleCoursePicker = () => {\n    setIsCoursePickerOpen(isOpen => !isOpen);\n  };\n\n  const toggleLangPicker = () => {\n    setIsLangPickerOpen(isOpen => !isOpen);\n  };\n\n  const toggleManagerPicker = () => {\n    setIsManagerPickerOpen(isOpen => !isOpen);\n  };\n\n  const handleDelete = async id => {\n    setIsLoading(isLoading => (isLoading = true));\n    const areYouSure = window.confirm(\n      `Точно видалити ${users.find(user => user._id === id).name}?`\n    );\n\n    if (!areYouSure) {\n      setIsLoading(isLoading => (isLoading = false));\n      return;\n    } else {\n      try {\n        const response = await axios.delete(`/users/${id}`);\n        console.log(response);\n        alert('Юзера видалено');\n        setUsers(users => (users = [...users.filter(user => user._id !== id)]));\n      } catch (error) {\n        console.error(error);\n        alert(\n          'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n        );\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    }\n  };\n\n  const handleBan = async (id, isBanned) => {\n    setIsLoading(isLoading => (isLoading = true));\n\n    try {\n      const response = await axios.patch(\n        `/users/${id}`,\n        isBanned ? { isBanned: false } : { isBanned: true }\n      );\n      console.log(response);\n      isBanned ? alert('Юзера розблоковано') : alert('Юзера заблоковано');\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        {!isUserAdmin && (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Login\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Залогінитись</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        )}\n\n        {isUserAdmin && (\n          <Formik\n            initialValues={initialUserValues}\n            onSubmit={handleUserSubmit}\n            validationSchema={usersSchema}\n          >\n            <UsersForm>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Прізвище та ім'я\"\n                />\n                <AdminInputNote component=\"p\" name=\"name\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"email\"\n                  name=\"mail\"\n                  placeholder=\"Електронна пошта (логін)\"\n                />\n                <AdminInputNote component=\"p\" name=\"mail\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"email\"\n                  name=\"zoomMail\"\n                  placeholder=\"Електронна пошта (Zoom)\"\n                />\n                <AdminInputNote component=\"p\" name=\"zoomMail\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"password\" placeholder=\"Пароль\" />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"crmId\"\n                  placeholder=\"ID ліда в CRM\"\n                />\n                <AdminInputNote component=\"p\" name=\"crmId\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"contactId\"\n                  placeholder=\"ID контакту в CRM\"\n                />\n                <AdminInputNote component=\"p\" name=\"contactId\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"pupilId\"\n                  placeholder=\"ID учня на платформі\"\n                />\n                <AdminInputNote component=\"p\" name=\"pupilId\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"marathonNumber\"\n                  placeholder=\"№ марафону на платформі\"\n                />\n                <AdminInputNote component=\"p\" name=\"marathonNumber\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"age\" placeholder=\"Вік\" />\n                <AdminInputNote component=\"p\" name=\"age\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"lang\" placeholder=\"Мова\" />\n                <AdminInputNote component=\"p\" name=\"lang\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"course\" placeholder=\"Потік\" />\n                <AdminInputNote component=\"p\" name=\"course\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"package\"\n                  placeholder=\"Пакет послуг\"\n                />\n                <AdminInputNote component=\"p\" name=\"package\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"knowledge\"\n                  placeholder=\"Рівень знань\"\n                />\n                <AdminInputNote component=\"p\" name=\"knowledge\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"manager\"\n                  placeholder=\"Прізвище відповідального менеджера\"\n                />\n                <AdminInputNote component=\"p\" name=\"manager\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Додати юзера</AdminFormBtn>\n            </UsersForm>\n          </Formik>\n        )}\n        {isUserAdmin && users && (\n          <UserDBTable>\n            <UserDBCaption>Список юзерів з доступом до уроків</UserDBCaption>\n            <thead>\n              <UserDBRow>\n                <UserHeadCell>CRM&nbsp;Лід Контакт</UserHeadCell>\n                <UserHeadCell>Ім'я</UserHeadCell>\n                <UserHeadCell>Пошта (логін)</UserHeadCell>\n                <UserHeadCell>Zoom-пошта</UserHeadCell>\n                <UserHeadCell>Пароль</UserHeadCell>\n                <UserHeadCell>ID на платформі</UserHeadCell>\n                <UserHeadCell>Номер марафону</UserHeadCell>\n                <UserHeadCell>Юзера створено</UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>\n                    Відвідини\n                    <FilterButton\n                      onClick={toggleDaysSinceLastVisitPicker}\n                    ></FilterButton>\n                    {isDaysPickerOpen && (\n                      <FilterPicker>\n                        {DAYS_SET.map((days, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByDays(days);\n                              setDaysAfterLastLogin(days);\n                              toggleDaysSinceLastVisitPicker();\n                            }}\n                          >\n                            {days === undefined ? '—' : days}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByDays('');\n                            setDaysAfterLastLogin(7);\n                            toggleDaysSinceLastVisitPicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                    {daysAfterLastLogin}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>Відвідини з часом</Filterable>\n                </UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>\n                    Мова\n                    <FilterButton onClick={toggleLangPicker}></FilterButton>\n                    {isLangPickerOpen && (\n                      <FilterPicker>\n                        {langs.map((lang, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByLang(lang);\n                              toggleLangPicker();\n                            }}\n                          >\n                            {lang === undefined ? '—' : lang}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByLang('');\n                            toggleLangPicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>\n                    Потік\n                    <FilterButton onClick={toggleCoursePicker}></FilterButton>\n                    {isCoursePickerOpen && (\n                      <FilterPicker>\n                        {courses.map((course, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByCourse(course);\n                              toggleCoursePicker();\n                            }}\n                          >\n                            {course === undefined ? '—' : course}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByCourse('');\n                            toggleCoursePicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>\n                    Знання\n                    <FilterButton onClick={toggleLevelPicker}></FilterButton>\n                    {isLevelPickerOpen && (\n                      <FilterPicker>\n                        {levels.map((level, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByLevel(level);\n                              toggleLevelPicker();\n                            }}\n                          >\n                            {level === undefined ? '—' : level}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByLevel('');\n                            toggleLevelPicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>Пакет послуг</UserHeadCell>\n                <UserHeadCell className=\"filterable\">\n                  <Filterable>\n                    Менеджер\n                    <FilterButton onClick={toggleManagerPicker}></FilterButton>\n                    {isManagerPickerOpen && (\n                      <FilterPicker>\n                        {managers.map((manager, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByManager(manager);\n                              toggleManagerPicker();\n                            }}\n                          >\n                            {manager === undefined ? '—' : manager}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByManager('');\n                            toggleManagerPicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>Edit</UserHeadCell>\n                <UserHeadCell>Delete</UserHeadCell>\n                <UserHeadCell>Ban</UserHeadCell>\n              </UserDBRow>\n            </thead>\n            <tbody>\n              {users.map(user => (\n                <UserDBRow key={user._id}>\n                  <UserCell>\n                    <a\n                      href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {user.crmId}\n                    </a>{' '}\n                    <a\n                      href={`https://apeducation.kommo.com/contacts/detail/${user.contactId}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {user.contactId}\n                    </a>\n                  </UserCell>\n                  <UserCell>{user.name}</UserCell>\n                  <UserCell>{user.mail}</UserCell>\n                  <UserCell>{user.zoomMail}</UserCell>\n                  <UserCell>{user.password}</UserCell>\n                  <UserCell>{user.pupilId}</UserCell>\n                  <UserCell>{user.marathonNumber}</UserCell>\n                  <UserCell>\n                    {new Date(user.createdAt).toLocaleDateString('uk-UA')}\n                  </UserCell>\n                  <UserCell\n                    className={\n                      Math.floor(\n                        (Date.now() -\n                          changeDateFormat(\n                            user.visited[user.visited.length - 1]\n                          )) /\n                          86400000\n                      ) > daysAfterLastLogin\n                        ? 'attention'\n                        : ''\n                    }\n                  >\n                    {user.visited[user.visited.length - 1]}\n                  </UserCell>\n                  <UserCell>\n                    {!user.visitedTime[user.visitedTime.length - 1]\n                      ? ''\n                      : user.visitedTime[user.visitedTime.length - 1].match(\n                          '^202'\n                        )\n                      ? new Date(\n                          user.visitedTime[user.visitedTime.length - 1]\n                        ).toLocaleString('uk-UA')\n                      : new Date(\n                          changeDateFormat(\n                            user.visitedTime[user.visitedTime.length - 1]\n                          )\n                        ).toLocaleString('uk-UA', { timeZone: '+06:00' })}\n                  </UserCell>\n                  <UserCell>{user.lang}</UserCell>\n                  <UserCell>{user.course}</UserCell>\n                  <UserCell\n                    className={user.knowledge?.includes('а') && 'error'}\n                  >\n                    {user.knowledge}\n                  </UserCell>\n                  <UserCell>{user.package}</UserCell>\n                  <UserCell className=\"last-name\">{user.manager}</UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserEditButton onClick={() => handleEdit(user._id)}>\n                        Edit\n                      </UserEditButton>\n                    )}\n                  </UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserDeleteButton onClick={() => handleDelete(user._id)}>\n                        Del\n                      </UserDeleteButton>\n                    )}\n                  </UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserBanButton\n                        className={user.isBanned ? 'banned' : 'not_banned'}\n                        onClick={() => handleBan(user._id, user.isBanned)}\n                      >\n                        {user.isBanned ? 'Unban' : 'Ban'}\n                      </UserBanButton>\n                    )}\n                  </UserCell>\n                </UserDBRow>\n              ))}\n            </tbody>\n          </UserDBTable>\n        )}\n        {isEditFormOpen && (\n          <Backdrop onMouseDown={closeEditFormOnClick} id=\"close-on-click\">\n            <UserEditForm\n              userToEdit={userToEdit}\n              updateUser={updateUser}\n              closeEditForm={closeEditForm}\n            />\n          </Backdrop>\n        )}\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n\nexport default UserAdminPanel;\n"],"names":["axios","UserEditForm","_ref","userToEdit","updateUser","closeEditForm","isLoading","setIsLoading","useState","initialUserValues","crmId","contactId","name","mail","zoomMail","password","pupilId","marathonNumber","adult","age","lang","course","package","knowledge","manager","usersSchema","yup","shape","required","matches","min","max","optional","_jsxs","_Fragment","children","_jsx","Formik","initialValues","onSubmit","async","values","_ref2","resetForm","trim","trimStart","toLowerCase","undefined","response","concat","_id","console","log","alert","error","validationSchema","UsersEditForm","Label","AdminInput","type","placeholder","AdminInputNote","component","AdminFormBtn","Loader","setAuthToken","token","DAYS_SET","UserAdminPanel","isUserAdmin","setIsUserAdmin","users","setUsers","managers","setManagers","levels","setLevels","courses","setCourses","langs","setLangs","isEditFormOpen","setIsEditFormOpen","setUserToEdit","daysAfterLastLogin","setDaysAfterLastLogin","isManagerPickerOpen","setIsManagerPickerOpen","isLangPickerOpen","setIsLangPickerOpen","isDaysPickerOpen","setIsDaysPickerOpen","isLevelPickerOpen","setIsLevelPickerOpen","isCoursePickerOpen","setIsCoursePickerOpen","persistentUsers","useRef","sortedUsers","filteredUsers","useEffect","document","title","localStorage","getItem","res","data","newToken","isAdmin","refreshToken","reverse","current","map","user","filter","i","arr","indexOf","sort","level","getUsers","onEscapeClose","event","code","window","addEventListener","removeEventListener","loginSchema","login","changeDateFormat","dateString","dateArray","split","length","Date","parse","join","filterByManager","filterByCourse","filterByLang","filterByDays","visited","now","a","b","filterByLevel","e","toggleDaysSinceLastVisitPicker","isOpen","toggleLevelPicker","toggleCoursePicker","toggleLangPicker","toggleManagerPicker","AdminPanelSection","setItem","LoginForm","UsersForm","UserDBTable","UserDBCaption","UserDBRow","UserHeadCell","Filterable","FilterButton","onClick","FilterPicker","days","FilterPickerButton","className","_user$knowledge","UserCell","href","target","rel","createdAt","toLocaleDateString","Math","floor","visitedTime","match","toLocaleString","timeZone","includes","UserEditButton","find","id","handleEdit","UserDeleteButton","confirm","handleDelete","UserBanButton","isBanned","handleBan","Backdrop","onMouseDown","userToUpdate","findIndex"],"sourceRoot":""}