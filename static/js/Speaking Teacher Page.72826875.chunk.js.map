{"version":3,"file":"static/js/Speaking Teacher Page.72826875.chunk.js","mappings":"2PAkBA,MA8QA,EA9Q4BA,KAC1B,MAAMC,GAAWC,EAAAA,EAAAA,MAAcC,SAASC,MAAM,eAAe,IACtDC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,KAC9BK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,CAAC,IAC7CO,EAAqBC,IAA0BR,EAAAA,EAAAA,UAAS,CAAC,IACzDS,EAAuBC,IAA4BV,EAAAA,EAAAA,WAAS,IAC5DW,EAAoBC,IAAyBZ,EAAAA,EAAAA,WAAS,GACvDa,EAAa,+BACZC,IAAeC,EAAAA,EAAAA,MAyEhBC,EAvDctB,KAClB,OAAQA,GACN,IAAK,aACH,MAAO,YACT,IAAK,eACH,MAAO,cACT,IAAK,aACH,MAAO,UACT,IAAK,iBACH,MAAO,cACT,IAAK,aACH,MAAO,YACT,IAAK,iBACH,MAAO,gBACT,IAAK,aACH,MAAO,YACT,IAAK,aACH,MAAO,YACT,IAAK,YACH,MAAO,WACT,IAAK,cACH,MAAO,aACT,IAAK,YACH,MAAO,SACT,IAAK,gBACH,MAAO,aACT,IAAK,YACH,MAAO,WACT,IAAK,YACH,MAAO,WACT,IAAK,YACH,MAAO,WACT,QACE,OAAOA,EACX,EAqBWuB,CAAYvB,GACnBwB,EAnB0BxB,IAC1BA,EAASyB,SAAS,QAChBzB,EAASyB,SAAS,OAASzB,EAASyB,SAAS,WACxC,SACEzB,EAASyB,SAAS,OAASzB,EAASyB,SAAS,UAC/C,SAEA,SAGPzB,EAASyB,SAAS,OAASzB,EAASyB,SAAS,WACxC,KACEzB,EAASyB,SAAS,OAASzB,EAASyB,SAAS,UAC/C,KAEA,KAIEC,CAAwB1B,GAuErC,OAjCA2B,EAAAA,EAAAA,YAAU,KACRC,SAASC,MAAK,oBAAAC,OAAuBR,EAAKS,oBAAmB,mBAC7BC,WAC9B,IACE3B,GAAaD,IAA0B,IAEnCM,EADK,cAATY,EACc,KACD,WAATA,EACU,YACOW,EAAAA,EAAAA,IAAU,eAAeC,KAAKC,QAAOC,GAAad,EAAKG,SAASW,EAAUC,QAAUb,IAASY,EAAUZ,OAAM,GAAGf,QACrI,MAAM6B,QAAmBL,EAAAA,EAAAA,IAAU,kBAEnCzB,GACED,GAEa,WAATe,EACI,IACKgB,EAAWJ,KAAKC,QACjBI,GAAQA,EAAK9B,OAAOgB,SAAS,OAASc,EAAK9B,OAAON,MAAM,KAAKqC,MAAKC,GAAeA,EAAYhB,SAAS,WAG1G,IAAIa,EAAWJ,KAAKC,QAAOI,GAAQA,EAAK9B,SAAWA,GAAU8B,EAAK9B,OAAON,MAAM,KAAKqC,MAAKC,GAAeA,IAAgBhC,SAElIiC,QAAQC,IAAI,MAKd,CAJE,MAAOC,GACPF,QAAQC,IAAIC,EACd,CAAC,QACCvC,GAAaD,IAA0B,GACzC,GAEFyC,EAAyB,GACxB,CAACpC,EAAQa,EAAME,KAGhBsB,EAAAA,EAAAA,MAACC,EAAAA,GAAwB,CAAAC,SAAA,EACvBF,EAAAA,EAAAA,MAACG,EAAAA,GAAsB,CAAAD,SAAA,EACrBE,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAAAH,SAAC,iNACfE,EAAAA,EAAAA,KAAA,SAAAF,UACEF,EAAAA,EAAAA,MAACM,EAAAA,GAAS,CAAAJ,SAAA,EACRE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,YACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,SACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,yBACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,UACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,WACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,4DACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,8BACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,oCACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,wEACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,kEACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,4DACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,gDACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,4DACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,sDACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,kEACdE,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CAAAL,SAAC,+CAGlBE,EAAAA,EAAAA,KAAA,SAAAF,SACGzC,EACE4B,QACCI,GACE,IAAIe,KAAS,IAAIA,KAnKNC,KACvB,GAAIA,EAAY,CACd,MAAMC,EAAYD,EAAWpD,MAAM,KACnC,OAAOqD,EAAUC,OAAS,EAAIH,KAAKI,MAAM,CAACF,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAAIG,KAAK,MAAQL,KAAKI,MAAMH,EAC9G,CACM,EA8J4BK,CAAiBrB,EAAKsB,QAAQtB,EAAKsB,QAAQJ,OAAS,MAAQ,SACjFjC,IAASe,EAAKf,MAAQe,EAAKf,KAAKrB,MAAM,KAAKqC,MAAKsB,GAAYtC,IAASsC,OACrErD,IAAW8B,EAAK9B,QAAU8B,EAAK9B,OAAON,MAAM,KAAKqC,MAAKuB,GAActD,IAAWsD,OAEnFC,MAAK,CAACC,EAAGC,IAAMC,KAAKC,SAAS,MAAMC,QAAQJ,EAAEK,KAAMJ,EAAEI,QACrDC,KAAI,CAAChC,EAAMiC,KACV1B,EAAAA,EAAAA,MAACM,EAAAA,GAAS,CAAAJ,SAAA,EACRE,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SAAEwB,EAAI,KACftB,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,UACPE,EAAAA,EAAAA,KAAA,KAAGwB,KAAI,8CAAA5C,OAAgDS,EAAKoC,OAASC,OAAO,SAASC,IAAI,aAAY7B,SAClGT,EAAKoC,WAGVzB,EAAAA,EAAAA,KAAC4B,EAAAA,GAAY,CAAA9B,SAAET,EAAK+B,QACpBpB,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SACQ,YAAdT,EAAK+B,KAAqB,MAAOpB,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,CAACC,QAASA,IAtFjDhD,WACxBpB,GAAiBD,GAAkCJ,EAAM0E,MAAKC,GAAWA,EAAQC,SAAWC,MAC5FpE,GAAyB,EAAK,EAoFiDqE,CAAkB9C,EAAK4C,QAAQnC,SAAC,YAEnGE,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,UACPE,EAAAA,EAAAA,KAACoC,EAAAA,GAAe,CAACN,QAASA,IApFfhD,WACzBlB,GAAuBD,GAA8CN,EAAM0E,MAAKC,GAAWA,EAAQC,SAAWC,MAC9GlE,GAAsB,EAAK,EAkFmBqE,CAAmBhD,EAAK4C,QAAQnC,SAAC,aAEnEE,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SACLT,EAAKiD,YAAYjD,EAAKiD,YAAY/B,OAAS,IAEzClB,EAAKiD,YAAYjD,EAAKiD,YAAY/B,OAAS,GAAGgC,MAAM,QACpD,IAAInC,KAAKf,EAAKiD,YAAYjD,EAAKiD,YAAY/B,OAAS,IAAIiC,eAAe,SAFvE,MAKNxC,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SAAET,EAAKf,QAChB0B,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SAAET,EAAK9B,UAChByC,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SAAuB,UAArBT,EAAKoD,YAA0B,+DAAoC,UAArBpD,EAAKoD,YAA0B,yDAAc,MACtGzC,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SACe,SAArBT,EAAKqD,YAAyB,6CAAiC,QAArBrD,EAAKqD,YAAwB,mDAAkC,QAArBrD,EAAKqD,YAAwB,6CAAY,MAEhI1C,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SACW,IAAjBT,EAAKsD,QAAgB,0DAAgC,IAAjBtD,EAAKsD,QAAgB,iCAA2B,IAAjBtD,EAAKsD,QAAgB,gHAAwB,MAEnH3C,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SAAiB,IAAfT,EAAKuD,MAAc,0DAA8B,IAAfvD,EAAKuD,MAAc,iCAAyB,IAAfvD,EAAKuD,MAAc,gHAAwB,MACrH5C,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SACY,IAAlBT,EAAKwD,SAAiB,0DAAiC,IAAlBxD,EAAKwD,SAAiB,iCAA4B,IAAlBxD,EAAKwD,SAAiB,gHAAwB,MAEtH7C,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SACa,IAAnBT,EAAKyD,UAAkB,0DAAkC,IAAnBzD,EAAKyD,UAAkB,iCAA6B,IAAnBzD,EAAKyD,UAAkB,gHAAwB,MAEzH9C,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAAzB,SACY,IAAlBT,EAAK0D,SAAiB,0DAAiC,IAAlB1D,EAAK0D,SAAiB,iCAA4B,IAAlB1D,EAAK0D,SAAiB,gHAAwB,MAEtH/C,EAAAA,EAAAA,KAAC4B,EAAAA,GAAY,CACXoB,wBAAyB,CACvBC,OACqD,kBAA5C5D,EAAK6D,SAAS7D,EAAK6D,SAAS3C,OAAS,GACxClB,EAAK6D,SAAS7D,EAAK6D,SAAS3C,OAAS,GAClC4C,QACClF,GACAsE,GAAK,YAAA3D,OAAgB2D,EAAK,sBAAA3D,OAAqB2D,EAAMhC,OAAS,GAAKgC,EAAMa,MAAM,EAAG,IAAM,MAAQb,EAAK,UAEtGtF,MAAM,KACNmG,MAAM,GACN3C,KAAK,KACR,QApDIpB,EAAKgE,YA4D5BxF,IACCmC,EAAAA,EAAAA,KAACsD,EAAAA,EAAQ,CAACC,YApKoBC,IACd,mBAAhBA,EAAE9B,OAAOQ,IACXpE,GAAyB,EAC3B,EAiKwDoE,GAAG,iBAAgBpC,UACrEE,EAAAA,EAAAA,KAACyD,EAAAA,EAA2B,CAC1BvF,YAAaA,EACbT,cAAeA,EACfiG,eA5JaA,CAACxB,EAAIyB,KAC1B,MAAMC,EAAevG,EAAM0E,MAAK1C,GAAQA,EAAKgE,MAAQnB,IACrD0B,EAAalB,YAAciB,EAAOjB,YAClCkB,EAAanB,YAAckB,EAAOlB,YAClCmB,EAAajB,QAAUgB,EAAOhB,QAC9BiB,EAAahB,MAAQe,EAAOf,MAC5BgB,EAAaf,SAAWc,EAAOd,SAC/Be,EAAad,UAAYa,EAAOb,UAChCc,EAAab,SAAWY,EAAOZ,SAC/Ba,EAAaV,SAAS,GAAKS,EAAOT,SAElC5F,GAASD,GAAkB,IAAIA,EAAM4B,QAAOI,GAAQA,EAAKgE,MAAQnB,IAAK0B,IAAe,EAkJ7EC,qBAnPmBL,IAC3B1F,GAAyB,EAAM,MAuP5BC,IACCiC,EAAAA,EAAAA,KAACsD,EAAAA,EAAQ,CAACC,YAzKiBC,IACX,yBAAhBA,EAAE9B,OAAOQ,IACXlE,GAAsB,EACxB,EAsKqDkE,GAAG,uBAAsBpC,UACxEE,EAAAA,EAAAA,KAAC8D,EAAAA,EAAY,CAACnG,oBAAqBA,EAAqBoG,yBAtPtCP,IACxBxF,GAAsB,EAAM,MAwPzBd,IAAa8C,EAAAA,EAAAA,KAACgE,EAAAA,EAAM,MACI,C","sources":["pages/TeacherPage/TeacherPageSpeaking.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport {\n  UserCell,\n  UserCellLeft,\n  UserChartButton,\n  UserDBCaption,\n  UserDBRow,\n  UserEditButton,\n  UserHeadCell,\n} from 'pages/Streams/UserAdminPanel/UserAdminPanel.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useOutletContext } from 'react-router-dom';\nimport { TeacherSpeakingDBSection, TeacherSpeakingDBTable } from './TeacherPage.styled';\nimport { TeacherPageSpeakingEditForm } from './TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm';\nimport { StudentChart } from './StudentChart/StudentChart';\n\nconst TeacherPageSpeaking = () => {\n  const location = useLocation().pathname.split('/speakings/')[1];\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [course, setCourse] = useState('');\n  const [studentToEdit, setStudentToEdit] = useState({});\n  const [currentStudentChart, setCurrentStudentChart] = useState({});\n  const [isEditStudentFormOpen, setIsEditStudentFormOpen] = useState(false);\n  const [isStudentChartOpen, setIsStudentChartOpen] = useState(false);\n  const linksRegex = /\\b(?:https?|ftp):\\/\\/\\S+\\b/g;\n  const [currentUser] = useOutletContext();\n\n  const closeStudentEditForm = e => {\n    setIsEditStudentFormOpen(false);\n  };\n\n  const closeStudentChart = e => {\n    setIsStudentChartOpen(false);\n  };\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2 ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/')) : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const getLocation = location => {\n    switch (location) {\n      case 'deutsch-a0':\n        return 'deutscha0';\n      case 'deutsch-a0_2':\n        return 'deutscha0_2';\n      case 'deutsch-a1':\n        return 'deutsch';\n      case 'deutsch-a1free':\n        return 'deutschfree';\n      case 'deutsch-a2':\n        return 'deutscha2';\n      case 'deutsch-a2free':\n        return 'deutscha2free';\n      case 'deutsch-b1':\n        return 'deutschb1';\n      case 'deutsch-b2':\n        return 'deutschb2';\n      case 'polski-a0':\n        return 'polskia0';\n      case 'polski-a0_2':\n        return 'polskia0_2';\n      case 'polski-a1':\n        return 'polski';\n      case 'polski-a1free':\n        return 'polskifree';\n      case 'polski-a2':\n        return 'polskia2';\n      case 'polski-b1':\n        return 'polskib1';\n      case 'polski-b2':\n        return 'polskib2';\n      default:\n        return location;\n    }\n  };\n\n  const getLanguageFromLocation = location => {\n    if (location.includes('kids')) {\n      if (location.includes('de') || location.includes('deutsch')) {\n        return 'dekids';\n      } else if (location.includes('pl') || location.includes('polski')) {\n        return 'plkids';\n      } else {\n        return 'enkids';\n      }\n    }\n    if (location.includes('de') || location.includes('deutsch')) {\n      return 'de';\n    } else if (location.includes('pl') || location.includes('polski')) {\n      return 'pl';\n    } else {\n      return 'en';\n    }\n  };\n  const page = getLocation(location);\n  const lang = getLanguageFromLocation(location);\n\n  const closeEditStudentFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditStudentFormOpen(false);\n    }\n  };\n\n  const closeStudentChartOnClick = e => {\n    if (e.target.id === 'close-chart-on-click') {\n      setIsStudentChartOpen(false);\n    }\n  };\n\n  const updateFeedback = (id, values) => {\n    const userToUpdate = users.find(user => user._id === id);\n    userToUpdate.successRate = values.successRate;\n    userToUpdate.temperament = values.temperament;\n    userToUpdate.grammar = values.grammar;\n    userToUpdate.lexis = values.lexis;\n    userToUpdate.speaking = values.speaking;\n    userToUpdate.listening = values.listening;\n    userToUpdate.activity = values.activity;\n    userToUpdate.feedback[0] = values.feedback;\n\n    setUsers(users => (users = [...users.filter(user => user._id !== id), userToUpdate]));\n  };\n\n  const handleStudentEdit = async id => {\n    setStudentToEdit(studentToEdit => (studentToEdit = users.find(student => student.userId === id)));\n    setIsEditStudentFormOpen(true);\n  };\n\n  const handleStudentChart = async id => {\n    setCurrentStudentChart(currentStudentChart => (currentStudentChart = users.find(student => student.userId === id)));\n    setIsStudentChartOpen(true);\n  };\n\n  useEffect(() => {\n    document.title = `Speaking Teacher ${page.toLocaleUpperCase()} | AP Education`;\n    const getSpeakingUsersRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        page === 'kids-c1sc'\n          ? setCourse('10')\n          : page === 'deb2sc'\n          ? setCourse('12')\n          : setCourse((await axios.get('/timetable')).data.filter(timetable => page.includes(timetable.level) && lang === timetable.lang)[0].course);\n        const usersToSet = await axios.get('/speakingusers');\n\n        setUsers(\n          users =>\n            (users =\n              page === 'deb2sc'\n                ? [\n                    ...usersToSet.data.filter(\n                      user => user.course.includes('12') || user.course.split('/').some(usersCourse => usersCourse.includes('12'))\n                    ),\n                  ]\n                : [...usersToSet.data.filter(user => user.course === course || user.course.split('/').some(usersCourse => usersCourse === course))])\n        );\n        console.log('eff');\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getSpeakingUsersRequest();\n  }, [course, page, lang]);\n\n  return (\n    <TeacherSpeakingDBSection>\n      <TeacherSpeakingDBTable>\n        <UserDBCaption>Список студентів, що відвідали заняття</UserDBCaption>\n        <thead>\n          <UserDBRow>\n            <UserHeadCell>№</UserHeadCell>\n            <UserHeadCell>CRM</UserHeadCell>\n            <UserHeadCell>Ім'я</UserHeadCell>\n            <UserHeadCell>Edit</UserHeadCell>\n            <UserHeadCell>Chart</UserHeadCell>\n            <UserHeadCell>Відвідини</UserHeadCell>\n            <UserHeadCell>Мова</UserHeadCell>\n            <UserHeadCell>Потік</UserHeadCell>\n            <UserHeadCell>Темперамент</UserHeadCell>\n            <UserHeadCell>Успішність</UserHeadCell>\n            <UserHeadCell>Граматика</UserHeadCell>\n            <UserHeadCell>Лексика</UserHeadCell>\n            <UserHeadCell>Говоріння</UserHeadCell>\n            <UserHeadCell>Слухання</UserHeadCell>\n            <UserHeadCell>Активність</UserHeadCell>\n            <UserHeadCell>Фідбек</UserHeadCell>\n          </UserDBRow>\n        </thead>\n        <tbody>\n          {users\n            .filter(\n              user =>\n                new Date() - new Date(changeDateFormat(user.visited[user.visited.length - 1])) <= 4 * 86400000 &&\n                (lang === user.lang || user.lang.split('/').some(userLang => lang === userLang)) &&\n                (course === user.course || user.course.split('/').some(userCourse => course === userCourse))\n            )\n            .sort((a, b) => Intl.Collator('uk').compare(a.name, b.name))\n            .map((user, i) => (\n              <UserDBRow key={user._id}>\n                <UserCell>{i + 1}</UserCell>\n                <UserCell>\n                  <a href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`} target=\"_blank\" rel=\"noreferrer\">\n                    {user.crmId}\n                  </a>\n                </UserCell>\n                <UserCellLeft>{user.name}</UserCellLeft>\n                <UserCell>\n                  {user.name === 'Dev Acc' ? null : <UserEditButton onClick={() => handleStudentEdit(user.userId)}>Edit</UserEditButton>}\n                </UserCell>\n                <UserCell>\n                  <UserChartButton onClick={() => handleStudentChart(user.userId)}>Chart</UserChartButton>\n                </UserCell>\n                <UserCell>\n                  {!user.visitedTime[user.visitedTime.length - 1]\n                    ? ''\n                    : user.visitedTime[user.visitedTime.length - 1].match('^202')\n                    ? new Date(user.visitedTime[user.visitedTime.length - 1]).toLocaleString('uk-UA')\n                    : ''}\n                </UserCell>\n                <UserCell>{user.lang}</UserCell>\n                <UserCell>{user.course}</UserCell>\n                <UserCell>{user.temperament === 'extro' ? 'Екстраверт' : user.temperament === 'intro' ? 'Інтроверт' : ''}</UserCell>\n                <UserCell>\n                  {user.successRate === 'good' ? 'Сильний' : user.successRate === 'mid' ? 'Середній' : user.successRate === 'bad' ? 'Слабкий' : ''}\n                </UserCell>\n                <UserCell>\n                  {user.grammar === 3 ? 'Дуже добре' : user.grammar === 2 ? 'Добре' : user.grammar === 1 ? 'Потребує покращення' : ''}\n                </UserCell>\n                <UserCell>{user.lexis === 3 ? 'Дуже добре' : user.lexis === 2 ? 'Добре' : user.lexis === 1 ? 'Потребує покращення' : ''}</UserCell>\n                <UserCell>\n                  {user.speaking === 3 ? 'Дуже добре' : user.speaking === 2 ? 'Добре' : user.speaking === 1 ? 'Потребує покращення' : ''}\n                </UserCell>\n                <UserCell>\n                  {user.listening === 3 ? 'Дуже добре' : user.listening === 2 ? 'Добре' : user.listening === 1 ? 'Потребує покращення' : ''}\n                </UserCell>\n                <UserCell>\n                  {user.activity === 3 ? 'Дуже добре' : user.activity === 2 ? 'Добре' : user.activity === 1 ? 'Потребує покращення' : ''}\n                </UserCell>\n                <UserCellLeft\n                  dangerouslySetInnerHTML={{\n                    __html:\n                      typeof user.feedback[user.feedback.length - 1] === 'string'\n                        ? user.feedback[user.feedback.length - 1]\n                            .replace(\n                              linksRegex,\n                              match => `<a href=\"${match}\" target=\"_blank\">${match.length > 50 ? match.slice(0, 50) + '...' : match}</a>`\n                            )\n                            .split(' ')\n                            .slice(1)\n                            .join(' ')\n                        : '',\n                  }}\n                ></UserCellLeft>\n              </UserDBRow>\n            ))}\n        </tbody>\n      </TeacherSpeakingDBTable>\n\n      {isEditStudentFormOpen && (\n        <Backdrop onMouseDown={closeEditStudentFormOnClick} id=\"close-on-click\">\n          <TeacherPageSpeakingEditForm\n            currentUser={currentUser}\n            studentToEdit={studentToEdit}\n            updateFeedback={updateFeedback}\n            closeStudentEditForm={closeStudentEditForm}\n          />\n        </Backdrop>\n      )}\n\n      {isStudentChartOpen && (\n        <Backdrop onMouseDown={closeStudentChartOnClick} id=\"close-chart-on-click\">\n          <StudentChart currentStudentChart={currentStudentChart} closeCourseLevelEditForm={closeStudentChart} />\n        </Backdrop>\n      )}\n      {isLoading && <Loader />}\n    </TeacherSpeakingDBSection>\n  );\n};\n\nexport default TeacherPageSpeaking;\n"],"names":["TeacherPageSpeaking","location","useLocation","pathname","split","isLoading","setIsLoading","useState","users","setUsers","course","setCourse","studentToEdit","setStudentToEdit","currentStudentChart","setCurrentStudentChart","isEditStudentFormOpen","setIsEditStudentFormOpen","isStudentChartOpen","setIsStudentChartOpen","linksRegex","currentUser","useOutletContext","page","getLocation","lang","includes","getLanguageFromLocation","useEffect","document","title","concat","toLocaleUpperCase","async","axios","data","filter","timetable","level","usersToSet","user","some","usersCourse","console","log","error","getSpeakingUsersRequest","_jsxs","TeacherSpeakingDBSection","children","TeacherSpeakingDBTable","_jsx","UserDBCaption","UserDBRow","UserHeadCell","Date","dateString","dateArray","length","parse","join","changeDateFormat","visited","userLang","userCourse","sort","a","b","Intl","Collator","compare","name","map","i","UserCell","href","crmId","target","rel","UserCellLeft","UserEditButton","onClick","find","student","userId","id","handleStudentEdit","UserChartButton","handleStudentChart","visitedTime","match","toLocaleString","temperament","successRate","grammar","lexis","speaking","listening","activity","dangerouslySetInnerHTML","__html","feedback","replace","slice","_id","Backdrop","onMouseDown","e","TeacherPageSpeakingEditForm","updateFeedback","values","userToUpdate","closeStudentEditForm","StudentChart","closeCourseLevelEditForm","Loader"],"sourceRoot":""}