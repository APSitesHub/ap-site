{"version":3,"file":"static/js/Speakings teacher page.336403c7.chunk.js","mappings":"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","sources":["pages/Streams/Speakings.jsx"],"sourcesContent":["import axios from 'axios';\nimport { StreamsBackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { LoaderWrapper } from 'components/SharedLayout/Loaders/Loader.styled';\nimport { Formik } from 'formik';\nimport { useLayoutEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport * as yup from 'yup';\nimport {\n  LoginErrorNote,\n  LoginInput,\n  LoginInputNote,\n  LoginLogo,\n  StreamAuthText,\n  StreamAuthTextHello,\n} from '../../components/Stream/Stream.styled';\nimport { AdminFormBtn, LoginForm } from './AdminPanel/AdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst Speakings = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isUserLogged, setIsUserLogged] = useState(false);\n  const [isUserInfoIncorrect, setIsUserInfoIncorrect] = useState(false);\n\n  const wakeupRequest = async () => {\n    try {\n      const wake = await axios.get('/');\n      console.log(wake.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    values.login = values.login.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    try {\n      const response = await axios.post('/teachers/login', values);\n      setAuthToken(response.data.token);\n      setIsUserLogged(isLogged => (isLogged = true));\n      setCurrentUser(currentUser => (currentUser = response.data.teacher));\n      localStorage.setItem('teacherLogin', values.login);\n      setIsUserInfoIncorrect(false);\n      resetForm();\n    } catch (error) {\n      error.response.status === 401 && setIsUserInfoIncorrect(true);\n      console.error(error);\n    }\n  };\n\n  useLayoutEffect(() => {\n    wakeupRequest();\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      if (localStorage.getItem('teacherLogin')) {\n        try {\n          setIsLoading(true);\n          const res = await axios.post('/teachers/refresh', {\n            login: localStorage.getItem('teacherLogin'),\n          });\n\n          setAuthToken(res.data.token);\n          setCurrentUser(currentUser => (currentUser = res.data.teacher));\n          setIsUserLogged(isLogged => (isLogged = true));\n        } catch (error) {\n          console.log(error);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    refreshToken();\n  }, []);\n\n  return (\n    <>\n      <StreamsBackgroundWrapper>\n        {!isUserLogged ? (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <LoginLogo />\n              <StreamAuthText>\n                <StreamAuthTextHello>Привіт!</StreamAuthTextHello>\n                Це сторінка для викладачів. <br />\n                Якщо ви викладач, введіть ваші логін та пароль.\n              </StreamAuthText>\n              <Label>\n                <LoginInput\n                  type=\"text\"\n                  name=\"login\"\n                  placeholder=\"Login\"\n                  onBlur={() => setIsUserInfoIncorrect(false)}\n                />\n                <LoginInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <LoginInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onBlur={() => setIsUserInfoIncorrect(false)}\n                />\n                <LoginInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Увійти</AdminFormBtn>\n              <LoginErrorNote\n                style={\n                  isUserInfoIncorrect ? { opacity: '1' } : { opacity: '0' }\n                }\n              >\n                Логін або пароль введено неправильно!\n              </LoginErrorNote>\n            </LoginForm>\n          </Formik>\n        ) : (\n          <Outlet context={[currentUser]} />\n        )}\n\n        {isLoading && (\n          <LoaderWrapper>\n            <Loader />\n          </LoaderWrapper>\n        )}\n      </StreamsBackgroundWrapper>\n    </>\n  );\n};\n\nexport default Speakings;\n"],"names":["axios","setAuthToken","token","concat","Speakings","isLoading","setIsLoading","useState","currentUser","setCurrentUser","isUserLogged","setIsUserLogged","isUserInfoIncorrect","setIsUserInfoIncorrect","loginSchema","yup","shape","login","required","password","useLayoutEffect","async","wake","console","log","data","error","wakeupRequest","localStorage","getItem","res","teacher","isLogged","refreshToken","_jsx","_Fragment","children","_jsxs","StreamsBackgroundWrapper","Outlet","context","Formik","initialValues","onSubmit","values","_ref","resetForm","toLowerCase","trim","trimStart","response","setItem","status","validationSchema","LoginForm","LoginLogo","StreamAuthText","StreamAuthTextHello","Label","LoginInput","type","name","placeholder","onBlur","LoginInputNote","component","AdminFormBtn","LoginErrorNote","style","opacity","LoaderWrapper","Loader"],"sourceRoot":""}