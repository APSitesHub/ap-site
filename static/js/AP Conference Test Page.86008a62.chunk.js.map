{"version":3,"file":"static/js/AP Conference Test Page.86008a62.chunk.js","mappings":"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","sources":["pages/MyAP/My Platform/TestPlatform.jsx","pages/MyAP/ConferenceTest.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { toZonedTime } from 'date-fns-tz';\nimport { differenceInSeconds } from 'date-fns';\nimport {\n  MyAPBackground,\n  MyPlatformBox,\n  TestLogo,\n  TestPlatformSpoiler,\n} from './MyPlatform.styled';\n\nexport const TestPlatform = ({ platformLink, handleExit }) => {\n  const [src, setSrc] = useState('https://online.ap.education/school/');\n  const location = useLocation().search.slice(1);\n\n  // Стейт для таймера\n  const [timeLeft, setTimeLeft] = useState(0); // Початкове значення час в секундах\n\n  useEffect(() => {\n    const setIframeSRC = () => {\n      !platformLink && !location\n        ? setSrc('https://online.ap.education/school/')\n        : !location\n          ? setSrc(platformLink)\n          : setSrc(location);\n    };\n\n    setIframeSRC();\n  }, [platformLink, location]);\n\n  useEffect(() => {\n    const targetDate = new Date('2024-12-14T14:15:00+02:00'); // Цільова дата 16:30 13.12.2024\n    const updateTimeLeft = () => {\n      const kyivTime = new Date();\n      const kyivTimeInZone = toZonedTime(kyivTime, 'Europe/Kiev'); // Поточний час в Києві\n      const timeDifferenceInSeconds = differenceInSeconds(\n        targetDate,\n        kyivTimeInZone\n      ); // Різниця в секундах\n\n      setTimeLeft(timeDifferenceInSeconds);\n\n      // Якщо таймер досяг нуля, викликаємо функцію handleExit\n      if (timeDifferenceInSeconds <= 0) {\n        handleExit();\n      }\n    };\n\n    updateTimeLeft(); // Оновлюємо час при першому рендері\n\n    // Оновлюємо час кожну секунду\n    const timer = setInterval(() => {\n      updateTimeLeft();\n    }, 1000);\n\n    // Очищаємо таймер при розмонтажуванні компоненти\n    return () => clearInterval(timer);\n  }, [handleExit]); // Залежність від handleExit, щоб пересвідчитись, що функція не змінюється\n\n  // Функція для форматування часу в хвилини і секунди\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  return (\n    <MyAPBackground>\n      <TestPlatformSpoiler>\n        <div style={{marginLeft: \"20px\", fontWeight: \"700\"}}>Time Left: {formatTime(timeLeft)}</div> {/* Відображаємо таймер */}\n        <TestLogo />\n      </TestPlatformSpoiler>\n      <MyPlatformBox>\n        <iframe\n          id=\"platform-window\"\n          title=\"platform-pin\"\n          src={src}\n          width=\"100%\"\n          height=\"100%\"\n          allow=\"microphone *\"\n        ></iframe>\n      </MyPlatformBox>\n    </MyAPBackground>\n  );\n};\n","import axios from 'axios';\nimport {\n  Label,\n  LeftFormBackgroundStar,\n  RightFormBackgroundStar,\n} from 'components/LeadForm/LeadForm.styled';\nimport {\n  LoginErrorNote,\n  LoginFormText,\n  StreamSection,\n} from 'components/Stream/Stream.styled';\nimport { Formik } from 'formik';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  LoginForm,\n} from 'pages/Streams/AdminPanel/AdminPanel.styled';\nimport { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport { TestPlatform } from './My Platform/TestPlatform';\nimport { toZonedTime } from 'date-fns-tz';\nimport { differenceInSeconds } from 'date-fns';\n\nconst ConferenceTest = () => {\n  const [isUserLogged, setIsUserLogged] = useState(false);\n  const [user, setUser] = useState({});\n  const [language, setLanguage] = useState('');\n  const [platformLink, setPlatformLink] = useState(\n    `https://online.ap.education/`\n  );\n  const [isBefore13, setIsBefore13] = useState(true); // Стейт для перевірки часу\n  const [isAter14, setIsAter14] = useState(false);\n  const [isTestStarted, setIsTestStarted] = useState(false); // Стейт для того, щоб відобразити TestPlatform\n  const [testEnded, setTestEnded] = useState(false); // Стейт для завершення тесту\n  // eslint-disable-next-line\n  const [startTime, setStartTime] = useState(null); // Час початку тесту\n  const [isUserInfoIncorrect, setIsUserInfoIncorrect] = useState(false);\n\n  axios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\n  useEffect(() => {\n    document.title = 'My AP | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        const res = await axios.post('/users/refresh', {\n          mail: localStorage.getItem('mail'),\n        });\n        setIsUserLogged(isLogged => (isLogged = true));\n        console.log(73, res.data.user.platformToken);\n        setUser(user => (user = { ...res.data.user }));\n        const lang = res.data.user.lang.split('/');\n        if (lang.length > 1 && !language) {\n          setLanguage(lang[0]);\n        } else if (lang.length <= 1) {\n          setLanguage(res.data.user.lang);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n\n    const setIframeLinks = async () => {\n      const LINKS = {\n        en1: user.platformToken\n          ? `https://online.ap.education/Account/LoginByToken?token=${\n              user.platformToken\n            }&redirectUrl=${encodeURIComponent(\n              `https://online.ap.education/MarathonClass/?marathonId=37835&pupilId=${user.pupilId}&marathonLessonId=1157251`\n            )}`\n          : `https://online.ap.education/MarathonClass/?marathonId=37835&pupilId=${user.pupilId}&marathonLessonId=1157251`,\n        en2: user.platformToken\n          ? `https://online.ap.education/Account/LoginByToken?token=${\n              user.platformToken\n            }&redirectUrl=${encodeURIComponent(\n              `https://online.ap.education/MarathonClass/?marathonId=49509&pupilId=${user.pupilId}&marathonLessonId=1157255`\n            )}`\n          : `https://online.ap.education/MarathonClass/?marathonId=49509&pupilId=${user.pupilId}&marathonLessonId=1157255`,\n\n        enkids1: user.platformToken\n          ? `https://online.ap.education/Account/LoginByToken?token=${\n              user.platformToken\n            }&redirectUrl=${encodeURIComponent(\n              `https://online.ap.education/MarathonClass/?marathonId=40552&pupilId=${user.pupilId}&marathonLessonId=1157234`\n            )}`\n          : `https://online.ap.education/MarathonClass/?marathonId=40552&pupilId=${user.pupilId}&marathonLessonId=1157234`,\n        enkids2: user.platformToken\n          ? `https://online.ap.education/Account/LoginByToken?token=${\n              user.platformToken\n            }&redirectUrl=${encodeURIComponent(\n              `https://online.ap.education/MarathonClass/?marathonId=50784&pupilId=${user.pupilId}&marathonLessonId=1157243`\n            )}`\n          : `https://online.ap.education/MarathonClass/?marathonId=50784&pupilId=${user.pupilId}&marathonLessonId=1157243`,\n      };\n\n      const marathonLink =\n        language === 'en' && user.marathonNumber === '1'\n          ? 'en1'\n          : language === 'en' && user.marathonNumber === '2'\n            ? 'en2'\n            : language === 'en' && !user.marathonNumber\n              ? 'en2'\n              : language === 'enkids' && user.marathonNumber === '1'\n                ? 'enkids1'\n                : language === 'enkids' && user.marathonNumber === '2'\n                  ? 'enkids2'\n                  : language === 'enkids' && !user.marathonNumber\n                    ? 'enkids2'\n                    : '';\n\n      console.log(LINKS[marathonLink]);\n\n      setPlatformLink(link => (link = LINKS[marathonLink]));\n    };\n\n    setIframeLinks();\n\n    // Перевірка часу в Києві\n    const checkTime = () => {\n      const kyivTime = new Date();\n      const kyivTimeInZone = toZonedTime(kyivTime, 'Europe/Kiev');\n      const targetDate = new Date('2024-12-14T13:29:30+02:00');\n      const endDate = new Date('2024-12-14T14:15:00+02:00');\n\n      const timeDifferenceInSecondsStart = differenceInSeconds(\n        targetDate,\n        kyivTimeInZone\n      );\n      const timeDifferenceInSecondsEnd = differenceInSeconds(\n        endDate,\n        kyivTimeInZone\n      );\n\n      if (timeDifferenceInSecondsStart < 0) {\n        setIsBefore13(false);\n      }\n      if (timeDifferenceInSecondsEnd <= 0) {\n        setIsAter14(true);\n      }\n    };\n    const timer = setInterval(() => {\n      checkTime();\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [language, user.pupilId, user.marathonNumber, user.platformToken]);\n\n  const setAuthToken = token => {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  };\n\n  const initialLoginValues = {\n    mail: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    mail: yup\n      .string()\n      .required('Вкажіть пошту, за якою ви зареєстровані на нашій платформі!'),\n    password: yup\n      .string()\n      .required(\n        'Введіть пароль, який ви використовуєте для входу на нашу платформу!'\n      ),\n  });\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    try {\n      const response = await axios.post('/users/login', values);\n      console.log(response);\n\n      setAuthToken(response.data.token);\n      setIsUserLogged(isLogged => (isLogged = true));\n      setUser(user => (user = { ...response.data.user }));\n      const lang = response.data.user.lang.split('/');\n      if (lang.length > 1) {\n        setLanguage(lang[0]);\n      }\n      localStorage.setItem('mail', values.mail);\n      setIsUserInfoIncorrect(false);\n      resetForm();\n    } catch (error) {\n      error.response.status === 401 && setIsUserInfoIncorrect(true);\n      console.error(error);\n    }\n  };\n\n  // Функція для початку тесту\n  const startTest = () => {\n    const currentTime = new Date().toISOString(); // Поточний час з мілісекундами\n    localStorage.setItem('testStartTime', currentTime); // Зберігаємо час початку тесту\n    setStartTime(currentTime); // Оновлюємо стейт\n    setIsTestStarted(true); // Відображаємо TestPlatform// 40 хвилин в мілісекундах\n  };\n\n  // Функція для виходу\n  const handleExit = () => {\n    localStorage.removeItem('testStartTime');\n    setTestEnded(true);\n    setIsTestStarted(false);\n  };\n\n  return (\n    <StreamSection>\n      {!isUserLogged ? (\n        <Formik\n          initialValues={initialLoginValues}\n          onSubmit={handleLoginSubmit}\n          validationSchema={loginSchema}\n        >\n          <LoginForm>\n            <LeftFormBackgroundStar />\n            <RightFormBackgroundStar />\n            <LoginFormText>\n              Привіт! Введіть дані для входу на платформу.\n            </LoginFormText>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"mail\"\n                placeholder=\"Login\"\n                onBlur={() => setIsUserInfoIncorrect(false)}\n              />\n              <AdminInputNote component=\"p\" name=\"mail\" type=\"email\" />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onBlur={() => setIsUserInfoIncorrect(false)}\n              />\n              <AdminInputNote component=\"p\" name=\"password\" />\n            </Label>\n            <AdminFormBtn type=\"submit\">Увійти</AdminFormBtn>\n            <LoginErrorNote\n              style={isUserInfoIncorrect ? { opacity: '1' } : { opacity: '0' }}\n            >\n              Логін або пароль введено неправильно!\n            </LoginErrorNote>\n          </LoginForm>\n        </Formik>\n      ) : (\n        // Заглушка та кнопка для початку тесту\n        !isTestStarted &&\n        !isAter14 &&\n        !testEnded && (\n          <div style={overlayStyle}>\n            {isBefore13 ? (\n              <div style={messageStyle}>\n                <p>\n                  Тест готується до тебе, так як ти готувався до нього. Ще трохи\n                  часу, щоб переконатися, що ти все знаєш) Скоро почнемо!\n                </p>\n              </div>\n            ) : (\n              <button onClick={startTest} style={buttonStyle}>\n                Розпочати тест\n              </button>\n            )}\n          </div>\n        )\n      )}\n\n      {isTestStarted && !testEnded && (\n        <TestPlatform platformLink={platformLink} handleExit={handleExit} />\n      )}\n\n      {/* Показуємо повідомлення про завершення тесту та пароль для виходу */}\n      {(testEnded || isAter14) && (\n        <div style={overlayStyle}>\n          <div>\n            <div style={meassgeWrapperStyle}>\n              <div style={messageStyle}>Тест завершено</div>\n              <div style={messageOuttStyle}>\n                <p>Пароль для виходу</p>\n                <p style={messagePasswordStyle}>\n                  <b>quitconf2024</b>\n                </p>\n              </div>\n            </div>\n            <div style={arrowWrapperStyle}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 32 32\"\n                width=\"32\"\n                height=\"32\"\n                style={arrowStyle}\n              >\n                <path\n                  d=\"M30 15v13.59L1.71.29.29 1.71 28.59 30H16v2h15a1 1 0 0 0 1-1V15z\"\n                  data-name=\"8-Arrow Down\"\n                />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n    </StreamSection>\n  );\n};\n\nconst overlayStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 1000,\n};\n\nconst messageStyle = {\n  color: 'white',\n  fontSize: '20px',\n  marginBottom: '20px',\n  margintLeft: '10px',\n  margintRight: '10px',\n  maxWidth: '375px',\n  textAlign: 'center',\n};\n\nconst messageOuttStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  color: 'white',\n  fontSize: '20px',\n  marginBottom: '20px',\n};\n\nconst messagePasswordStyle = {\n  fontSize: '40px',\n};\n\nconst meassgeWrapperStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '4px',\n  textAlign: 'center',\n};\n\nconst buttonStyle = {\n  padding: '10px 20px',\n  backgroundColor: '#4CAF50',\n  color: 'white',\n  border: 'none',\n  cursor: 'pointer',\n};\n\nconst arrowWrapperStyle = {\n  position: 'absolute',\n  bottom: '20px',\n  right: '20px',\n  cursor: 'pointer',\n  zIndex: 9999,\n};\n\nconst arrowStyle = {\n  fill: 'white',\n  fontWeight: 'bold', // Щоб зробити стрілку \"жирною\"\n};\nexport default ConferenceTest;\n"],"names":["TestPlatform","_ref","platformLink","handleExit","src","setSrc","useState","location","useLocation","search","slice","timeLeft","setTimeLeft","useEffect","targetDate","Date","updateTimeLeft","kyivTime","kyivTimeInZone","toZonedTime","timeDifferenceInSeconds","differenceInSeconds","timer","setInterval","clearInterval","_jsxs","MyAPBackground","children","TestPlatformSpoiler","style","marginLeft","fontWeight","time","minutes","Math","floor","seconds","concat","formatTime","_jsx","TestLogo","MyPlatformBox","id","title","width","height","allow","overlayStyle","position","top","left","backgroundColor","display","justifyContent","alignItems","zIndex","messageStyle","color","fontSize","marginBottom","margintLeft","margintRight","maxWidth","textAlign","messageOuttStyle","flexDirection","messagePasswordStyle","meassgeWrapperStyle","gap","buttonStyle","padding","border","cursor","arrowWrapperStyle","bottom","right","arrowStyle","fill","ConferenceTest","isUserLogged","setIsUserLogged","user","setUser","language","setLanguage","setPlatformLink","isBefore13","setIsBefore13","isAter14","setIsAter14","isTestStarted","setIsTestStarted","testEnded","setTestEnded","startTime","setStartTime","isUserInfoIncorrect","setIsUserInfoIncorrect","axios","document","async","console","log","res","mail","localStorage","getItem","isLogged","data","platformToken","lang","split","length","error","refreshToken","LINKS","en1","encodeURIComponent","pupilId","en2","enkids1","enkids2","marathonLink","marathonNumber","link","setIframeLinks","checkTime","endDate","timeDifferenceInSecondsStart","timeDifferenceInSecondsEnd","loginSchema","yup","shape","required","password","StreamSection","onClick","startTest","currentTime","toISOString","setItem","Formik","initialValues","onSubmit","values","resetForm","toLowerCase","trim","trimStart","response","token","status","validationSchema","LoginForm","LeftFormBackgroundStar","RightFormBackgroundStar","LoginFormText","Label","AdminInput","type","name","placeholder","onBlur","AdminInputNote","component","AdminFormBtn","LoginErrorNote","opacity","removeItem","xmlns","viewBox","d"],"sourceRoot":""}