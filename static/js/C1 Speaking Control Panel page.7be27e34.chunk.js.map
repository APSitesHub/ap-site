{"version":3,"file":"static/js/C1 Speaking Control Panel page.7be27e34.chunk.js","mappings":"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","sources":["pages/Streams/TeacherAdminPanel/TeacherAdminPanel.styled.js","pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled.js","pages/Streams/UserAdminPanel/C1SpeakingPanel.jsx","pages/Streams/UserAdminPanel/UserEditForm/UserEditForm.jsx","pages/TeacherPage/TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm.styled.js"],"sourcesContent":["import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport { SpeakingSelect } from 'pages/TeacherPage/TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm.styled';\nimport styled from 'styled-components';\nimport { ReactComponent as FilterIcon } from '../../../img/svg/filter.svg';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 20px;\n  display: flex;\n  align-items: flex-start;\n\n  gap: 30px;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const UsersForm = styled(Form)`\n  margin: 0 auto;\n\n  position: sticky;\n  top: 50%;\n\n  transform: translateY(-50%);\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const UsersEditForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  max-width: 400px;\n\n  background-color: white;\n  padding: 24px;\n  border-radius: 24px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n  height: 48px;\n  padding: 0;\n`;\n\nexport const AdminInput = styled(Input)`\n  width: 240px;\n  padding: 8px 10px;\n  font-size: 16px;\n  height: 40px;\n  -webkit-text-stroke: 0px;\n\n  border: 2px solid var(--main-color);\n\n  &.error {\n    border-color: red;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 360px;\n  }\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  color: var(--main-color);\n  font-size: 12px;\n  font-weight: 500;\n  position: static;\n  max-width: 240px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 360px;\n  }\n`;\n\nexport const UserDBTable = styled.table`\n  max-width: 50vw;\n  min-height: 80vh;\n  margin: 0 auto;\n\n  table-layout: auto;\n  width: 100%;\n\n  text-align: center;\n  border: 1px solid #000;\n  border-collapse: collapse;\n`;\n\nexport const UserDBCaption = styled.caption`\n  caption-side: top;\n  margin-bottom: 60px;\n`;\n\nexport const UserDBItemValue = styled.span`\n  font-size: 11px;\n`;\n\nexport const UserDBRow = styled.tr`\n  border: 1px solid #000;\n`;\n\nexport const UserHeadCell = styled.th`\n  border: 1px solid #000;\n  padding: 3px;\n`;\n\nexport const Filterable = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  position: relative;\n`;\n\nexport const UserCell = styled.td`\n  border: 1px solid #000;\n  padding: 3px;\n  height: 3em;\n\n  &.last-name {\n    text-transform: capitalize;\n  }\n\n  &.attention {\n    color: red;\n  }\n\n  &.error {\n    background-color: #ff0000;\n  }\n`;\n\nexport const UserCellLeft = styled(UserCell)`\n  text-align: start;\n  padding-left: 8px;\n  max-width: 50vw;\n`;\n\nexport const UserEditButton = styled.button`\n  background-color: transparent;\n  border: 1px solid var(--accent-color);\n  border-radius: 5px;\n`;\n\nexport const UserDeleteButton = styled.button`\n  background-color: transparent;\n  border: 1px solid var(--main-color);\n  border-radius: 5px;\n`;\n\nexport const UserBanButton = styled(UserDeleteButton)`\n  &.banned {\n    border-color: #023020;\n  }\n  &.not_banned {\n    border-color: #8b0000;\n  }\n`;\n\nexport const FilterButton = styled(FilterIcon)`\n  width: 18px;\n  height: 12px;\n\n  color: #000;\n\n  transition: color var(--animation-global);\n\n  &:hover {\n    color: var(--main-color);\n  }\n`;\n\nexport const FilterPicker = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n`;\n\nexport const FilterPickerButton = styled.button`\n  width: 100%;\n  text-transform: capitalize;\n`;\n\nexport const Feedback = styled.p`\n  font-size: 10px;\n  margin-bottom: 3px;\n  text-align: start;\n`;\n\nexport const TeacherTable = styled(UserDBTable)`\n  max-width: 80vw;\n`;\n\nexport const TeacherLangSelect = styled(SpeakingSelect)`\n  border-radius: 50px;\n`;\n\nexport const ErrorNote = styled.p`\n  color: var(--main-color);\n  text-align: center;\n  margin-top: 8px;\n  font-size: 12px;\n  font-weight: 500;\n  position: static;\n  max-width: 240px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 360px;\n  }\n`;\n\nexport const DateInputBox = styled.div`\n  position: absolute;\n  top: 60px;\n  left: 50%;\n\n  display: flex;\n  gap: 16px;\n\n  transform: translateX(-50%);\n`;\n\nexport const DateInputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n  position: relative;\n`;\n\nexport const DateInputSelect = styled(SpeakingSelect)`\n  width: 280px;\n  border-radius: 50px;\n`;","import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 35px;\n`;\n\nexport const LinksForm = styled(Form)`\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n`;\n\nexport const AdminInput = styled(Input)`\n  border: 2px solid var(--main-color);\n`;\n\nexport const AdminTextArea = styled(Input)`\n  border-radius: 0;\n  width: 35vw;\n  height: 75vh;\n  scrollbar-width: thin;\n  background-color: transparent;\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  position: static;\n  color: var(--main-color);\n  font-size: 24px;\n  font-weight: 700;\n  bottom: -1.1em;\n`;\n\nexport const ScheduleList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 14px;\n\n  text-transform: capitalize;\n  font-weight: 600;\n  margin-left: auto;\n`;\n\nexport const ScheduleHeading = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  margin-bottom: 12px;\n`;\n\nexport const ScheduleItem = styled.li`\n  width: 100%;\n  flex-basis: 40%;\n  flex-grow: 0;\n`;\n\nexport const ScheduleInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ScheduleData = styled.li`\n  font-size: 14px;\n  font-weight: 400;\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  padding-bottom: 5px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ScheduleDataDayText = styled.span`\n  min-width: 24px;\n`;\n\nexport const ScheduleDataTypeText = styled.span`\n  min-width: 120px;\n  text-align: center;\n`;\n\nexport const ScheduleDataTimeText = styled.span`\n  min-width: 100px;\n  text-align: center;\n`;\n\nexport const ScheduleParagraph = styled.p`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n  font-size: 14px;\n  border: 2px solid var(--main-color);\n\n  line-height: 1;\n\n  @media screen and (min-width: 768px) {\n    font-size: 19px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-burnt-color);\n    outline: transparent;\n  }\n`;\n","import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport { TeacherTable } from '../TeacherAdminPanel/TeacherAdminPanel.styled';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  AdminPanelSection,\n  LoginForm,\n  UserCell,\n  UserDBCaption,\n  UserDBRow,\n  UserDeleteButton,\n  UserEditButton,\n  UserHeadCell,\n} from './UserAdminPanel.styled';\nimport { UserEditForm } from './UserEditForm/UserEditForm';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst C1SpeakingPanel = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\n  const [userToEdit, setUserToEdit] = useState({});\n  const [date, setDate] = useState('06.01.2025');\n\n  useEffect(() => {\n    document.title = 'User Admin Panel | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        if (localStorage.getItem('isAdmin')) {\n          const res = await axios.post('admins/refresh/users/', {});\n          setAuthToken(res.data.newToken);\n          setIsUserAdmin(isAdmin => (isAdmin = true));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n\n    const getUsers = async () => {\n      try {\n        if (isUserAdmin) {\n          const response = await axios.get('/users/a-c1');\n          setUsers(users => (users = [...response.data.reverse()]));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getUsers();\n\n    const onEscapeClose = event => {\n      if (event.code === 'Escape') {\n        closeEditForm();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [isUserAdmin]);\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2\n        ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/'))\n        : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.post('/admins/login/users', values);\n      setAuthToken(response.data.token);\n      setIsUserAdmin(isAdmin => (isAdmin = true));\n      localStorage.setItem('isAdmin', true);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const handleEdit = async id => {\n    setIsEditFormOpen(true);\n    setUserToEdit(\n      userToEdit => (userToEdit = users.find(user => user._id === id))\n    );\n  };\n\n  const closeEditForm = e => {\n    setIsEditFormOpen(false);\n  };\n\n  const closeEditFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditFormOpen(false);\n    }\n  };\n\n  const updateUser = (id, values) => {\n    const userToUpdate = users.find(user => user._id === id);\n    userToUpdate.name = values.name;\n    userToUpdate.mail = values.mail;\n    userToUpdate.zoomMail = values.zoomMail;\n    userToUpdate.password = values.password;\n    userToUpdate.pupilId = values.pupilId;\n    userToUpdate.marathonNumber = values.marathonNumber;\n    userToUpdate.crmId = values.crmId;\n    userToUpdate.contactId = values.contactId;\n    userToUpdate.age = values.age;\n    userToUpdate.adult = values.adult;\n    userToUpdate.lang = values.lang;\n    userToUpdate.package = values.package;\n    userToUpdate.course = values.course;\n    userToUpdate.knowledge = values.knowledge;\n    userToUpdate.manager = values.manager;\n\n    console.log(userToUpdate);\n\n    setUsers(\n      users =>\n        (users = users.map((user, i) =>\n          i === users.findIndex(user => user._id === id) ? userToUpdate : user\n        ))\n    );\n  };\n\n  const handleDelete = async id => {\n    setIsLoading(isLoading => (isLoading = true));\n    const areYouSure = window.confirm(\n      `Точно видалити ${users.find(user => user._id === id).name}?`\n    );\n\n    if (!areYouSure) {\n      setIsLoading(isLoading => (isLoading = false));\n      return;\n    } else {\n      try {\n        const response = await axios.delete(`/users/${id}`);\n        console.log(response);\n        alert('Юзера видалено');\n        setUsers(users => (users = [...users.filter(user => user._id !== id)]));\n      } catch (error) {\n        console.error(error);\n        alert(\n          'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n        );\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    }\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        {!isUserAdmin && (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Login\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Залогінитись</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        )}\n\n        {isUserAdmin && users && (\n          <TeacherTable>\n            <UserDBCaption>\n              Юзери з додатково придбаними спікінгами від{' '}\n              <button\n                onClick={() =>\n                  setDate(date =>\n                    date === '06.01.2025' ? '05.11.2024' : '06.01.2025'\n                  )\n                }\n              >\n                {date}\n              </button>\n            </UserDBCaption>\n            <thead>\n              <UserDBRow>\n                <UserHeadCell>CRM&nbsp;Лід Контакт</UserHeadCell>\n                <UserHeadCell>Ім'я</UserHeadCell>\n                <UserHeadCell>Пошта (логін)</UserHeadCell>\n                <UserHeadCell>Пароль</UserHeadCell>\n                <UserHeadCell>ID на платформі</UserHeadCell>\n                <UserHeadCell>Номер марафону</UserHeadCell>\n                <UserHeadCell>{`Відвідини після ${date}`}</UserHeadCell>\n                <UserHeadCell>{`Кількість візитів після ${date}`}</UserHeadCell>\n                <UserHeadCell>Мова</UserHeadCell>\n                <UserHeadCell>Потік</UserHeadCell>\n                <UserHeadCell>Знання</UserHeadCell>\n                <UserHeadCell>Пакет послуг</UserHeadCell>\n                <UserHeadCell>Менеджер</UserHeadCell>\n                <UserHeadCell>Edit</UserHeadCell>\n                <UserHeadCell>Delete</UserHeadCell>\n              </UserDBRow>\n            </thead>\n            <tbody>\n              {users.map(user => (\n                <UserDBRow key={user._id}>\n                  <UserCell>\n                    <a\n                      href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {user.crmId}\n                    </a>{' '}\n                    <a\n                      href={`https://apeducation.kommo.com/contacts/detail/${user.contactId}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {user.contactId}\n                    </a>\n                  </UserCell>\n                  <UserCell>{user.name}</UserCell>\n                  <UserCell>{user.mail}</UserCell>\n                  <UserCell>{user.password}</UserCell>\n                  <UserCell>{user.pupilId}</UserCell>\n                  <UserCell>{user.marathonNumber}</UserCell>\n                  <UserCell\n                    style={\n                      user.visited.filter(\n                        visit =>\n                          changeDateFormat(visit) >= changeDateFormat(date)\n                      ).length >= parseInt(user.package)\n                        ? {\n                            fontWeight: 700,\n                            color: 'red',\n                          }\n                        : undefined\n                    }\n                  >\n                    {user.visited\n                      .filter(\n                        visit =>\n                          changeDateFormat(visit) >= changeDateFormat(date)\n                      )\n                      .map(visit => (\n                        <p>{visit}</p>\n                      ))}\n                  </UserCell>\n\n                  <UserCell\n                    style={\n                      user.visited.filter(\n                        visit =>\n                          changeDateFormat(visit) >= changeDateFormat(date)\n                      ).length >= parseInt(user.package)\n                        ? {\n                            fontWeight: 700,\n                            color: 'red',\n                          }\n                        : undefined\n                    }\n                  >\n                    {\n                      user.visited.filter(\n                        visit =>\n                          changeDateFormat(visit) >= changeDateFormat(date)\n                      ).length\n                    }\n                  </UserCell>\n                  <UserCell>{user.lang}</UserCell>\n                  <UserCell>{user.course}</UserCell>\n                  <UserCell\n                    className={user.knowledge?.includes('а') && 'error'}\n                  >\n                    {user.knowledge}\n                  </UserCell>\n                  <UserCell\n                    style={\n                      user.visited.filter(\n                        visit =>\n                          changeDateFormat(visit) >= changeDateFormat(date)\n                      ).length >= parseInt(user.package)\n                        ? {\n                            fontWeight: 700,\n                            color: 'red',\n                          }\n                        : undefined\n                    }\n                  >\n                    {user.package}\n                  </UserCell>\n                  <UserCell className=\"last-name\">{user.manager}</UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserEditButton onClick={() => handleEdit(user._id)}>\n                        Edit\n                      </UserEditButton>\n                    )}\n                  </UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserDeleteButton onClick={() => handleDelete(user._id)}>\n                        Del\n                      </UserDeleteButton>\n                    )}\n                  </UserCell>\n                </UserDBRow>\n              ))}\n            </tbody>\n          </TeacherTable>\n        )}\n        {isEditFormOpen && (\n          <Backdrop onMouseDown={closeEditFormOnClick} id=\"close-on-click\">\n            <UserEditForm\n              userToEdit={userToEdit}\n              updateUser={updateUser}\n              closeEditForm={closeEditForm}\n            />\n          </Backdrop>\n        )}\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n\nexport default C1SpeakingPanel;\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  UsersEditForm,\n} from '../UserAdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nexport const UserEditForm = ({ userToEdit, updateUser, closeEditForm }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const initialUserValues = {\n    crmId: userToEdit.crmId || '',\n    contactId: userToEdit.contactId || '',\n    name: userToEdit.name,\n    mail: userToEdit.mail,\n    zoomMail: userToEdit.zoomMail || '',\n    password: userToEdit.password,\n    pupilId: userToEdit.pupilId,\n    marathonNumber: userToEdit.marathonNumber || '',\n    adult: userToEdit.adult,\n    age: userToEdit.age,\n    lang: userToEdit.lang,\n    course: userToEdit.course,\n    package: userToEdit.package,\n    knowledge: userToEdit.knowledge,\n    manager: userToEdit.manager,\n  };\n\n  const usersSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required(\n        \"Ім'я - обов'язкове поле, якщо імені з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    mail: yup.string().required(\"Пошта - обов'язкове поле!\"),\n    zoomMail: yup.string(),\n    password: yup.string().required(\"Пароль - обов'язкове поле!\"),\n    crmId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    contactId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    pupilId: yup\n      .string()\n      .min(6, 'Не менше 6 цифр')\n      .max(7, 'Не більше 7 цифр')\n      .matches(/^\\d{1,7}$/, 'Лише цифри')\n      .required(\"Обов'язкове поле, дивитись на платформі\"),\n    marathonNumber: yup\n      .string()\n      .max(1, 'Не більше 1 цифри')\n      .matches(/[12]/, 'Лише цифри 1 або 2'),\n    age: yup\n      .string()\n      .required(\n        \"Вік - обов'язкове поле, якщо віку з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    lang: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    course: yup\n      .string()\n      .required(\n        \"Обов'язкове поле, для тестових юзерів або нерозподілених користувачів введіть 0\"\n      ),\n    package: yup.string().optional(),\n    // .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    knowledge: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    manager: yup\n      .string()\n      .required(\"Менеджер - обов'язкове поле, введіть прізвище\"),\n  });\n\n  const handleUserSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.name = values.name.trim().trimStart();\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.zoomMail = values.zoomMail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    values.pupilId = values.pupilId.trim().trimStart();\n    values.marathonNumber = values.marathonNumber.trim().trimStart();\n    values.crmId =\n      values.crmId && typeof values.crmId !== 'number'\n        ? +values.crmId.trim().trimStart()\n        : typeof values.crmId === 'number'\n        ? values.crmId\n        : undefined;\n    values.contactId =\n      values.contactId && typeof values.contactId !== 'number'\n        ? +values.contactId.trim().trimStart()\n        : typeof values.contactId === 'number'\n        ? values.contactId\n        : undefined;\n    values.age = values.age.trim().trimStart();\n    values.adult = +values.age > 18 ? true : false;\n    values.lang = values.lang.toLowerCase().trim().trimStart();\n    values.package =\n      values.package === undefined\n        ? ''\n        : values.package.toLowerCase().trim().trimStart();\n    values.course =\n      values.course === undefined\n        ? ''\n        : values.course.toLowerCase().trim().trimStart();\n    values.knowledge =\n      values.knowledge === undefined\n        ? ''\n        : values.knowledge.toLowerCase().trim().trimStart();\n    values.manager = values.manager.toLowerCase().trim().trimStart();\n    try {\n      const response = await axios.put(`/users/${userToEdit._id}`, values);\n      console.log(response);\n      resetForm();\n      alert('Юзера відредаговано');\n      updateUser(userToEdit._id, values);\n      closeEditForm();\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialUserValues}\n        onSubmit={handleUserSubmit}\n        validationSchema={usersSchema}\n      >\n        <UsersEditForm>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Прізвище та ім'я\"\n            />\n            <AdminInputNote component=\"p\" name=\"name\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"email\"\n              name=\"mail\"\n              placeholder=\"Електронна пошта (логін)\"\n            />\n            <AdminInputNote component=\"p\" name=\"mail\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"email\" name=\"zoomMail\" placeholder=\"Zoom-пошта\" />\n            <AdminInputNote component=\"p\" name=\"zoomMail\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"password\" placeholder=\"Пароль\" />\n            <AdminInputNote component=\"p\" name=\"password\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"crmId\" placeholder=\"ID ліда в CRM\" />\n            <AdminInputNote component=\"p\" name=\"crmId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"contactId\"\n              placeholder=\"ID контакту в CRM\"\n            />\n            <AdminInputNote component=\"p\" name=\"contactId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"pupilId\"\n              placeholder=\"ID учня на платформі\"\n            />\n            <AdminInputNote component=\"p\" name=\"pupilId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"marathonNumber\"\n              placeholder=\"№ марафону на платформі\"\n            />\n            <AdminInputNote component=\"p\" name=\"marathonNumber\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"age\" placeholder=\"Вік\" />\n            <AdminInputNote component=\"p\" name=\"age\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"lang\" placeholder=\"Мова\" />\n            <AdminInputNote component=\"p\" name=\"lang\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"course\" placeholder=\"Потік\" />\n            <AdminInputNote component=\"p\" name=\"course\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"package\" placeholder=\"Пакет послуг\" />\n            <AdminInputNote component=\"p\" name=\"package\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"knowledge\"\n              placeholder=\"Рівень знань\"\n            />\n            <AdminInputNote component=\"p\" name=\"knowledge\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"manager\"\n              placeholder=\"Прізвище відповідального менеджера\"\n            />\n            <AdminInputNote component=\"p\" name=\"manager\" />\n          </Label>\n          <AdminFormBtn type=\"submit\">Підтвердити зміни</AdminFormBtn>\n        </UsersEditForm>\n      </Formik>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n","import { FormBtn } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport { AdminInputNote } from 'pages/Streams/AdminPanel/AdminPanel.styled';\nimport { FormSelect } from 'pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled';\nimport DatePicker from 'react-datepicker';\nimport styled from 'styled-components';\n\nexport const UserSpeakingEditForm = styled(Form)`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: calc(100vw - 20px);\n  max-width: 400px;\n\n  background-color: white;\n  padding: 16px;\n  border-radius: 16px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  & .react-datepicker__tab-loop {\n    margin-top: -6px;\n  }\n\n  & .react-datepicker-popper {\n    z-index: 2;\n  }\n\n  @media screen and (min-height: 960px) {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100%;\n    transform: translate(-50%, -50%);\n\n    padding: 16px 24px;\n    border-radius: 24px;\n\n    gap: 9px;\n  }\n\n  @media screen and (min-height: 960px) {\n    & .react-datepicker__tab-loop {\n      margin-top: -9px;\n    }\n  }\n`;\n\nexport const SpeakingLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n  position: relative;\n\n  &:first-child {\n    padding-top: 4px;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  width: 100%;\n  max-height: 38px;\n  padding: 10px;\n  border: 2px solid var(--main-color);\n\n  @media screen and (min-width: 960px) {\n    font-size: 16px;\n  }\n\n  &.error {\n    border: 4px solid red;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-burnt-color);\n    outline: transparent;\n  }\n`;\n\nexport const LabelText = styled.span`\n  position: absolute;\n  top: -5.5px;\n  left: 10px;\n  z-index: 1;\n  background-color: white;\n\n  font-size: 10px;\n  display: block;\n  padding: 1px;\n\n  @media screen and (min-height: 960px) {\n    top: -8px;\n    font-size: 12px;\n    padding: 2px;\n  }\n`;\n\nexport const LabelDatePickerText = styled(LabelText)`\n  position: absolute;\n  top: 0px;\n  left: 10px;\n  z-index: 1;\n  background-color: white;\n\n  font-size: 10px;\n  display: block;\n  padding: 1px;\n\n  @media screen and (min-height: 960px) {\n    top: 1px;\n    padding: 2px;\n    font-size: 12px;\n  }\n`;\n\nexport const SpeakingSelect = styled(FormSelect)`\n  font-size: 16px;\n`;\n\nexport const SpeakingFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n  padding: 12px;\n  height: auto;\n\n  @media screen and (min-width: 768px) {\n    padding: 16px;\n    letter-spacing: 0.6px;\n  }\n`;\n\nexport const StudentDateInputNote = styled.p`\n  text-align: center;\n  font-size: 14px;\n  color: red;\n`;\n\nexport const StudentTextAreaNote = styled(AdminInputNote)`\n  color: red;\n`;\n"],"names":["AdminPanelSection","styled","_templateObject","_taggedTemplateLiteral","LoginForm","Form","_templateObject2","UsersForm","_templateObject3","UsersEditForm","_templateObject4","AdminFormBtn","FormBtn","_templateObject5","AdminInput","Input","_templateObject6","AdminInputNote","InputNote","_templateObject7","UserDBTable","_templateObject8","UserDBCaption","_templateObject9","UserDBRow","_templateObject10","_templateObject11","UserHeadCell","_templateObject12","UserCell","_templateObject13","_templateObject14","UserEditButton","_templateObject15","_templateObject16","UserDeleteButton","_templateObject17","Feedback","_templateObject18","FilterIcon","_templateObject19","_templateObject20","_templateObject21","_templateObject22","TeacherTable","_templateObject23","TeacherLangSelect","SpeakingSelect","_templateObject24","ErrorNote","_templateObject25","DateInputBox","_templateObject26","DateInputLabel","_templateObject27","DateInputSelect","_templateObject28","ScheduleList","ScheduleHeading","ScheduleItem","ScheduleInfo","ScheduleData","ScheduleDataDayText","ScheduleDataTypeText","ScheduleDataTimeText","FormSelect","Select","axios","setAuthToken","token","concat","C1SpeakingPanel","isLoading","setIsLoading","useState","isUserAdmin","setIsUserAdmin","users","setUsers","isEditFormOpen","setIsEditFormOpen","userToEdit","setUserToEdit","date","setDate","useEffect","document","title","async","console","log","localStorage","getItem","res","data","newToken","isAdmin","error","refreshToken","response","reverse","getUsers","onEscapeClose","event","code","closeEditForm","window","addEventListener","removeEventListener","loginSchema","yup","shape","login","required","password","changeDateFormat","dateString","dateArray","split","length","Date","parse","join","e","_jsx","_Fragment","children","_jsxs","Formik","initialValues","onSubmit","values","_ref","resetForm","setItem","validationSchema","Label","type","name","placeholder","component","onClick","map","user","_user$knowledge","href","crmId","target","rel","contactId","mail","pupilId","marathonNumber","style","visited","filter","visit","parseInt","package","fontWeight","color","undefined","lang","course","className","knowledge","includes","manager","find","_id","id","handleEdit","confirm","alert","handleDelete","Backdrop","onMouseDown","UserEditForm","updateUser","userToUpdate","zoomMail","age","adult","i","findIndex","Loader","initialUserValues","usersSchema","matches","min","max","optional","_ref2","trim","trimStart","toLowerCase","UserSpeakingEditForm","SpeakingLabel","StyledDatePicker","DatePicker","LabelText","LabelDatePickerText","SpeakingFormBtn","StudentDateInputNote","StudentTextAreaNote"],"sourceRoot":""}