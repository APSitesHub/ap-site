{"version":3,"file":"static/js/Free streams A2 page.5b467111.chunk.js","mappings":"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","sources":["pages/Streams/A2/StreamA2Free.jsx"],"sourcesContent":["import useSize from '@react-hook/size';\nimport axios from 'axios';\nimport { KahootsFree } from 'components/Stream/Kahoots/KahootsFree';\nimport { Support } from 'components/Stream/Support/Support';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { useOutletContext } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { Chat } from 'utils/Chat/Chat';\nimport {\n  BoxHideLeftSwitch,\n  BoxHideRightSwitch,\n  BoxHideSwitchFree,\n  ButtonBoxFree,\n  ChatBox,\n  ChatBtn,\n  ChatLogo,\n  KahootBtn,\n  KahootLogo,\n  MoldingNoClick,\n  MoldingNoClickSecondary,\n  SpeakingLink,\n  SpeakingLogo,\n  StreamPlaceHolder,\n  StreamPlaceHolderText,\n  StreamSection,\n  SupportArrow,\n  SupportBtn,\n  SupportLogo,\n  SupportMarkerLeft,\n  SupportMarkerRight,\n  SupportPointer,\n  VideoBox,\n} from '../../../components/Stream/Stream.styled';\n\nconst StreamA2Free = () => {\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isKahootOpen, setIsKahootOpen] = useState(false);\n  const [isSupportOpen, setIsSupportOpen] = useState(false);\n  const [isButtonBoxOpen, setIsButtonBoxOpen] = useState(true);\n  const [isOpenedLast, setIsOpenedLast] = useState('');\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [animatedID, setAnimationID] = useState('');\n  const [links, isLoading, currentUser, room] = useOutletContext();\n  const chatEl = useRef();\n  // eslint-disable-next-line\n  const [chatWidth, chatHeight] = useSize(chatEl);\n  const [width, height] = useSize(document.body);\n  const [isBanned, setIsBanned] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const toggleKahoot = e => {\n    setIsKahootOpen(isKahootOpen => !isKahootOpen);\n    isChatOpen || isSupportOpen\n      ? setIsOpenedLast(isOpenedLast => 'kahoot')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleChat = () => {\n    setIsChatOpen(isChatOpen => !isChatOpen);\n    isKahootOpen || isSupportOpen\n      ? setIsOpenedLast(isOpenedLast => 'chat')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleSupport = () => {\n    setIsSupportOpen(isSupportOpen => !isSupportOpen);\n    setAnimationID('');\n    isKahootOpen || isChatOpen\n      ? setIsOpenedLast(isOpenedLast => 'support')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleButtonBox = () => {\n    setIsButtonBoxOpen(isOpen => !isOpen);\n  };\n  const handleSupportClick = data_id => {\n    setAnimationID(id => (id = data_id));\n    if (!isAnimated) {\n      setIsAnimated(isAnimated => !isAnimated);\n    }\n  };\n\n  const videoBoxWidth =\n    chatWidth === 0 && width > height ? width - 300 : width - chatWidth;\n\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    document.title = 'A2 English Free | AP Education';\n\n    socketRef.current = io('https://ap-chat-server.onrender.com/');\n\n    socketRef.current.on('connected', (connected, handshake) => {\n      console.log(connected);\n      console.log(handshake.time);\n    });\n\n    const getMessages = async () => {\n      console.log('get');\n      try {\n        const dbMessages = await axios.get(\n          `https://ap-chat-server.onrender.com/messages/room`,\n          {\n            params: {\n              room,\n            },\n          }\n        );\n        const todayMessages = dbMessages.data.filter(\n          message =>\n            new Date(message.createdAt).getDate() === new Date().getDate()\n        );\n        setMessages(messages => (messages = todayMessages));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMessages();\n\n    socketRef.current.on('message', async data => {\n      setMessages(messages => (messages = [...messages, data]));\n      const updateMessages = async () => {\n        try {\n          await axios.post(\n            'https://ap-chat-server.onrender.com/messages',\n            data\n          );\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      await updateMessages();\n    });\n\n    socketRef.current.on('message:get', async data => {\n      setMessages(messages => (messages = [...messages, data]));\n    });\n\n    socketRef.current.on('message:pinned', async (id, data) => {\n      console.log(id);\n      console.log(data);\n      setMessages(messages => {\n        messages[messages.findIndex(message => message.id === id)].isPinned =\n          data.isPinned;\n        return [...messages];\n      });\n    });\n\n    socketRef.current.on('message:delete', async id => {\n      console.log('delete fired');\n      setMessages(\n        messages =>\n          (messages = [...messages.filter(message => message.id !== id)])\n      );\n      const deleteMessage = async () => {\n        try {\n          await axios.delete(\n            `https://ap-chat-server.onrender.com/messages/${id}`\n          );\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      await deleteMessage();\n    });\n\n    socketRef.current.on('message:deleted', async id => {\n      console.log(id);\n      setMessages(\n        messages =>\n          (messages = [...messages.filter(message => message.id !== id)])\n      );\n    });\n\n    socketRef.current.on('user:banned', async (userID, userIP) => {\n      console.log(userID);\n      console.log(userIP);\n      if (userID === currentUser.userID) {\n        setIsBanned(true);\n      }\n    });\n\n    return () => {\n      socketRef.current.off('connected');\n      socketRef.current.off('message');\n      socketRef.current.disconnect();\n    };\n  }, [currentUser, room]);\n\n  return (\n    <>\n      {(links.a2free === undefined || links.a2free[0] < 10) && !isLoading ? (\n        <StreamPlaceHolder>\n          <StreamPlaceHolderText>\n            Поки що трансляції тут немає! <br />\n            Перевірте, чи правильно ви вказали адресу сторінки або спробуйте\n            пізніше.\n          </StreamPlaceHolderText>\n        </StreamPlaceHolder>\n      ) : currentUser.isBanned || isBanned ? (\n        <StreamPlaceHolder>\n          <StreamPlaceHolderText>\n            Хмммм, схоже що ви були нечемні! <br />\n            Вас було заблоковано за порушення правил нашої платформи. Зв'яжіться\n            зі своїм менеджером сервісу!\n          </StreamPlaceHolderText>\n        </StreamPlaceHolder>\n      ) : (\n        <>\n          <StreamSection\n            style={{\n              width:\n                isChatOpen && width > height ? `${videoBoxWidth}px` : '100%',\n            }}\n          >\n            <VideoBox>\n              <MoldingNoClick />\n              <MoldingNoClickSecondary />\n              <SupportMarkerLeft\n                className={\n                  (isAnimated && animatedID === 'sound') ||\n                  (isAnimated && animatedID === 'live')\n                    ? 'animated'\n                    : ''\n                }\n              >\n                <SupportArrow\n                  className={\n                    (isAnimated && animatedID === 'sound') ||\n                    (isAnimated && animatedID === 'live')\n                      ? 'animated'\n                      : ''\n                  }\n                />\n              </SupportMarkerLeft>\n              <SupportMarkerRight\n                className={\n                  isAnimated && animatedID === 'quality' ? 'animated' : ''\n                }\n              >\n                <SupportPointer\n                  className={\n                    isAnimated && animatedID === 'quality' ? 'animated' : ''\n                  }\n                />\n              </SupportMarkerRight>\n              <ReactPlayer\n                playing={true}\n                muted={true}\n                controls={true}\n                config={{\n                  youtube: {\n                    playerVars: { rel: 0 },\n                  },\n                }}\n                style={{\n                  display: 'block',\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                }}\n                width=\"100%\"\n                height=\"100vh\"\n                url={links.a2free}\n              />\n            </VideoBox>\n\n            <ButtonBoxFree className={!isButtonBoxOpen ? 'hidden' : ''}>\n              <KahootBtn\n                onClick={toggleKahoot}\n                className={\n                  isAnimated && animatedID === 'kahoot_open' ? 'animated' : ''\n                }\n              >\n                <KahootLogo />\n              </KahootBtn>\n\n              <ChatBtn\n                onClick={toggleChat}\n                className={\n                  isAnimated && animatedID === 'chat_open' ? 'animated' : ''\n                }\n              >\n                <ChatLogo />\n              </ChatBtn>\n\n              <SupportBtn onClick={toggleSupport}>\n                <SupportLogo />\n              </SupportBtn>\n\n              <SpeakingLink\n                href=\"https://meet.google.com/guo-xhke-cxn\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <SpeakingLogo />\n              </SpeakingLink>\n            </ButtonBoxFree>\n\n            <BoxHideSwitchFree id=\"no-transform\" onClick={toggleButtonBox}>\n              {isButtonBoxOpen ? <BoxHideLeftSwitch /> : <BoxHideRightSwitch />}\n            </BoxHideSwitchFree>\n\n            {height > width && (\n              <ChatBox\n                ref={chatEl}\n                className={isChatOpen ? 'shown' : 'hidden'}\n                style={\n                  isOpenedLast === 'chat' ? { zIndex: '2' } : { zIndex: '1' }\n                }\n              >\n                <Chat\n                  socket={socketRef.current}\n                  messages={messages}\n                  isChatOpen={isChatOpen}\n                  currentUser={currentUser}\n                />\n              </ChatBox>\n            )}\n\n            <Support\n              sectionWidth={width}\n              isSupportOpen={isSupportOpen}\n              isOpenedLast={isOpenedLast}\n              handleSupport={handleSupportClick}\n              openKahoot={toggleKahoot}\n              isKahootOpen={isKahootOpen}\n            />\n\n            <KahootsFree\n              sectionWidth={width}\n              sectionHeight={height}\n              isKahootOpen={isKahootOpen}\n              isChatOpen={isChatOpen}\n              isOpenedLast={isOpenedLast}\n            />\n          </StreamSection>\n          {width >= height && (\n            <ChatBox\n              ref={chatEl}\n              className={isChatOpen ? 'shown' : 'hidden'}\n              style={\n                isOpenedLast === 'chat' ? { zIndex: '2' } : { zIndex: '1' }\n              }\n            >\n              <Chat\n                socket={socketRef.current}\n                messages={messages}\n                isChatOpen={isChatOpen}\n                currentUser={currentUser}\n              />\n            </ChatBox>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StreamA2Free;\n"],"names":["StreamA2Free","isChatOpen","setIsChatOpen","useState","isKahootOpen","setIsKahootOpen","isSupportOpen","setIsSupportOpen","isButtonBoxOpen","setIsButtonBoxOpen","isOpenedLast","setIsOpenedLast","isAnimated","setIsAnimated","animatedID","setAnimationID","links","isLoading","currentUser","room","useOutletContext","chatEl","useRef","chatWidth","chatHeight","useSize","width","height","document","body","isBanned","setIsBanned","messages","setMessages","toggleKahoot","e","videoBoxWidth","socketRef","useEffect","title","current","io","on","connected","handshake","console","log","time","async","todayMessages","axios","params","data","filter","message","Date","createdAt","getDate","error","getMessages","updateMessages","id","findIndex","isPinned","concat","deleteMessage","userID","userIP","off","disconnect","_jsx","_Fragment","children","undefined","a2free","StreamPlaceHolder","_jsxs","StreamPlaceHolderText","StreamSection","style","VideoBox","MoldingNoClick","MoldingNoClickSecondary","SupportMarkerLeft","className","SupportArrow","SupportMarkerRight","SupportPointer","ReactPlayer","playing","muted","controls","config","youtube","playerVars","rel","display","position","top","left","url","ButtonBoxFree","KahootBtn","onClick","KahootLogo","ChatBtn","toggleChat","ChatLogo","SupportBtn","toggleSupport","SupportLogo","SpeakingLink","href","target","SpeakingLogo","BoxHideSwitchFree","toggleButtonBox","isOpen","BoxHideLeftSwitch","BoxHideRightSwitch","ChatBox","ref","zIndex","Chat","socket","Support","sectionWidth","handleSupport","data_id","openKahoot","KahootsFree","sectionHeight"],"sourceRoot":""}