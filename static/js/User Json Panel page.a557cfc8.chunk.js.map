{"version":3,"file":"static/js/User Json Panel page.a557cfc8.chunk.js","mappings":"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","sources":["pages/Streams/UserAdminPanel/UserJsonPanel.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  AdminPanelSection,\n  LoginForm,\n} from './UserAdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst UserJsonPanel = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    document.title = 'User JSON Panel | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        if (localStorage.getItem('isAdmin')) {\n          const res = await axios.post('admins/refresh/users/', {});\n          setAuthToken(res.data.newToken);\n          setIsUserAdmin(isAdmin => (isAdmin = true));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n\n    const getUsers = async () => {\n      setIsLoading(isLoading => (isLoading = true));\n      try {\n        if (isUserAdmin) {\n          const response = await axios.get('/users/admin');\n          const userInfo = response.data.map(\n            ({\n              _id,\n              name,\n              age,\n              mail,\n              zoomMail,\n              lang,\n              course,\n              crmId,\n              contactId,\n              successRate,\n              temperament,\n            }) => {\n              return {\n                _id,\n                name,\n                age,\n                mail,\n                zoomMail,\n                lang,\n                course,\n                crmId,\n                contactId,\n                successRate,\n                temperament,\n              };\n            }\n          );\n          setUsers(users => (users = userInfo));\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getUsers();\n  }, [isUserAdmin]);\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.post('/admins/login/users', values);\n      setAuthToken(response.data.token);\n      setIsUserAdmin(isAdmin => (isAdmin = true));\n      localStorage.setItem('isAdmin', true);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        {!isUserAdmin && (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Login\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Залогінитись</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        )}\n\n        {users && JSON.stringify(users)}\n\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n\nexport default UserJsonPanel;\n"],"names":["axios","setAuthToken","token","concat","UserJsonPanel","isLoading","setIsLoading","useState","isUserAdmin","setIsUserAdmin","users","setUsers","useEffect","document","title","async","console","log","localStorage","getItem","res","data","newToken","isAdmin","error","refreshToken","userInfo","map","_ref","_id","name","age","mail","zoomMail","lang","course","crmId","contactId","successRate","temperament","getUsers","loginSchema","yup","shape","login","required","password","_jsx","_Fragment","children","_jsxs","AdminPanelSection","Formik","initialValues","onSubmit","values","_ref2","resetForm","response","setItem","validationSchema","LoginForm","Label","AdminInput","type","placeholder","AdminInputNote","component","AdminFormBtn","JSON","stringify","Loader"],"sourceRoot":""}