{"version":3,"file":"static/js/Post-quiz gifts page.4cfdef38.chunk.js","mappings":"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","sources":["pages/Gifts/Gifts.jsx","pages/Streams/AdminPanel/AdminPanel.styled.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  Label,\n  LeftFormBackgroundStar,\n  RightFormBackgroundStar,\n} from 'components/LeadForm/LeadForm.styled';\nimport { LoginFormText } from 'components/Stream/Stream.styled';\nimport { Formik } from 'formik';\nimport {\n  ExternalLinkIcon,\n  LessonTopBox,\n  LessonValuePdfLink,\n  LessonVideoBox,\n  PdfBox,\n  PdfWrapper,\n} from 'pages/MyAP/LessonFinder/LessonFinder.styled';\nimport { Title } from 'pages/Quiz/Quiz.styled';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  LoginForm,\n} from 'pages/Streams/AdminPanel/AdminPanel.styled';\nimport { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player/youtube';\nimport * as yup from 'yup';\nimport { ReactComponent as PdfIcon } from '../../img/svg/pdf-icon.svg';\nimport {\n  GiftLinkIcon,\n  GiftsBox,\n  GiftsBoxItem,\n  GiftsDescription,\n  GiftsVideoBox,\n  Logo,\n  PdfPreview,\n  PdfPreviewBackground,\n  QuizletLink,\n  QuizletLogo,\n  QuizletShortLogo,\n  SubTitle,\n  YouTubeLogo,\n} from './Gifts.styled';\nimport { gifts } from './giftsSet';\n\nconst Gifts = () => {\n  const [isUserLogged, setIsUserLogged] = useState(false);\n  const [user, setUser] = useState({});\n  // const [isVideoOpen, setIsVideoOpen] = useState(true);\n  // const [isGrammarOpen, setIsGrammarOpen] = useState(true);\n  const [isPdfPreviewOpen, setIsPdfPreviewOpen] = useState(false);\n  const [openedPdf, setOpenedPdf] = useState('');\n\n  axios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\n  const setAuthToken = token => {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  };\n\n  useEffect(() => {\n    document.title = 'Подарункові матеріали | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        const res = await axios.post('/users/refresh', {\n          mail: localStorage.getItem('mail'),\n        });\n        setIsUserLogged(isLogged => (isLogged = true));\n        console.log(res);\n        setUser(user => (user = { ...res.data.user }));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    refreshToken();\n  }, []);\n\n  const initialLoginValues = {\n    mail: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    mail: yup\n      .string()\n      .required('Вкажіть пошту, за якою ви зареєстровані на нашій платформі!'),\n    password: yup\n      .string()\n      .required(\n        'Введіть пароль, який ви використовуєте для входу на нашу платформу!'\n      ),\n  });\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    try {\n      const response = await axios.post('/users/login', values);\n      setAuthToken(response.data.token);\n      setIsUserLogged(isLogged => (isLogged = true));\n      setUser(user => (user = { ...response.data.user }));\n      localStorage.setItem('mail', values.mail);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const togglePdfPreviewOnTouch = pdfId => {\n    const pdfOpener = pdfId => {\n      console.log('opener');\n      setOpenedPdf(pdf => (pdf = pdfId));\n      setIsPdfPreviewOpen(isOpen => !isOpen);\n    };\n\n    setOpenedPdf(pdfId);\n    isPdfPreviewOpen && pdfId !== openedPdf\n      ? setOpenedPdf(pdf => (pdf = pdfId))\n      : !isPdfPreviewOpen && pdfId === openedPdf\n      ? setIsPdfPreviewOpen(isOpen => !isOpen)\n      : isPdfPreviewOpen && pdfId === openedPdf\n      ? setIsPdfPreviewOpen(isOpen => !isOpen)\n      : pdfOpener(pdfId);\n  };\n\n  const openPdfPreviewOnHover = e => {\n    setOpenedPdf(pdf => (pdf = e.target.id));\n    if (!isPdfPreviewOpen) {\n      setIsPdfPreviewOpen(isOpen => !isOpen);\n    }\n  };\n\n  const closePdfPreviewOnMouseOut = () => {\n    console.log('mouse out?');\n    setOpenedPdf(pdf => (pdf = ''));\n    if (isPdfPreviewOpen) {\n      setIsPdfPreviewOpen(isOpen => !isOpen);\n    }\n  };\n\n  return (\n    <>\n      {!isUserLogged ? (\n        <Formik\n          initialValues={initialLoginValues}\n          onSubmit={handleLoginSubmit}\n          validationSchema={loginSchema}\n        >\n          <LoginForm>\n            <LeftFormBackgroundStar />\n            <RightFormBackgroundStar />\n            <LoginFormText>\n              Привіт!\n              <br />\n              Логін і пароль від цієї сторінки ми надіслали вам в обраний вами\n              месенджер!\n            </LoginFormText>\n            <Label>\n              <AdminInput type=\"text\" name=\"mail\" placeholder=\"Login\" />\n              <AdminInputNote component=\"p\" name=\"mail\" type=\"email\" />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n              />\n              <AdminInputNote component=\"p\" name=\"password\" />\n            </Label>\n            <AdminFormBtn type=\"submit\">Увійти</AdminFormBtn>\n          </LoginForm>\n        </Formik>\n      ) : (\n        <>\n          <Logo />\n          <Title>Подарункові матеріали</Title>\n          <SubTitle>\n            Розпочніть своє навчання вже зараз з безкоштовними подарунковими\n            матеріалами!\n          </SubTitle>\n          <GiftsBox>\n            {gifts[user.lang][user.knowledge].map((gift, i) => (\n              <>\n                <GiftsBoxItem key={i}>\n                  {gift.type === 'quizlet' && (\n                    <LessonTopBox>\n                      <QuizletLink\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        to={gift.link}\n                      >\n                        <QuizletLogo />\n                        <QuizletShortLogo />\n                        <GiftsDescription>\n                          Набір вправ для самостійного вивчення слів для рівня{' '}\n                          {gift.name}\n                        </GiftsDescription>\n                        <GiftLinkIcon />\n                      </QuizletLink>\n                    </LessonTopBox>\n                  )}\n                  {gift.type === 'video' && (\n                    <GiftsVideoBox\n                    // className={!isVideoOpen && 'minimized'}\n                    >\n                      <LessonTopBox>\n                        <YouTubeLogo />\n                        <GiftsDescription>{gift.name}</GiftsDescription>\n                      </LessonTopBox>\n                      <LessonVideoBox>\n                        <ReactPlayer\n                          loop={true}\n                          muted={false}\n                          controls={true}\n                          style={{\n                            display: 'block',\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                          }}\n                          width=\"100%\"\n                          height=\"100%\"\n                          url={gift.link}\n                        />\n                      </LessonVideoBox>\n                    </GiftsVideoBox>\n                  )}\n\n                  {gift.type === 'grammar' && (\n                    <PdfBox\n                      onMouseLeave={closePdfPreviewOnMouseOut}\n                      // className={!isGrammarOpen && 'minimized'}\n                    >\n                      <PdfWrapper\n                        id={gift.link}\n                        onMouseEnter={e => openPdfPreviewOnHover(e)}\n                        onTouchEnd={() => togglePdfPreviewOnTouch(gift.link)}\n                      >\n                        <PdfIcon />\n                        <LessonValuePdfLink\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          to={gift.link}\n                        >\n                          <GiftsDescription>{gift.name}</GiftsDescription>\n                          <ExternalLinkIcon />\n                        </LessonValuePdfLink>\n                      </PdfWrapper>\n                      <PdfPreviewBackground\n                        className={\n                          isPdfPreviewOpen &&\n                          openedPdf === gift.link &&\n                          'preview-open'\n                        }\n                      >\n                        {isPdfPreviewOpen && openedPdf === gift.link && (\n                          <PdfPreview\n                            title={`Preview of ${gift.link}`}\n                            src={gift.link\n                              .replace('open?id=', 'file/d/')\n                              .replace('view', 'preview')\n                              .replace('&usp=drive_copy', '/preview')}\n                            allow=\"autoplay\"\n                          ></PdfPreview>\n                        )}\n                      </PdfPreviewBackground>\n                    </PdfBox>\n                  )}\n                </GiftsBoxItem>\n              </>\n            ))}\n          </GiftsBox>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Gifts;\n","import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 35px;\n`;\n\nexport const LinksForm = styled(Form)`\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n  max-width: 600px;\n`;\n\nexport const AdminInput = styled(Input)`\n  border: 2px solid var(--main-color);\n  max-width: 600px;\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  position: static;\n  color: var(--main-color);\n  font-size: 14px;\n  bottom: -1.1em;\n`;\n"],"names":["Gifts","isUserLogged","setIsUserLogged","useState","user","setUser","isPdfPreviewOpen","setIsPdfPreviewOpen","openedPdf","setOpenedPdf","axios","useEffect","document","title","async","console","log","res","mail","localStorage","getItem","isLogged","data","error","refreshToken","loginSchema","yup","shape","required","password","closePdfPreviewOnMouseOut","pdf","isOpen","_jsx","_Fragment","children","_jsxs","Logo","Title","SubTitle","GiftsBox","gifts","lang","knowledge","map","gift","i","GiftsBoxItem","type","LessonTopBox","QuizletLink","target","rel","to","link","QuizletLogo","QuizletShortLogo","GiftsDescription","name","GiftLinkIcon","GiftsVideoBox","YouTubeLogo","LessonVideoBox","ReactPlayer","loop","muted","controls","style","display","position","top","left","width","height","url","PdfBox","onMouseLeave","PdfWrapper","id","onMouseEnter","e","openPdfPreviewOnHover","onTouchEnd","togglePdfPreviewOnTouch","pdfId","pdfOpener","PdfIcon","LessonValuePdfLink","ExternalLinkIcon","PdfPreviewBackground","className","PdfPreview","concat","src","replace","allow","Formik","initialValues","onSubmit","values","_ref","resetForm","toLowerCase","trim","trimStart","response","token","setItem","validationSchema","LoginForm","LeftFormBackgroundStar","RightFormBackgroundStar","LoginFormText","Label","AdminInput","placeholder","AdminInputNote","component","AdminFormBtn","AdminPanelSection","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","LinksForm","_templateObject3","FormBtn","_templateObject4","Input","_templateObject5","InputNote","_templateObject6"],"sourceRoot":""}