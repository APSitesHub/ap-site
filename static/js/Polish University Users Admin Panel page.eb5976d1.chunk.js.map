{"version":3,"file":"static/js/Polish University Users Admin Panel page.eb5976d1.chunk.js","mappings":"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","sources":["pages/Streams/TeacherAdminPanel/TeacherAdminPanel.styled.js","pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled.js","pages/Streams/UserAdminPanel/UniUserAdminPanel.jsx","pages/Streams/UserAdminPanel/UserEditForm/UserEditForm.jsx","pages/TeacherPage/TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm.styled.js"],"sourcesContent":["import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport { SpeakingSelect } from 'pages/TeacherPage/TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm.styled';\nimport styled from 'styled-components';\nimport { ReactComponent as FilterIcon } from '../../../img/svg/filter.svg';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 20px;\n  display: flex;\n  align-items: flex-start;\n\n  gap: 30px;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const UsersForm = styled(Form)`\n  margin: 0 auto;\n\n  position: sticky;\n  top: 50%;\n\n  transform: translateY(-50%);\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const UsersEditForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  max-width: 400px;\n\n  background-color: white;\n  padding: 24px;\n  border-radius: 24px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n  height: 48px;\n  padding: 0;\n`;\n\nexport const AdminInput = styled(Input)`\n  width: 240px;\n  padding: 8px 10px;\n  font-size: 16px;\n  height: 40px;\n  -webkit-text-stroke: 0px;\n\n  border: 2px solid var(--main-color);\n\n  &.error {\n    border-color: red;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 360px;\n  }\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  color: var(--main-color);\n  font-size: 12px;\n  font-weight: 500;\n  position: static;\n  max-width: 240px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 360px;\n  }\n`;\n\nexport const UserDBTable = styled.table`\n  max-width: 50vw;\n  min-height: 80vh;\n  margin: 0 auto;\n\n  table-layout: auto;\n  width: 100%;\n\n  text-align: center;\n  border: 1px solid #000;\n  border-collapse: collapse;\n`;\n\nexport const UserDBCaption = styled.caption`\n  caption-side: top;\n  margin-bottom: 60px;\n`;\n\nexport const UserDBItemValue = styled.span`\n  font-size: 11px;\n`;\n\nexport const UserDBRow = styled.tr`\n  border: 1px solid #000;\n`;\n\nexport const UserHeadCell = styled.th`\n  border: 1px solid #000;\n  padding: 3px;\n`;\n\nexport const Filterable = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  position: relative;\n`;\n\nexport const UserCell = styled.td`\n  border: 1px solid #000;\n  padding: 3px;\n  height: 3em;\n\n  &.last-name {\n    text-transform: capitalize;\n  }\n\n  &.attention {\n    color: red;\n  }\n\n  &.error {\n    background-color: #ff0000;\n  }\n`;\n\nexport const UserCellLeft = styled(UserCell)`\n  text-align: start;\n  padding-left: 8px;\n  max-width: 50vw;\n`;\n\nexport const UserEditButton = styled.button`\n  background-color: transparent;\n  border: 1px solid var(--accent-color);\n  border-radius: 5px;\n`;\n\nexport const UserDeleteButton = styled.button`\n  background-color: transparent;\n  border: 1px solid var(--main-color);\n  border-radius: 5px;\n`;\n\nexport const UserBanButton = styled(UserDeleteButton)`\n  &.banned {\n    border-color: #023020;\n  }\n  &.not_banned {\n    border-color: #8b0000;\n  }\n`;\n\nexport const FilterButton = styled(FilterIcon)`\n  width: 18px;\n  height: 12px;\n\n  color: #000;\n\n  transition: color var(--animation-global);\n\n  &:hover {\n    color: var(--main-color);\n  }\n`;\n\nexport const FilterPicker = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n`;\n\nexport const FilterPickerButton = styled.button`\n  width: 100%;\n  text-transform: capitalize;\n`;\n\nexport const Feedback = styled.p`\n  font-size: 10px;\n  margin-bottom: 3px;\n  text-align: start;\n`;\n\nexport const TeacherTable = styled(UserDBTable)`\n  max-width: 80vw;\n`;\n\nexport const TeacherLangSelect = styled(SpeakingSelect)`\n  border-radius: 50px;\n`;\n\nexport const ErrorNote = styled.p`\n  color: var(--main-color);\n  text-align: center;\n  margin-top: 8px;\n  font-size: 12px;\n  font-weight: 500;\n  position: static;\n  max-width: 240px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 360px;\n  }\n`;\n\nexport const DateInputBox = styled.div`\n  position: absolute;\n  top: 60px;\n  left: 50%;\n\n  display: flex;\n  gap: 16px;\n\n  transform: translateX(-50%);\n`;\n\nexport const DateInputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n  position: relative;\n`;\n\nexport const DateInputSelect = styled(SpeakingSelect)`\n  width: 280px;\n  border-radius: 50px;\n`;","import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 35px;\n`;\n\nexport const LinksForm = styled(Form)`\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n`;\n\nexport const AdminInput = styled(Input)`\n  border: 2px solid var(--main-color);\n`;\n\nexport const AdminTextArea = styled(Input)`\n  border-radius: 0;\n  width: 35vw;\n  height: 75vh;\n  scrollbar-width: thin;\n  background-color: transparent;\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  position: static;\n  color: var(--main-color);\n  font-size: 24px;\n  font-weight: 700;\n  bottom: -1.1em;\n`;\n\nexport const ScheduleList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 14px;\n\n  text-transform: capitalize;\n  font-weight: 600;\n  margin-left: auto;\n`;\n\nexport const ScheduleHeading = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  margin-bottom: 12px;\n`;\n\nexport const ScheduleItem = styled.li`\n  width: 100%;\n  flex-basis: 40%;\n  flex-grow: 0;\n`;\n\nexport const ScheduleInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ScheduleData = styled.li`\n  font-size: 14px;\n  font-weight: 400;\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  padding-bottom: 5px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ScheduleDataDayText = styled.span`\n  min-width: 24px;\n`;\n\nexport const ScheduleDataTypeText = styled.span`\n  min-width: 120px;\n  text-align: center;\n`;\n\nexport const ScheduleDataTimeText = styled.span`\n  min-width: 100px;\n  text-align: center;\n`;\n\nexport const ScheduleParagraph = styled.p`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n  font-size: 14px;\n  border: 2px solid var(--main-color);\n\n  line-height: 1;\n\n  @media screen and (min-width: 768px) {\n    font-size: 19px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-burnt-color);\n    outline: transparent;\n  }\n`;\n","import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useEffect, useRef, useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  AdminPanelSection,\n  LoginForm,\n  UserCell,\n  UserDBCaption,\n  UserDBRow,\n  UserDBTable,\n  UserDeleteButton,\n  UserEditButton,\n  UserHeadCell,\n  UsersForm,\n} from './UserAdminPanel.styled';\nimport { UserEditForm } from './UserEditForm/UserEditForm';\nimport { LabelText, SpeakingLabel } from 'pages/TeacherPage/TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm.styled';\nimport { ErrorNote, TeacherLangSelect } from '../TeacherAdminPanel/TeacherAdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst UserAdminPanel = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\n  const [userToEdit, setUserToEdit] = useState({});\n  const [uniValue, setUniValue] = useState(null);\n  const [isUniEmpty, setIsUniEmpty] = useState(false);\n  // eslint-disable-next-line\n  const [daysAfterLastLogin, setDaysAfterLastLogin] = useState(7);\n  const selectInputRef = useRef();\n\n  const uniOptions = [\n    {\n      label: 'Pedagogium',\n      value: 72421,\n    },\n    {\n      label: 'WYŻSZA SZKOŁA TURYSTYKI I JĘZYKÓW OBCYCH W WARSZAWE',\n      value: 78737,\n    },\n    {\n      label: 'Вища школа бізнесу медіа і реклами',\n      value: 'pl',\n    },\n  ];\n\n  useEffect(() => {\n    document.title = 'Polish University Users Admin Panel | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        if (localStorage.getItem('isAdmin')) {\n          const res = await axios.post('admins/refresh/users/', {});\n          setAuthToken(res.data.newToken);\n          setIsUserAdmin(isAdmin => (isAdmin = true));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n\n    const getUsers = async () => {\n      try {\n        if (isUserAdmin) {\n          const response = await axios.get('/uniusers/admin/');\n          setUsers(users => (users = [...response.data.reverse()]));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getUsers();\n\n    const onEscapeClose = event => {\n      if (event.code === 'Escape') {\n        closeEditForm();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [isUserAdmin]);\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  const onClear = () => {\n    selectInputRef.current.clearValue();\n  };\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2\n        ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/'))\n        : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.post('/admins/login/users', values);\n      setAuthToken(response.data.token);\n      setIsUserAdmin(isAdmin => (isAdmin = true));\n      localStorage.setItem('isAdmin', true);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const initialUserValues = {\n    name: '',\n    mail: '',\n    password: '',\n    crmId: '',\n    contactId: '',\n    pupilId: '',\n    marathonId: '',\n    university: '',\n  };\n\n  const usersSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required(\n        \"Ім'я - обов'язкове поле, якщо імені з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    mail: yup.string().required(\"Пошта - обов'язкове поле!\"),\n    password: yup.string().required(\"Пароль - обов'язкове поле!\"),\n    crmId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    contactId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    pupilId: yup\n      .string()\n      .min(6, 'Не менше 6 цифр')\n      .max(7, 'Не більше 7 цифр')\n      .matches(/^\\d{1,7}$/, 'Лише цифри')\n      .required(\"Обов'язкове поле, дивитись на платформі\"),\n    marathonId: yup\n      .string()\n      .min(4, 'Не менше 4 цифр')\n      .max(7, 'Не більше 7 цифр')\n      .matches(/^\\d{1,7}$/, 'Лише цифри'),\n    university: yup\n      .string()\n      .required(\"Менеджер - обов'язкове поле, введіть прізвище\"),\n  });\n\n  const handleUserSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.name = values.name.trim().trimStart();\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    values.crmId = values.crmId ? +values.crmId.trim().trimStart() : undefined;\n    values.contactId = values.contactId\n      ? +values.contactId.trim().trimStart()\n      : undefined;\n    values.pupilId = values.pupilId.trim().trimStart();\n    values.marathonId = values.marathonId.trim().trimStart();\n    values.university = values.university.toLowerCase().trim().trimStart();\n    try {\n      const response = await axios.post('/uniusers/new', values);\n      console.log(response.data);\n      setUsers(users => [response.data, ...users]);\n      resetForm();\n      onClear();\n      alert('Юзера додано');\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const handleEdit = async id => {\n    setIsEditFormOpen(true);\n    setUserToEdit(\n      userToEdit => (userToEdit = users.find(user => user._id === id))\n    );\n  };\n\n  const closeEditForm = e => {\n    setIsEditFormOpen(false);\n  };\n\n  const closeEditFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditFormOpen(false);\n    }\n  };\n\n  const updateUser = (id, values) => {\n    const userToUpdate = users.find(user => user._id === id);\n    userToUpdate.name = values.name;\n    userToUpdate.mail = values.mail;\n    userToUpdate.password = values.password;\n    userToUpdate.pupilId = values.pupilId;\n    userToUpdate.marathonId = values.marathonId;\n    userToUpdate.crmId = values.crmId;\n    userToUpdate.contactId = values.contactId;\n    userToUpdate.university = values.university;\n\n    console.log(userToUpdate);\n\n    setUsers(\n      users =>\n        (users = users.map((user, i) =>\n          i === users.findIndex(user => user._id === id) ? userToUpdate : user\n        ))\n    );\n  };\n\n  const handleDelete = async id => {\n    setIsLoading(isLoading => (isLoading = true));\n    const areYouSure = window.confirm(\n      `Точно видалити ${users.find(user => user._id === id).name}?`\n    );\n\n    if (!areYouSure) {\n      setIsLoading(isLoading => (isLoading = false));\n      return;\n    } else {\n      try {\n        const response = await axios.delete(`/users/${id}`);\n        console.log(response);\n        alert('Юзера видалено');\n        setUsers(users => (users = [...users.filter(user => user._id !== id)]));\n      } catch (error) {\n        console.error(error);\n        alert(\n          'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n        );\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    }\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        {!isUserAdmin && (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Login\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Залогінитись</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        )}\n\n        {isUserAdmin && (\n          <Formik\n            initialValues={initialUserValues}\n            onSubmit={handleUserSubmit}\n            validationSchema={usersSchema}\n          >\n            <UsersForm>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Прізвище та ім'я\"\n                />\n                <AdminInputNote component=\"p\" name=\"name\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"email\"\n                  name=\"mail\"\n                  placeholder=\"Електронна пошта (логін)\"\n                />\n                <AdminInputNote component=\"p\" name=\"mail\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"password\" placeholder=\"Пароль\" />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"crmId\"\n                  placeholder=\"ID ліда в CRM\"\n                />\n                <AdminInputNote component=\"p\" name=\"crmId\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"contactId\"\n                  placeholder=\"ID контакту в CRM\"\n                />\n                <AdminInputNote component=\"p\" name=\"contactId\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"pupilId\"\n                  placeholder=\"ID студента на платформі\"\n                />\n                <AdminInputNote component=\"p\" name=\"pupilId\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"marathonId\"\n                  placeholder=\"ID марафону, до якого приєднаний студент\"\n                />\n                <AdminInputNote component=\"p\" name=\"marathonId\" />\n              </Label>\n              <SpeakingLabel>\n                {uniValue && uniValue.value && <LabelText>Університет</LabelText>}\n                <TeacherLangSelect\n                  ref={selectInputRef}\n                  options={uniOptions}\n                  styles={{\n                    control: (baseStyles, state) => ({\n                      ...baseStyles,\n                      border: 'none',\n                      borderRadius: '50px',\n                      minHeight: '34px',\n                    }),\n                    menu: (baseStyles, state) => ({\n                      ...baseStyles,\n                      position: 'absolute',\n                      zIndex: '2',\n                      top: '36px',\n                    }),\n                    dropdownIndicator: (baseStyles, state) => ({\n                      ...baseStyles,\n                      padding: '7px',\n                    }),\n                  }}\n                  placeholder=\"Мова\"\n                  name=\"lang\"\n                  onBlur={() => {\n                    !uniValue\n                      ? setIsUniEmpty(empty => (empty = true))\n                      : setIsUniEmpty(empty => (empty = false));\n                  }}\n                  onChange={uni => {\n                    setUniValue(uni);\n                    uni?.value && setIsUniEmpty(empty => (empty = false));\n                  }}\n                />\n                {isUniEmpty && (\n                  <ErrorNote> Університет - обов'язкове поле!</ErrorNote>\n                )}\n              </SpeakingLabel>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"university\"\n                  placeholder=\"Назва університету\"\n                />\n                <AdminInputNote component=\"p\" name=\"university\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Додати юзера</AdminFormBtn>\n            </UsersForm>\n          </Formik>\n        )}\n        {isUserAdmin && users && (\n          <UserDBTable>\n            <UserDBCaption>Список юзерів з доступом до уроків</UserDBCaption>\n            <thead>\n              <UserDBRow>\n                <UserHeadCell>CRM&nbsp;Лід Контакт</UserHeadCell>\n                <UserHeadCell>Ім'я</UserHeadCell>\n                <UserHeadCell>Пошта (логін)</UserHeadCell>\n                <UserHeadCell>Пароль</UserHeadCell>\n                <UserHeadCell>Відвідини</UserHeadCell>\n                <UserHeadCell>Відвідини з часом</UserHeadCell>\n                <UserHeadCell>Університет</UserHeadCell>\n                <UserHeadCell>ID марафону</UserHeadCell>\n                <UserHeadCell>ID на платформі</UserHeadCell>\n                <UserHeadCell>Edit</UserHeadCell>\n                <UserHeadCell>Delete</UserHeadCell>\n              </UserDBRow>\n            </thead>\n            <tbody>\n              {users.map(user => (\n                <UserDBRow key={user._id}>\n                  <UserCell>\n                    <a\n                      href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {user.crmId}\n                    </a>{' '}\n                    <a\n                      href={`https://apeducation.kommo.com/contacts/detail/${user.contactId}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {user.contactId}\n                    </a>\n                  </UserCell>\n                  <UserCell>{user.name}</UserCell>\n                  <UserCell>{user.mail}</UserCell>\n                  <UserCell>{user.password}</UserCell>\n                  <UserCell>{user.pupilId}</UserCell>\n                  <UserCell>{user.marathonId}</UserCell>\n                  <UserCell\n                    className={\n                      Math.floor(\n                        (Date.now() -\n                          changeDateFormat(\n                            user.visited[user.visited.length - 1]\n                          )) /\n                          86400000\n                      ) > daysAfterLastLogin\n                        ? 'attention'\n                        : ''\n                    }\n                  >\n                    {user.visited[user.visited.length - 1]}\n                  </UserCell>\n                  <UserCell>\n                    {!user.visitedTime[user.visitedTime.length - 1]\n                      ? ''\n                      : user.visitedTime[user.visitedTime.length - 1].match(\n                          '^202'\n                        )\n                      ? new Date(\n                          user.visitedTime[user.visitedTime.length - 1]\n                        ).toLocaleString('uk-UA')\n                      : new Date(\n                          changeDateFormat(\n                            user.visitedTime[user.visitedTime.length - 1]\n                          )\n                        ).toLocaleString('uk-UA', { timeZone: '+06:00' })}\n                  </UserCell>\n                  <UserCell className=\"last-name\">{user.university}</UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserEditButton onClick={() => handleEdit(user._id)}>\n                        Edit\n                      </UserEditButton>\n                    )}\n                  </UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserDeleteButton onClick={() => handleDelete(user._id)}>\n                        Del\n                      </UserDeleteButton>\n                    )}\n                  </UserCell>\n                </UserDBRow>\n              ))}\n            </tbody>\n          </UserDBTable>\n        )}\n        {isEditFormOpen && (\n          <Backdrop onMouseDown={closeEditFormOnClick} id=\"close-on-click\">\n            <UserEditForm\n              userToEdit={userToEdit}\n              updateUser={updateUser}\n              closeEditForm={closeEditForm}\n            />\n          </Backdrop>\n        )}\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n\nexport default UserAdminPanel;\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  UsersEditForm,\n} from '../UserAdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nexport const UserEditForm = ({ userToEdit, updateUser, closeEditForm }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const initialUserValues = {\n    crmId: userToEdit.crmId || '',\n    contactId: userToEdit.contactId || '',\n    name: userToEdit.name,\n    mail: userToEdit.mail,\n    zoomMail: userToEdit.zoomMail || '',\n    password: userToEdit.password,\n    pupilId: userToEdit.pupilId,\n    marathonNumber: userToEdit.marathonNumber || '',\n    adult: userToEdit.adult,\n    age: userToEdit.age,\n    lang: userToEdit.lang,\n    course: userToEdit.course,\n    package: userToEdit.package,\n    knowledge: userToEdit.knowledge,\n    manager: userToEdit.manager,\n  };\n\n  const usersSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required(\n        \"Ім'я - обов'язкове поле, якщо імені з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    mail: yup.string().required(\"Пошта - обов'язкове поле!\"),\n    zoomMail: yup.string(),\n    password: yup.string().required(\"Пароль - обов'язкове поле!\"),\n    crmId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    contactId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    pupilId: yup\n      .string()\n      .min(6, 'Не менше 6 цифр')\n      .max(7, 'Не більше 7 цифр')\n      .matches(/^\\d{1,7}$/, 'Лише цифри')\n      .required(\"Обов'язкове поле, дивитись на платформі\"),\n    marathonNumber: yup\n      .string()\n      .max(1, 'Не більше 1 цифри')\n      .matches(/[12]/, 'Лише цифри 1 або 2'),\n    age: yup\n      .string()\n      .required(\n        \"Вік - обов'язкове поле, якщо віку з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    lang: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    course: yup\n      .string()\n      .required(\n        \"Обов'язкове поле, для тестових юзерів або нерозподілених користувачів введіть 0\"\n      ),\n    package: yup.string().optional(),\n    // .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    knowledge: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    manager: yup\n      .string()\n      .required(\"Менеджер - обов'язкове поле, введіть прізвище\"),\n  });\n\n  const handleUserSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.name = values.name.trim().trimStart();\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.zoomMail = values.zoomMail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    values.pupilId = values.pupilId.trim().trimStart();\n    values.marathonNumber = values.marathonNumber.trim().trimStart();\n    values.crmId =\n      values.crmId && typeof values.crmId !== 'number'\n        ? +values.crmId.trim().trimStart()\n        : typeof values.crmId === 'number'\n        ? values.crmId\n        : undefined;\n    values.contactId =\n      values.contactId && typeof values.contactId !== 'number'\n        ? +values.contactId.trim().trimStart()\n        : typeof values.contactId === 'number'\n        ? values.contactId\n        : undefined;\n    values.age = values.age.trim().trimStart();\n    values.adult = +values.age > 18 ? true : false;\n    values.lang = values.lang.toLowerCase().trim().trimStart();\n    values.package =\n      values.package === undefined\n        ? ''\n        : values.package.toLowerCase().trim().trimStart();\n    values.course =\n      values.course === undefined\n        ? ''\n        : values.course.toLowerCase().trim().trimStart();\n    values.knowledge =\n      values.knowledge === undefined\n        ? ''\n        : values.knowledge.toLowerCase().trim().trimStart();\n    values.manager = values.manager.toLowerCase().trim().trimStart();\n    try {\n      const response = await axios.put(`/users/${userToEdit._id}`, values);\n      console.log(response);\n      resetForm();\n      alert('Юзера відредаговано');\n      updateUser(userToEdit._id, values);\n      closeEditForm();\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialUserValues}\n        onSubmit={handleUserSubmit}\n        validationSchema={usersSchema}\n      >\n        <UsersEditForm>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Прізвище та ім'я\"\n            />\n            <AdminInputNote component=\"p\" name=\"name\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"email\"\n              name=\"mail\"\n              placeholder=\"Електронна пошта (логін)\"\n            />\n            <AdminInputNote component=\"p\" name=\"mail\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"email\" name=\"zoomMail\" placeholder=\"Zoom-пошта\" />\n            <AdminInputNote component=\"p\" name=\"zoomMail\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"password\" placeholder=\"Пароль\" />\n            <AdminInputNote component=\"p\" name=\"password\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"crmId\" placeholder=\"ID ліда в CRM\" />\n            <AdminInputNote component=\"p\" name=\"crmId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"contactId\"\n              placeholder=\"ID контакту в CRM\"\n            />\n            <AdminInputNote component=\"p\" name=\"contactId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"pupilId\"\n              placeholder=\"ID учня на платформі\"\n            />\n            <AdminInputNote component=\"p\" name=\"pupilId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"marathonNumber\"\n              placeholder=\"№ марафону на платформі\"\n            />\n            <AdminInputNote component=\"p\" name=\"marathonNumber\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"age\" placeholder=\"Вік\" />\n            <AdminInputNote component=\"p\" name=\"age\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"lang\" placeholder=\"Мова\" />\n            <AdminInputNote component=\"p\" name=\"lang\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"course\" placeholder=\"Потік\" />\n            <AdminInputNote component=\"p\" name=\"course\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"package\" placeholder=\"Пакет послуг\" />\n            <AdminInputNote component=\"p\" name=\"package\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"knowledge\"\n              placeholder=\"Рівень знань\"\n            />\n            <AdminInputNote component=\"p\" name=\"knowledge\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"manager\"\n              placeholder=\"Прізвище відповідального менеджера\"\n            />\n            <AdminInputNote component=\"p\" name=\"manager\" />\n          </Label>\n          <AdminFormBtn type=\"submit\">Підтвердити зміни</AdminFormBtn>\n        </UsersEditForm>\n      </Formik>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n","import { FormBtn } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport { AdminInputNote } from 'pages/Streams/AdminPanel/AdminPanel.styled';\nimport { FormSelect } from 'pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled';\nimport DatePicker from 'react-datepicker';\nimport styled from 'styled-components';\n\nexport const UserSpeakingEditForm = styled(Form)`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: calc(100vw - 20px);\n  max-width: 400px;\n\n  background-color: white;\n  padding: 16px;\n  border-radius: 16px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  & .react-datepicker__tab-loop {\n    margin-top: -6px;\n  }\n\n  & .react-datepicker-popper {\n    z-index: 2;\n  }\n\n  @media screen and (min-height: 960px) {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100%;\n    transform: translate(-50%, -50%);\n\n    padding: 16px 24px;\n    border-radius: 24px;\n\n    gap: 9px;\n  }\n\n  @media screen and (min-height: 960px) {\n    & .react-datepicker__tab-loop {\n      margin-top: -9px;\n    }\n  }\n`;\n\nexport const SpeakingLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n  position: relative;\n\n  &:first-child {\n    padding-top: 4px;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  width: 100%;\n  max-height: 38px;\n  padding: 10px;\n  border: 2px solid var(--main-color);\n\n  @media screen and (min-width: 960px) {\n    font-size: 16px;\n  }\n\n  &.error {\n    border: 4px solid red;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-burnt-color);\n    outline: transparent;\n  }\n`;\n\nexport const LabelText = styled.span`\n  position: absolute;\n  top: -5.5px;\n  left: 10px;\n  z-index: 1;\n  background-color: white;\n\n  font-size: 10px;\n  display: block;\n  padding: 1px;\n\n  @media screen and (min-height: 960px) {\n    top: -8px;\n    font-size: 12px;\n    padding: 2px;\n  }\n`;\n\nexport const LabelDatePickerText = styled(LabelText)`\n  position: absolute;\n  top: 0px;\n  left: 10px;\n  z-index: 1;\n  background-color: white;\n\n  font-size: 10px;\n  display: block;\n  padding: 1px;\n\n  @media screen and (min-height: 960px) {\n    top: 1px;\n    padding: 2px;\n    font-size: 12px;\n  }\n`;\n\nexport const SpeakingSelect = styled(FormSelect)`\n  font-size: 16px;\n`;\n\nexport const SpeakingFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n  padding: 12px;\n  height: auto;\n\n  @media screen and (min-width: 768px) {\n    padding: 16px;\n    letter-spacing: 0.6px;\n  }\n`;\n\nexport const StudentDateInputNote = styled.p`\n  text-align: center;\n  font-size: 14px;\n  color: red;\n`;\n\nexport const StudentTextAreaNote = styled(AdminInputNote)`\n  color: red;\n`;\n"],"names":["AdminPanelSection","styled","_templateObject","_taggedTemplateLiteral","LoginForm","Form","_templateObject2","UsersForm","_templateObject3","UsersEditForm","_templateObject4","AdminFormBtn","FormBtn","_templateObject5","AdminInput","Input","_templateObject6","AdminInputNote","InputNote","_templateObject7","UserDBTable","_templateObject8","UserDBCaption","_templateObject9","UserDBRow","_templateObject10","_templateObject11","UserHeadCell","_templateObject12","UserCell","_templateObject13","_templateObject14","UserEditButton","_templateObject15","_templateObject16","UserDeleteButton","_templateObject17","Feedback","_templateObject18","FilterIcon","_templateObject19","_templateObject20","_templateObject21","_templateObject22","TeacherTable","_templateObject23","TeacherLangSelect","SpeakingSelect","_templateObject24","ErrorNote","_templateObject25","DateInputBox","_templateObject26","DateInputLabel","_templateObject27","DateInputSelect","_templateObject28","ScheduleList","ScheduleHeading","ScheduleItem","ScheduleInfo","ScheduleData","ScheduleDataDayText","ScheduleDataTypeText","ScheduleDataTimeText","FormSelect","Select","axios","setAuthToken","token","concat","UserAdminPanel","isLoading","setIsLoading","useState","isUserAdmin","setIsUserAdmin","users","setUsers","isEditFormOpen","setIsEditFormOpen","userToEdit","setUserToEdit","uniValue","setUniValue","isUniEmpty","setIsUniEmpty","daysAfterLastLogin","setDaysAfterLastLogin","selectInputRef","useRef","useEffect","document","title","async","console","log","localStorage","getItem","res","data","newToken","isAdmin","error","refreshToken","response","reverse","getUsers","onEscapeClose","event","code","closeEditForm","window","addEventListener","removeEventListener","loginSchema","yup","shape","login","required","password","changeDateFormat","dateString","dateArray","split","length","Date","parse","join","usersSchema","name","mail","crmId","matches","contactId","pupilId","min","max","marathonId","university","e","_jsx","_Fragment","children","_jsxs","Formik","initialValues","onSubmit","values","_ref","resetForm","setItem","validationSchema","Label","type","placeholder","component","_ref2","trim","trimStart","toLowerCase","undefined","current","clearValue","alert","SpeakingLabel","value","LabelText","ref","options","label","styles","control","baseStyles","state","border","borderRadius","minHeight","menu","position","zIndex","top","dropdownIndicator","padding","onBlur","empty","onChange","uni","map","user","href","target","rel","className","Math","floor","now","visited","visitedTime","match","toLocaleString","timeZone","onClick","find","_id","id","handleEdit","confirm","filter","handleDelete","Backdrop","onMouseDown","UserEditForm","updateUser","userToUpdate","i","findIndex","Loader","initialUserValues","zoomMail","marathonNumber","adult","age","lang","course","package","knowledge","manager","optional","UserSpeakingEditForm","StyledDatePicker","DatePicker","LabelDatePickerText","SpeakingFormBtn","StudentDateInputNote","StudentTextAreaNote"],"sourceRoot":""}