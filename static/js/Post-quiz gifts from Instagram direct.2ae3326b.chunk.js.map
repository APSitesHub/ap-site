{"version":3,"file":"static/js/Post-quiz gifts from Instagram direct.2ae3326b.chunk.js","mappings":"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","sources":["pages/Gifts/GiftsDirect.jsx"],"sourcesContent":["import axios from 'axios';\nimport {\n  Label,\n  LeftFormBackgroundStar,\n  RightFormBackgroundStar,\n} from 'components/LeadForm/LeadForm.styled';\nimport { LoginFormText } from 'components/Stream/Stream.styled';\nimport { Formik, useFormikContext } from 'formik';\nimport {\n  ExternalLinkIcon,\n  LessonTopBox,\n  LessonValuePdfLink,\n  LessonVideoBox,\n  PdfBox,\n  PdfWrapper,\n} from 'pages/MyAP/LessonFinder/LessonFinder.styled';\nimport { QuizFormLink, Title } from 'pages/Quiz/Quiz.styled';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  LoginForm,\n} from 'pages/Streams/AdminPanel/AdminPanel.styled';\nimport { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player/youtube';\nimport * as yup from 'yup';\nimport { ReactComponent as PdfIcon } from '../../img/svg/pdf-icon.svg';\nimport {\n  GiftLinkIcon,\n  GiftsBox,\n  GiftsBoxItem,\n  GiftsDescription,\n  GiftsVideoBox,\n  Logo,\n  PdfPreview,\n  PdfPreviewBackground,\n  QuizletLink,\n  QuizletLogo,\n  QuizletShortLogo,\n  SubTitle,\n  YouTubeLogo,\n} from './Gifts.styled';\nimport { gifts } from './giftsSet';\nimport { useLocation } from 'react-router-dom';\n\nconsole.log(gifts);\n\nconst GiftsDirect = () => {\n  const [isUserLogged, setIsUserLogged] = useState(false);\n  const [user, setUser] = useState({});\n  const [isPhoneSent, setIsPhoneSent] = useState(false);\n  const [isPdfPreviewOpen, setIsPdfPreviewOpen] = useState(false);\n  const [openedPdf, setOpenedPdf] = useState('');\n\n  const mailRandomId = Math.floor(Math.random() * 1000000).toString();\n  const passwordRandom = Math.floor(Math.random() * 1000000).toString();\n  const authCodeRandom = Math.floor(Math.random() * 1000000).toString();\n\n  console.log(user);\n\n  const id = useLocation().pathname.match(/(\\d+)/)[0];\n  console.log(id);\n\n  axios.defaults.baseURL = 'http://localhost:5000';\n\n  const setAuthToken = token => {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  };\n\n  useEffect(() => {\n    document.title = 'Подарункові матеріали | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      console.log(localStorage.getItem('authCode'));\n      if (localStorage.getItem('authCode')) {\n        try {\n          const res = await axios.post('/users/refresh-code', {\n            authCode: localStorage.getItem('authCode'),\n          });\n          setIsUserLogged(isLogged => (isLogged = true));\n          console.log(res);\n          setUser(user => (user = { ...res.data.user }));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n\n    refreshToken();\n  }, []);\n\n  const initialPhoneValues = {\n    phone: '',\n    name: `Marathon User ${authCodeRandom}`,\n    mail:\n      mailRandomId.length < 6\n        ? `marathon-ap0${mailRandomId}@ap.edu`\n        : `marathon-ap${mailRandomId}@ap.edu`,\n    password: passwordRandom.length < 6 ? '0' + passwordRandom : passwordRandom,\n    authCode: authCodeRandom,\n  };\n\n  const initialAuthCodeValue = {\n    authCode: '',\n  };\n\n  const QuizSubmitLink = () => {\n    console.log(useFormikContext());\n    const { values, isValid, submitForm } = useFormikContext();\n    return (\n      <QuizFormLink\n        onClick={async e => {\n          console.log(isValid);\n          if (values.authCode && isValid) {\n            console.log('valid');\n            await submitForm();\n            // setIsLoading(isLoading => (isLoading = false));\n          }\n        }}\n      >\n        Перейти до подарунків\n      </QuizFormLink>\n    );\n  };\n\n  const phoneSchema = yup.object().shape({\n    phone: yup\n      .string()\n      .required('Будь ласка, вкажіть свій номер телефону!')\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Будь ласка, введіть валідний номер телефону!'\n      )\n      .min(10, 'Номер телефону має складатися не менше ніж з 10 символів!')\n      .max(15, 'Номер телефону має складатися не більше ніж з 15 символів!'),\n    name: yup.string(),\n    mail: yup.string(),\n    password: yup.string(),\n    authCode: yup.string(),\n  });\n\n  const authCodeSchema = yup.object().shape({\n    authCode: yup\n      .string()\n      .required('Вкажіть код, який ми надіслали вам в SMS!'),\n  });\n\n  const handlePhoneSubmit = async (values, { resetForm }) => {\n    values.phone = values.phone.trim().trimStart();\n    try {\n      const response = await axios.put(`/users/crm-gifts/${id}`, values);\n      console.log(response);\n      setAuthToken(response.data.token);\n      setIsPhoneSent(isPhoneSent => (isPhoneSent = true));\n      setUser(user => (user = { ...response.data }));\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCodeSubmit = async (values, { resetForm }) => {\n    values = { authCode: values.authCode.trim().trimStart() };\n    console.log(values);\n    try {\n      const response = await axios.post('/users/login-direct', values);\n      setAuthToken(response.data.token);\n      setIsUserLogged(isLogged => (isLogged = true));\n      setUser(user => (user = { ...response.data.user }));\n      localStorage.setItem('authCode', user.authCode);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const togglePdfPreviewOnTouch = pdfId => {\n    const pdfOpener = pdfId => {\n      console.log('opener');\n      setOpenedPdf(pdf => (pdf = pdfId));\n      setIsPdfPreviewOpen(isOpen => !isOpen);\n    };\n\n    setOpenedPdf(pdfId);\n    isPdfPreviewOpen && pdfId !== openedPdf\n      ? setOpenedPdf(pdf => (pdf = pdfId))\n      : !isPdfPreviewOpen && pdfId === openedPdf\n      ? setIsPdfPreviewOpen(isOpen => !isOpen)\n      : isPdfPreviewOpen && pdfId === openedPdf\n      ? setIsPdfPreviewOpen(isOpen => !isOpen)\n      : pdfOpener(pdfId);\n  };\n\n  const openPdfPreviewOnHover = e => {\n    setOpenedPdf(pdf => (pdf = e.target.id));\n    if (!isPdfPreviewOpen) {\n      setIsPdfPreviewOpen(isOpen => !isOpen);\n    }\n  };\n\n  const closePdfPreviewOnMouseOut = () => {\n    console.log('mouse out?');\n    setOpenedPdf(pdf => (pdf = ''));\n    if (isPdfPreviewOpen) {\n      setIsPdfPreviewOpen(isOpen => !isOpen);\n    }\n  };\n\n  return (\n    <>\n      {!isUserLogged && !isPhoneSent ? (\n        <Formik\n          initialValues={initialPhoneValues}\n          onSubmit={handlePhoneSubmit}\n          validationSchema={phoneSchema}\n        >\n          <LoginForm>\n            <LeftFormBackgroundStar />\n            <RightFormBackgroundStar />\n            <LoginFormText>\n              Привіт!\n              <br />\n              Для отримання паролю від цієї сторінки, будь ласка, вкажіть свій\n              актуальний номер!\n            </LoginFormText>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"phone\"\n                placeholder=\"Номер телефону*\"\n              />\n              <AdminInputNote component=\"p\" name=\"phone\" />\n            </Label>\n            <AdminFormBtn type=\"submit\">Отримати код</AdminFormBtn>\n          </LoginForm>\n        </Formik>\n      ) : !isUserLogged && isPhoneSent ? (\n        <Formik\n          initialValues={initialAuthCodeValue}\n          onSubmit={handleCodeSubmit}\n          validationSchema={authCodeSchema}\n        >\n          <LoginForm>\n            <LeftFormBackgroundStar />\n            <RightFormBackgroundStar />\n            <LoginFormText>\n              Вкажіть код, який ми надіслали вам в SMS-повідомленні!\n            </LoginFormText>\n            <Label>\n              <AdminInput type=\"text\" name=\"authCode\" placeholder=\"Код*\" />\n              <AdminInputNote component=\"p\" name=\"authCode\" />\n            </Label>\n            <QuizSubmitLink>Перейти до подарунків</QuizSubmitLink>\n            {/* <AdminFormBtn type=\"submit\">Увійти</AdminFormBtn> */}\n          </LoginForm>\n        </Formik>\n      ) : (\n        <>\n          <Logo />\n          <Title>Подарункові матеріали</Title>\n          <SubTitle>\n            Розпочніть своє навчання вже зараз з безкоштовними подарунковими\n            матеріалами!\n          </SubTitle>\n          <GiftsBox>\n            {gifts[user.lang][user.knowledge].map((gift, i) => (\n              <>\n                <GiftsBoxItem key={i}>\n                  {gift.type === 'quizlet' && (\n                    <LessonTopBox>\n                      <QuizletLink\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        to={gift.link}\n                      >\n                        <QuizletLogo />\n                        <QuizletShortLogo />\n                        <GiftsDescription>\n                          Набір вправ для самостійного вивчення слів для рівня{' '}\n                          {gift.name}\n                        </GiftsDescription>\n                        <GiftLinkIcon />\n                      </QuizletLink>\n                    </LessonTopBox>\n                  )}\n                  {gift.type === 'video' && (\n                    <GiftsVideoBox\n                    // className={!isVideoOpen && 'minimized'}\n                    >\n                      <LessonTopBox>\n                        <YouTubeLogo />\n                        <GiftsDescription>{gift.name}</GiftsDescription>\n                      </LessonTopBox>\n                      <LessonVideoBox>\n                        <ReactPlayer\n                          loop={true}\n                          muted={false}\n                          controls={true}\n                          style={{\n                            display: 'block',\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                          }}\n                          width=\"100%\"\n                          height=\"100%\"\n                          url={gift.link}\n                        />\n                      </LessonVideoBox>\n                    </GiftsVideoBox>\n                  )}\n\n                  {gift.type === 'grammar' && (\n                    <PdfBox\n                      onMouseLeave={closePdfPreviewOnMouseOut}\n                      // className={!isGrammarOpen && 'minimized'}\n                    >\n                      <PdfWrapper\n                        id={gift.link}\n                        onMouseEnter={e => openPdfPreviewOnHover(e)}\n                        onTouchEnd={() => togglePdfPreviewOnTouch(gift.link)}\n                      >\n                        <PdfIcon />\n                        <LessonValuePdfLink\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          to={gift.link}\n                        >\n                          <GiftsDescription>{gift.name}</GiftsDescription>\n                          <ExternalLinkIcon />\n                        </LessonValuePdfLink>\n                      </PdfWrapper>\n                      <PdfPreviewBackground\n                        className={\n                          isPdfPreviewOpen &&\n                          openedPdf === gift.link &&\n                          'preview-open'\n                        }\n                      >\n                        {isPdfPreviewOpen && openedPdf === gift.link && (\n                          <PdfPreview\n                            title={`Preview of ${gift.link}`}\n                            src={gift.link\n                              .replace('open?id=', 'file/d/')\n                              .replace('view', 'preview')\n                              .replace('&usp=drive_copy', '/preview')}\n                            allow=\"autoplay\"\n                          ></PdfPreview>\n                        )}\n                      </PdfPreviewBackground>\n                    </PdfBox>\n                  )}\n                </GiftsBoxItem>\n              </>\n            ))}\n          </GiftsBox>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default GiftsDirect;\n"],"names":["console","log","gifts","GiftsDirect","isUserLogged","setIsUserLogged","useState","user","setUser","isPhoneSent","setIsPhoneSent","isPdfPreviewOpen","setIsPdfPreviewOpen","openedPdf","setOpenedPdf","mailRandomId","Math","floor","random","toString","passwordRandom","authCodeRandom","id","useLocation","pathname","match","axios","setAuthToken","token","concat","useEffect","document","title","async","localStorage","getItem","res","authCode","isLogged","data","error","refreshToken","initialPhoneValues","phone","name","mail","length","password","QuizSubmitLink","useFormikContext","values","isValid","submitForm","_jsx","QuizFormLink","onClick","children","phoneSchema","yup","shape","required","matches","min","max","authCodeSchema","closePdfPreviewOnMouseOut","pdf","isOpen","_Fragment","Formik","initialValues","onSubmit","_ref2","resetForm","trim","trimStart","response","setItem","validationSchema","_jsxs","LoginForm","LeftFormBackgroundStar","RightFormBackgroundStar","LoginFormText","Label","AdminInput","type","placeholder","AdminInputNote","component","Logo","Title","SubTitle","GiftsBox","lang","knowledge","map","gift","i","GiftsBoxItem","LessonTopBox","QuizletLink","target","rel","to","link","QuizletLogo","QuizletShortLogo","GiftsDescription","GiftLinkIcon","GiftsVideoBox","YouTubeLogo","LessonVideoBox","ReactPlayer","loop","muted","controls","style","display","position","top","left","width","height","url","PdfBox","onMouseLeave","PdfWrapper","onMouseEnter","e","openPdfPreviewOnHover","onTouchEnd","togglePdfPreviewOnTouch","pdfId","pdfOpener","PdfIcon","LessonValuePdfLink","ExternalLinkIcon","PdfPreviewBackground","className","PdfPreview","src","replace","allow","_ref","AdminFormBtn"],"sourceRoot":""}