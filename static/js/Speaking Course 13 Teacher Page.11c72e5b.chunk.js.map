{"version":3,"file":"static/js/Speaking Course 13 Teacher Page.11c72e5b.chunk.js","mappings":"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","sources":["pages/TeacherPage/TeacherPageSpeaking13.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport {\n  UserCell,\n  UserCellLeft,\n  UserChartButton,\n  UserDBCaption,\n  UserDBRow,\n  UserEditButton,\n  UserHeadCell,\n} from 'pages/Streams/UserAdminPanel/UserAdminPanel.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useOutletContext } from 'react-router-dom';\nimport {\n  TeacherSpeakingDBSection,\n  TeacherSpeakingDBTable,\n} from './TeacherPage.styled';\nimport { TeacherPageSpeakingEditForm } from './TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm';\nimport { StudentChart } from './StudentChart/StudentChart';\n\nconst TeacherPageSpeaking13 = () => {\n  const location = useLocation().pathname.split('/speakings/')[1];\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [course, setCourse] = useState('');\n  const [studentToEdit, setStudentToEdit] = useState({});\n  const [currentStudentChart, setCurrentStudentChart] = useState({});\n  const [isEditStudentFormOpen, setIsEditStudentFormOpen] = useState(false);\n  const [isStudentChartOpen, setIsStudentChartOpen] = useState(false);\n  const linksRegex = /\\b(?:https?|ftp):\\/\\/\\S+\\b/g;\n  const [currentUser] = useOutletContext();\n\n  const closeStudentEditForm = e => {\n    setIsEditStudentFormOpen(false);\n  };\n\n  const closeStudentChart = e => {\n    setIsStudentChartOpen(false);\n  };\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2\n        ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/'))\n        : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const getLocation = location => {\n    switch (location) {\n      case 'deutsch-a0':\n        return 'deutscha0';\n      case 'deutsch-a0_2':\n        return 'deutscha0_2';\n      case 'deutsch-a1':\n        return 'deutsch';\n      case 'deutsch-a1free':\n        return 'deutschfree';\n      case 'deutsch-a2':\n        return 'deutscha2';\n      case 'deutsch-a2free':\n        return 'deutscha2free';\n      case 'deutsch-b1':\n        return 'deutschb1';\n      case 'deutsch-b2':\n        return 'deutschb2';\n      case 'polski-a0':\n        return 'polskia0';\n      case 'polski-a0_2':\n        return 'polskia0_2';\n      case 'polski-a1':\n        return 'polski';\n      case 'polski-a1free':\n        return 'polskifree';\n      case 'polski-a2':\n        return 'polskia2';\n      case 'polski-b1':\n        return 'polskib1';\n      case 'polski-b2':\n        return 'polskib2';\n      default:\n        return location;\n    }\n  };\n\n  const getLanguageFromLocation = location => {\n    if (location.includes('kids')) {\n      if (location.includes('de') || location.includes('deutsch')) {\n        return 'dekids';\n      } else if (location.includes('pl') || location.includes('polski')) {\n        return 'plkids';\n      } else {\n        return 'enkids';\n      }\n    }\n    if (location.includes('de') || location.includes('deutsch')) {\n      return 'de';\n    } else if (location.includes('pl') || location.includes('polski')) {\n      return 'pl';\n    } else {\n      return 'en';\n    }\n  };\n  const page = getLocation(location);\n  const lang = getLanguageFromLocation(location);\n\n  const closeEditStudentFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditStudentFormOpen(false);\n    }\n  };\n\n  const closeStudentChartOnClick = e => {\n    if (e.target.id === 'close-chart-on-click') {\n      setIsStudentChartOpen(false);\n    }\n  };\n\n  const updateFeedback = (id, values) => {\n    const userToUpdate = users.find(user => user._id === id);\n    userToUpdate.successRate = values.successRate;\n    userToUpdate.temperament = values.temperament;\n    userToUpdate.grammar = values.grammar;\n    userToUpdate.lexis = values.lexis;\n    userToUpdate.speaking = values.speaking;\n    userToUpdate.listening = values.listening;\n    userToUpdate.activity = values.activity;\n    userToUpdate.feedback[0] = values.feedback;\n\n    setUsers(\n      users =>\n        (users = [...users.filter(user => user._id !== id), userToUpdate])\n    );\n  };\n\n  const handleStudentEdit = async id => {\n    setStudentToEdit(\n      studentToEdit =>\n        (studentToEdit = users.find(student => student.userId === id))\n    );\n    setIsEditStudentFormOpen(true);\n  };\n\n  const handleStudentChart = async id => {\n    setCurrentStudentChart(\n      currentStudentChart =>\n        (currentStudentChart = users.find(student => student.userId === id))\n    );\n    setIsStudentChartOpen(true);\n  };\n\n  useEffect(() => {\n    document.title = `Speaking Teacher ${page.toLocaleUpperCase()} | AP Education`;\n    const getSpeakingUsersRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setCourse('13');\n        const usersToSet = await axios.get('/speakingusers');\n\n        setUsers(\n          users =>\n            (users = [\n              ...usersToSet.data.filter(\n                user =>\n                  user.course === course ||\n                  user.course\n                    .split('/')\n                    .some(usersCourse => usersCourse === course)\n              ),\n            ])\n        );\n        console.log('eff');\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getSpeakingUsersRequest();\n  }, [course, page, lang]);\n\n  return (\n    <TeacherSpeakingDBSection>\n      <TeacherSpeakingDBTable>\n        <UserDBCaption>Список студентів, що відвідали заняття</UserDBCaption>\n        <thead>\n          <UserDBRow>\n            <UserHeadCell>№</UserHeadCell>\n            <UserHeadCell>CRM</UserHeadCell>\n            <UserHeadCell>Ім'я</UserHeadCell>\n            <UserHeadCell>Edit</UserHeadCell>\n            <UserHeadCell>Chart</UserHeadCell>\n            <UserHeadCell>Відвідини</UserHeadCell>\n            <UserHeadCell>Мова</UserHeadCell>\n            <UserHeadCell>Потік</UserHeadCell>\n            <UserHeadCell>Темперамент</UserHeadCell>\n            <UserHeadCell>Успішність</UserHeadCell>\n            <UserHeadCell>Граматика</UserHeadCell>\n            <UserHeadCell>Лексика</UserHeadCell>\n            <UserHeadCell>Говоріння</UserHeadCell>\n            <UserHeadCell>Слухання</UserHeadCell>\n            <UserHeadCell>Активність</UserHeadCell>\n            <UserHeadCell>Фідбек</UserHeadCell>\n          </UserDBRow>\n        </thead>\n        <tbody>\n          {users\n            .filter(\n              user =>\n                new Date() -\n                  new Date(\n                    changeDateFormat(user.visited[user.visited.length - 1])\n                  ) <=\n                  4 * 86400000 &&\n                (lang === user.lang ||\n                  user.lang.split('/').some(userLang => lang === userLang)) &&\n                (course === user.course ||\n                  user.course\n                    .split('/')\n                    .some(userCourse => course === userCourse))\n            )\n            .sort((a, b) => Intl.Collator('uk').compare(a.name, b.name))\n            .map((user, i) => (\n              <UserDBRow key={user._id}>\n                <UserCell>{i + 1}</UserCell>\n                <UserCell>\n                  <a\n                    href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {user.crmId}\n                  </a>\n                </UserCell>\n                <UserCellLeft>{user.name}</UserCellLeft>\n                <UserCell>\n                  {user.name === 'Dev Acc' ? null : (\n                    <UserEditButton\n                      onClick={() => handleStudentEdit(user.userId)}\n                    >\n                      Edit\n                    </UserEditButton>\n                  )}\n                </UserCell>\n                <UserCell>\n                  <UserChartButton\n                    onClick={() => handleStudentChart(user.userId)}\n                  >\n                    Chart\n                  </UserChartButton>\n                </UserCell>\n                <UserCell>\n                  {!user.visitedTime[user.visitedTime.length - 1]\n                    ? ''\n                    : user.visitedTime[user.visitedTime.length - 1].match(\n                        '^202'\n                      )\n                    ? new Date(\n                        user.visitedTime[user.visitedTime.length - 1]\n                      ).toLocaleString('uk-UA')\n                    : ''}\n                </UserCell>\n                <UserCell>{user.lang}</UserCell>\n                <UserCell>{user.course}</UserCell>\n                <UserCell>\n                  {user.temperament === 'extro'\n                    ? 'Екстраверт'\n                    : user.temperament === 'intro'\n                    ? 'Інтроверт'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.successRate === 'good'\n                    ? 'Сильний'\n                    : user.successRate === 'mid'\n                    ? 'Середній'\n                    : user.successRate === 'bad'\n                    ? 'Слабкий'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.grammar === 3\n                    ? 'Дуже добре'\n                    : user.grammar === 2\n                    ? 'Добре'\n                    : user.grammar === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.lexis === 3\n                    ? 'Дуже добре'\n                    : user.lexis === 2\n                    ? 'Добре'\n                    : user.lexis === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.speaking === 3\n                    ? 'Дуже добре'\n                    : user.speaking === 2\n                    ? 'Добре'\n                    : user.speaking === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.listening === 3\n                    ? 'Дуже добре'\n                    : user.listening === 2\n                    ? 'Добре'\n                    : user.listening === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.activity === 3\n                    ? 'Дуже добре'\n                    : user.activity === 2\n                    ? 'Добре'\n                    : user.activity === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCellLeft\n                  dangerouslySetInnerHTML={{\n                    __html:\n                      typeof user.feedback[user.feedback.length - 1] ===\n                      'string'\n                        ? user.feedback[user.feedback.length - 1]\n                            .replace(\n                              linksRegex,\n                              match =>\n                                `<a href=\"${match}\" target=\"_blank\">${\n                                  match.length > 50\n                                    ? match.slice(0, 50) + '...'\n                                    : match\n                                }</a>`\n                            )\n                            .split(' ')\n                            .slice(1)\n                            .join(' ')\n                        : '',\n                  }}\n                ></UserCellLeft>\n              </UserDBRow>\n            ))}\n        </tbody>\n      </TeacherSpeakingDBTable>\n\n      {isEditStudentFormOpen && (\n        <Backdrop onMouseDown={closeEditStudentFormOnClick} id=\"close-on-click\">\n          <TeacherPageSpeakingEditForm\n            currentUser={currentUser}\n            studentToEdit={studentToEdit}\n            updateFeedback={updateFeedback}\n            closeStudentEditForm={closeStudentEditForm}\n          />\n        </Backdrop>\n      )}\n\n      {isStudentChartOpen && (\n        <Backdrop\n          onMouseDown={closeStudentChartOnClick}\n          id=\"close-chart-on-click\"\n        >\n          <StudentChart\n            currentStudentChart={currentStudentChart}\n            closeCourseLevelEditForm={closeStudentChart}\n          />\n        </Backdrop>\n      )}\n      {isLoading && <Loader />}\n    </TeacherSpeakingDBSection>\n  );\n};\n\nexport default TeacherPageSpeaking13;\n"],"names":["TeacherPageSpeaking13","location","useLocation","pathname","split","isLoading","setIsLoading","useState","users","setUsers","course","setCourse","studentToEdit","setStudentToEdit","currentStudentChart","setCurrentStudentChart","isEditStudentFormOpen","setIsEditStudentFormOpen","isStudentChartOpen","setIsStudentChartOpen","linksRegex","currentUser","useOutletContext","page","getLocation","lang","includes","getLanguageFromLocation","useEffect","document","title","concat","toLocaleUpperCase","async","usersToSet","axios","data","filter","user","some","usersCourse","console","log","error","getSpeakingUsersRequest","_jsxs","TeacherSpeakingDBSection","children","TeacherSpeakingDBTable","_jsx","UserDBCaption","UserDBRow","UserHeadCell","Date","dateString","dateArray","length","parse","join","changeDateFormat","visited","userLang","userCourse","sort","a","b","Intl","Collator","compare","name","map","i","UserCell","href","crmId","target","rel","UserCellLeft","UserEditButton","onClick","find","student","userId","id","handleStudentEdit","UserChartButton","handleStudentChart","visitedTime","match","toLocaleString","temperament","successRate","grammar","lexis","speaking","listening","activity","dangerouslySetInnerHTML","__html","feedback","replace","slice","_id","Backdrop","onMouseDown","e","TeacherPageSpeakingEditForm","updateFeedback","values","userToUpdate","closeStudentEditForm","StudentChart","closeCourseLevelEditForm","Loader"],"sourceRoot":""}