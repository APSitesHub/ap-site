{"version":3,"file":"static/js/Speaking Teacher Page.d0de7501.chunk.js","mappings":"oSAKiCA,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6HAQtBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uLAYZF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2FAQTF,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAeO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8BAIjBF,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAaS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,mDAIVF,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,6HAQZF,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAiBY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wHA5CxC,MAoDMW,EAAeb,EAAAA,GAAAA,GAASc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,0IAUxBa,EAAkBf,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,6EAM3Be,EAAejB,EAAAA,GAAAA,GAASkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,+DAMxBiB,EAAenB,EAAAA,GAAAA,GAASoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,qEAMxBmB,EAAerB,EAAAA,GAAAA,GAASsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,iLAUxBqB,EAAsBvB,EAAAA,GAAAA,KAAWwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,8BAIjCuB,EAAuBzB,EAAAA,GAAAA,KAAW0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,sDAKlCyB,EAAuB3B,EAAAA,GAAAA,KAAW4B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,sDAWlC2B,GANoB7B,EAAAA,GAAAA,EAAQ8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,mEAMfF,EAAAA,EAAAA,IAAO+B,EAAAA,GAAP/B,CAAcgC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,kS,8OC7GjC,MAAM+B,GAAuBjC,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8uBA4CnCgC,EAAgBlC,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4JAY5BiC,GAAmBnC,EAAAA,EAAAA,IAAOoC,IAAPpC,CAAkBK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gSAiBrCmC,EAAYrC,EAAAA,GAAAA,KAAWO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gRAkBvBoC,GAAsBtC,EAAAA,EAAAA,IAAOqC,EAAPrC,CAAiBS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,4QAkBvCqC,GAAiBvC,EAAAA,EAAAA,IAAO6B,EAAAA,GAAP7B,CAAkBU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8BAInCsC,GAAkBxC,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAeY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iK,wBCnG9CuC,EAAAA,EAAAA,SAAAA,QAAyB,sCAElB,MAAMC,EAA8BC,IAKpC,IALqC,YAC1CC,EAAW,cACXC,EAAa,eACbC,EAAc,yBACdC,GACDJ,EACC,MAAOK,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IAAIG,OACxCC,EAAkBC,IAAuBL,EAAAA,EAAAA,UAC9CL,EAAcW,aAAe,KAExBC,EAAkBC,IAAuBR,EAAAA,EAAAA,UAC9CL,EAAcc,aAAe,KAExBC,EAAcC,IAAmBX,EAAAA,EAAAA,UAASL,EAAciB,SAAW,KACnEC,EAAYC,IAAiBd,EAAAA,EAAAA,UAASL,EAAcoB,OAAS,KAC7DC,EAAeC,IAAoBjB,EAAAA,EAAAA,UACxCL,EAAcuB,UAAY,KAErBC,EAAgBC,IAAqBpB,EAAAA,EAAAA,UAC1CL,EAAc0B,WAAa,KAEtBC,EAAeC,IAAoBvB,EAAAA,EAAAA,UACxCL,EAAc6B,UAAY,IAGtBC,EAAqB,CACzB,CACEC,MAAO,6CACPC,MAAO,QAET,CACED,MAAO,mDACPC,MAAO,OAET,CACED,MAAO,6CACPC,MAAO,QAILC,EAAqB,CACzB,CACEF,MAAO,+DACPC,MAAO,SAET,CACED,MAAO,yDACPC,MAAO,UAILE,EAAiB,CACrB,CACEH,MAAO,0DACPC,MAAO,GAET,CACED,MAAO,iCACPC,MAAO,GAET,CACED,MAAO,gHACPC,MAAO,IAILG,EAAe,CACnB,CACEJ,MAAO,0DACPC,MAAO,GAET,CACED,MAAO,iCACPC,MAAO,GAET,CACED,MAAO,gHACPC,MAAO,IAILI,EAAkB,CACtB,CACEL,MAAO,0DACPC,MAAO,GAET,CACED,MAAO,iCACPC,MAAO,GAET,CACED,MAAO,gHACPC,MAAO,IAILK,EAAmB,CACvB,CACEN,MAAO,0DACPC,MAAO,GAET,CACED,MAAO,iCACPC,MAAO,GAET,CACED,MAAO,gHACPC,MAAO,IAILM,EAAkB,CACtB,CACEP,MAAO,0DACPC,MAAO,GAET,CACED,MAAO,iCACPC,MAAO,GAET,CACED,MAAO,gHACPC,MAAO,IAILO,EAA2B,CAC/B5B,YAAaX,EAAcW,aAAe,GAC1CG,YAAad,EAAcc,aAAe,GAC1CG,QAASjB,EAAciB,SAAW,GAClCG,MAAOpB,EAAcoB,OAAS,GAC9BG,SAAUvB,EAAcuB,UAAY,GACpCG,UAAW1B,EAAc0B,WAAa,GACtCG,SAAU7B,EAAc6B,UAAY,GACpCW,SAAU,IAGNC,EAAgBC,EAAAA,KAAaC,MAAM,CACvChC,YAAa+B,EAAAA,KACb5B,YAAa4B,EAAAA,KACbzB,QAASyB,EAAAA,KACTtB,MAAOsB,EAAAA,KACPnB,SAAUmB,EAAAA,KACVhB,UAAWgB,EAAAA,KACXb,SAAUa,EAAAA,KACVF,SAAUE,EAAAA,OAiDZ,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAeV,EACfW,SAlD0BC,UAC9BC,QAAQC,IAAIC,GAEZA,EAAO3C,YAAcF,EACrB6C,EAAOxC,YAAcF,EACrB0C,EAAOrC,QAAUF,EACjBuC,EAAOlC,MAAQF,EACfoC,EAAO/B,SAAWF,EAClBiC,EAAO5B,UAAYF,EACnB8B,EAAOzB,SAAWF,EAClB2B,EAAOd,SAAQ,GAAAe,OACbxD,EAAYyD,KAAI,6IAAAD,OACYjD,EAAUmD,UAAS,KAAAF,OAC/CjD,EAAUoD,WAAa,EAAI,GACvB,KAAOpD,EAAUoD,WAAa,GAC9BpD,EAAUoD,WAAa,EAAC,KAAAH,OAC1BjD,EAAUqD,cAAa,OAAAJ,QAC7B,IAAI/C,MAAOoD,eAAe,QAAS,CAAEC,SAAU,WAAW,OAAAN,OAC1DD,EAAOd,UACL,MAAMsB,EAAW,IAAKR,EAAQS,MAAO/D,EAAc+D,OAEnD3D,GAAaD,IAA0B,IACvC,IACE,MAAM6D,QAAiBpE,EAAAA,EAAAA,MAAY,kBAAD2D,OACdvD,EAAciE,QAChCH,GAEII,QAAqBtE,EAAAA,EAAAA,MAAY,aAAD2D,OACvBvD,EAAciE,QAC3BX,GAEFF,QAAQC,IAAIW,GACZZ,QAAQC,IAAIa,GACZhE,IACAiE,MAAM,kFACNlE,EAAeD,EAAcoE,IAAKd,EAQpC,CAPE,MAAOe,GACPjB,QAAQiB,MAAMA,GACdF,MACE,6VAEJ,CAAC,QACC/D,GAAaD,IAA0B,GACzC,GAQImE,iBAAkB7B,EAAcK,UAEhCF,EAAAA,EAAAA,MAACxD,EAAoB,CAAA0D,SAAA,EACnBC,EAAAA,EAAAA,KAACwB,EAAAA,GAAc,CAACC,GAAG,QAAO1B,SACvB9C,EAAcwD,MACZxD,EAAcyE,IAAM,KAAOzE,EAAcyE,IAAM,UAAO,OAE3D1B,EAAAA,EAAAA,KAAC1D,EAAa,CAAAyD,UACZC,EAAAA,EAAAA,KAACtD,EAAmB,CAAAqD,SAAC,sHAEvBC,EAAAA,EAAAA,KAACzD,EAAgB,CACfoF,SAAUpE,EACVqE,WAAW,aACXC,SAAUC,GAAQtE,EAAasE,GAC/BC,iBAAkB,EAClBC,qBAAqB,KAGvBnC,EAAAA,EAAAA,MAACvD,EAAa,CAAAyD,SAAA,CACXlC,IAAoBmC,EAAAA,EAAAA,KAACvD,EAAS,CAAAsD,SAAC,kEAChCC,EAAAA,EAAAA,KAACrD,EAAc,CACbsF,QAASlD,EACTmD,OAAQ,CACNC,QAASA,CAACC,EAAYC,KAAK,IACtBD,EACHE,OAAQ,OACRC,aAAc,MACdC,UAAW,SAEbC,KAAMA,CAACL,EAAYC,KAAK,IACnBD,EACHM,SAAU,WACVC,OAAQ,IACRC,IAAK,SAEPC,kBAAmBA,CAACT,EAAYC,KAAK,IAChCD,EACHU,QAAS,SAGbC,YAAY,+DACZtC,KAAK,cACLuC,aAAcjE,EAAmBkE,MAC/BC,GAAUA,EAAOjE,QAAUhC,EAAcc,cAE3C8D,SAAU9D,IACRD,EAAoBC,EAAYkB,MAAM,QAI5CY,EAAAA,EAAAA,MAACvD,EAAa,CAAAyD,SAAA,CACXrC,IAAoBsC,EAAAA,EAAAA,KAACvD,EAAS,CAAAsD,SAAC,wEAChCC,EAAAA,EAAAA,KAACrD,EAAc,CACbsF,QAAS/C,EACTgD,OAAQ,CACNC,QAASA,CAACC,EAAYC,KAAK,IACtBD,EACHE,OAAQ,OACRC,aAAc,MACdC,UAAW,SAEbC,KAAMA,CAACL,EAAYC,KAAK,IACnBD,EACHM,SAAU,WACVC,OAAQ,IACRC,IAAK,SAEPC,kBAAmBA,CAACT,EAAYC,KAAK,IAChCD,EACHU,QAAS,SAGbC,YAAY,qEACZtC,KAAK,cACLuC,aAAc9D,EAAmB+D,MAC/BC,GAAUA,EAAOjE,QAAUhC,EAAcW,cAE3CiE,SAAUjE,IACRD,EAAoBC,EAAYqB,MAAM,QAI5CY,EAAAA,EAAAA,MAACvD,EAAa,CAAAyD,SAAA,CACX/B,IAAgBgC,EAAAA,EAAAA,KAACvD,EAAS,CAAAsD,SAAC,4DAC5BC,EAAAA,EAAAA,KAACrD,EAAc,CACbsF,QAAS9C,EACT+C,OAAQ,CACNC,QAASA,CAACC,EAAYC,KAAK,IACtBD,EACHE,OAAQ,OACRC,aAAc,MACdC,UAAW,SAEbC,KAAMA,CAACL,EAAYC,KAAK,IACnBD,EACHM,SAAU,WACVC,OAAQ,IACRC,IAAK,SAEPC,kBAAmBA,CAACT,EAAYC,KAAK,IAChCD,EACHU,QAAS,SAGbC,YAAY,yDACZtC,KAAK,UACLuC,aAAc7D,EAAe8D,MAC3BC,GAAUA,EAAOjE,QAAUhC,EAAciB,UAE3C2D,SAAU3D,IACRD,EAAgBC,EAAQe,MAAM,QAIpCY,EAAAA,EAAAA,MAACvD,EAAa,CAAAyD,SAAA,CACX5B,IAAc6B,EAAAA,EAAAA,KAACvD,EAAS,CAAAsD,SAAC,gDAC1BC,EAAAA,EAAAA,KAACrD,EAAc,CACbsF,QAAS7C,EACT8C,OAAQ,CACNC,QAASA,CAACC,EAAYC,KAAK,IACtBD,EACHE,OAAQ,OACRC,aAAc,MACdC,UAAW,SAEbC,KAAMA,CAACL,EAAYC,KAAK,IACnBD,EACHM,SAAU,WACVC,OAAQ,IACRC,IAAK,SAEPC,kBAAmBA,CAACT,EAAYC,KAAK,IAChCD,EACHU,QAAS,SAGbC,YAAY,6CACZtC,KAAK,QACLuC,aAAc5D,EAAa6D,MACzBC,GAAUA,EAAOjE,QAAUhC,EAAcoB,QAE3CwD,SAAUxD,IACRD,EAAcC,EAAMY,MAAM,QAIhCY,EAAAA,EAAAA,MAACvD,EAAa,CAAAyD,SAAA,CACXzB,IAAiB0B,EAAAA,EAAAA,KAACvD,EAAS,CAAAsD,SAAC,iGAC7BC,EAAAA,EAAAA,KAACrD,EAAc,CACbsF,QAAS5C,EACT6C,OAAQ,CACNC,QAASA,CAACC,EAAYC,KAAK,IACtBD,EACHE,OAAQ,OACRC,aAAc,MACdC,UAAW,SAEbC,KAAMA,CAACL,EAAYC,KAAK,IACnBD,EACHM,SAAU,WACVC,OAAQ,IACRC,IAAK,SAEPC,kBAAmBA,CAACT,EAAYC,KAAK,IAChCD,EACHU,QAAS,SAGbC,YAAY,8FACZtC,KAAK,WACLuC,aAAc3D,EAAgB4D,MAC5BC,GAAUA,EAAOjE,QAAUhC,EAAcuB,WAE3CqD,SAAUrD,IACRD,EAAiBC,EAASS,MAAM,QAItCY,EAAAA,EAAAA,MAACvD,EAAa,CAAAyD,SAAA,CACXtB,IAAkBuB,EAAAA,EAAAA,KAACvD,EAAS,CAAAsD,SAAC,sDAC9BC,EAAAA,EAAAA,KAACrD,EAAc,CACbsF,QAAS3C,EACT4C,OAAQ,CACNC,QAASA,CAACC,EAAYC,KAAK,IACtBD,EACHE,OAAQ,OACRC,aAAc,MACdC,UAAW,SAEbC,KAAMA,CAACL,EAAYC,KAAK,IACnBD,EACHM,SAAU,WACVC,OAAQ,IACRC,IAAK,SAEPC,kBAAmBA,CAACT,EAAYC,KAAK,IAChCD,EACHU,QAAS,SAGbC,YAAY,mDACZtC,KAAK,YACLuC,aAAc1D,EAAiB2D,MAC7BC,GAAUA,EAAOjE,QAAUhC,EAAc0B,YAE3CkD,SAAUlD,IACRD,EAAkBC,EAAUM,MAAM,QAIxCY,EAAAA,EAAAA,MAACvD,EAAa,CAAAyD,SAAA,CACXnB,IAAiBoB,EAAAA,EAAAA,KAACvD,EAAS,CAAAsD,SAAC,kEAC7BC,EAAAA,EAAAA,KAACrD,EAAc,CACbsF,QAAS1C,EACT2C,OAAQ,CACNC,QAASA,CAACC,EAAYC,KAAK,IACtBD,EACHE,OAAQ,OACRC,aAAc,MACdC,UAAW,SAEbC,KAAMA,CAACL,EAAYC,KAAK,IACnBD,EACHM,SAAU,WACVC,OAAQ,IACRC,IAAK,SAEPC,kBAAmBA,CAACT,EAAYC,KAAK,IAChCD,EACHU,QAAS,SAGbC,YAAY,2GACZtC,KAAK,WACLuC,aAAczD,EAAgB0D,MAC5BC,GAAUA,EAAOjE,QAAUhC,EAAc6B,WAE3C+C,SAAU/C,IACRD,EAAiBC,EAASG,MAAM,QAItCY,EAAAA,EAAAA,MAACsD,EAAAA,GAAK,CAAApD,SAAA,EACJC,EAAAA,EAAAA,KAACoD,EAAAA,GAAe,CACdC,KAAK,OACL5C,KAAK,WACL6C,UAAU,WACVP,YAAY,0CAEd/C,EAAAA,EAAAA,KAACuD,EAAAA,GAAc,CAACD,UAAU,IAAI7C,KAAK,iBAErCT,EAAAA,EAAAA,KAACpD,EAAe,CAACyG,KAAK,SAAQtD,SAAC,2GAGlC3C,IAAa4C,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,MACpB,EClJP,EAxT4BC,KAC1B,MAAMC,GAAWC,EAAAA,EAAAA,MAAcC,SAASC,MAAM,eAAe,IACtDzG,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCwG,EAAOC,IAAYzG,EAAAA,EAAAA,UAAS,KAC5B0G,EAAQC,IAAa3G,EAAAA,EAAAA,UAAS,KAC9BL,EAAeiH,IAAoB5G,EAAAA,EAAAA,UAAS,CAAC,IAC7C6G,EAAuBC,IAA4B9G,EAAAA,EAAAA,WAAS,GAC7D+G,EAAa,+BACZrH,IAAesH,EAAAA,EAAAA,MA8DhBC,EA9Ccb,KAClB,OAAQA,GACN,IAAK,aACH,MAAO,YACT,IAAK,eACH,MAAO,cACT,IAAK,aACH,MAAO,UACT,IAAK,iBACH,MAAO,cACT,IAAK,aACH,MAAO,YACT,IAAK,iBACH,MAAO,gBACT,IAAK,aACH,MAAO,YACT,IAAK,aACH,MAAO,YACT,IAAK,YACH,MAAO,WACT,IAAK,cACH,MAAO,aACT,IAAK,YACH,MAAO,SACT,IAAK,gBACH,MAAO,aACT,IAAK,YACH,MAAO,WACT,IAAK,YACH,MAAO,WACT,IAAK,YACH,MAAO,WACT,QACE,OAAOA,EACX,EAYWc,CAAYd,GACnBe,EAV0Bf,IAC1BA,EAASgB,SAAS,OAAShB,EAASgB,SAAS,WACxC,KACEhB,EAASgB,SAAS,OAAShB,EAASgB,SAAS,UAC/C,KAEA,KAIEC,CAAwBjB,GAoErC,OAnCAkB,EAAAA,EAAAA,YAAU,KACRC,SAASC,MAAK,oBAAAtE,OAAuB+D,EAAKQ,oBAAmB,mBAC7B3E,WAC9B,IACE/C,GAAaD,IAA0B,IACvC6G,SACSpH,EAAAA,EAAAA,IAAU,eAAemI,KAAKC,QACnCC,GACEX,EAAKG,SAASQ,EAAUC,QAAUV,IAASS,EAAUT,OACvD,GAAGT,QAEP,MAAMoB,QAAmBvI,EAAAA,EAAAA,IAAU,kBAEnCkH,GACED,GACW,IACJsB,EAAWJ,KAAKC,QACjBI,GACEA,EAAKrB,SAAWA,GAChBqB,EAAKrB,OACFH,MAAM,KACNyB,MAAKC,GAAeA,IAAgBvB,SAIjD3D,QAAQC,IAAI,MAKd,CAJE,MAAOgB,GACPjB,QAAQC,IAAIgB,EACd,CAAC,QACCjE,GAAaD,IAA0B,GACzC,GAEFoI,EAAyB,GACxB,CAACxB,EAAQO,EAAME,KAGhB5E,EAAAA,EAAAA,MAAC4F,EAAAA,GAAwB,CAAA1F,SAAA,EACvBF,EAAAA,EAAAA,MAAC6F,EAAAA,GAAsB,CAAA3F,SAAA,EACrBC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAa,CAAA5F,SAAC,iNACfC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAC+F,EAAAA,GAAS,CAAA7F,SAAA,EACRC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,YACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,SACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,yBACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,UACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,4DACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,8BACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,oCACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,wEACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,kEACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,4DACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,gDACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,4DACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,sDACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,kEACdC,EAAAA,EAAAA,KAAC6F,EAAAA,GAAY,CAAA9F,SAAC,+CAGlBC,EAAAA,EAAAA,KAAA,SAAAD,SACG+D,EACEmB,QACCI,GACE,IAAI5H,KACF,IAAIA,KAzJKqI,KACvB,GAAIA,EAAY,CACd,MAAMC,EAAYD,EAAWjC,MAAM,KACnC,OAAOkC,EAAUC,OAAS,EACtBvI,KAAKwI,MAAM,CAACF,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAAIG,KAAK,MAC3DzI,KAAKwI,MAAMH,EACjB,CACM,EAmJUK,CAAiBd,EAAKe,QAAQf,EAAKe,QAAQJ,OAAS,MAEtD,SACDvB,IAASY,EAAKZ,MACbY,EAAKZ,KAAKZ,MAAM,KAAKyB,MAAKe,GAAY5B,IAAS4B,OAChDrC,IAAWqB,EAAKrB,QACfqB,EAAKrB,OACFH,MAAM,KACNyB,MAAKgB,GAActC,IAAWsC,OAEtCC,MAAK,CAACC,EAAGC,IAAMC,KAAKC,SAAS,MAAMC,QAAQJ,EAAE/F,KAAMgG,EAAEhG,QACrDoG,KAAI,CAACxB,EAAMyB,KACVjH,EAAAA,EAAAA,MAAC+F,EAAAA,GAAS,CAAA7F,SAAA,EACRC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SAAE+G,EAAI,KACf9G,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,UACPC,EAAAA,EAAAA,KAAA,KACEgH,KAAI,8CAAAxG,OAAgD6E,EAAKrE,OACzDiG,OAAO,SACPC,IAAI,aAAYnH,SAEfsF,EAAKrE,WAGVhB,EAAAA,EAAAA,KAACmH,EAAAA,GAAY,CAAApH,SAAEsF,EAAK5E,QACpBT,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,UAELC,EAAAA,EAAAA,KAACoH,EAAAA,GAAc,CACbC,QAASA,IAnGHjH,WACxB8D,GACEjH,GACmB6G,EAAMb,MAAKqE,GAAWA,EAAQpG,SAAWO,MAE9D2C,GAAyB,EAAK,EA8FGmD,CAAkBlC,EAAKnE,QAAQnB,SAC/C,YAKLC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SACLsF,EAAKmC,YAAYnC,EAAKmC,YAAYxB,OAAS,IAEzCX,EAAKmC,YAAYnC,EAAKmC,YAAYxB,OAAS,GAAGyB,MAC5C,QAEF,IAAIhK,KACF4H,EAAKmC,YAAYnC,EAAKmC,YAAYxB,OAAS,IAC3CnF,eAAe,SANjB,MASNb,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SAAEsF,EAAKZ,QAChBzE,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SAAEsF,EAAKrB,UAChBhE,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SACe,UAArBsF,EAAKzH,YACF,+DACqB,UAArByH,EAAKzH,YACL,yDACA,MAENoC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SACe,SAArBsF,EAAKtH,YACF,6CACqB,QAArBsH,EAAKtH,YACL,mDACqB,QAArBsH,EAAKtH,YACL,6CACA,MAENiC,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SACW,IAAjBsF,EAAKnH,QACF,0DACiB,IAAjBmH,EAAKnH,QACL,iCACiB,IAAjBmH,EAAKnH,QACL,gHACA,MAEN8B,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SACS,IAAfsF,EAAKhH,MACF,0DACe,IAAfgH,EAAKhH,MACL,iCACe,IAAfgH,EAAKhH,MACL,gHACA,MAEN2B,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SACY,IAAlBsF,EAAK7G,SACF,0DACkB,IAAlB6G,EAAK7G,SACL,iCACkB,IAAlB6G,EAAK7G,SACL,gHACA,MAENwB,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SACa,IAAnBsF,EAAK1G,UACF,0DACmB,IAAnB0G,EAAK1G,UACL,iCACmB,IAAnB0G,EAAK1G,UACL,gHACA,MAENqB,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAAAhH,SACY,IAAlBsF,EAAKvG,SACF,0DACkB,IAAlBuG,EAAKvG,SACL,iCACkB,IAAlBuG,EAAKvG,SACL,gHACA,MAENkB,EAAAA,EAAAA,KAACmH,EAAAA,GAAY,CACXO,wBAAyB,CACvBC,OAEE,kBADOtC,EAAK5F,SAAS4F,EAAK5F,SAASuG,OAAS,GAExCX,EAAK5F,SAAS4F,EAAK5F,SAASuG,OAAS,GAAG4B,QACtCvD,GACAoD,GAAK,YAAAjH,OACSiH,EAAK,sBAAAjH,OACfiH,EAAMzB,OAAS,GACXyB,EAAMI,MAAM,EAAG,IAAM,MACrBJ,EAAK,UAGf,QA7GIpC,EAAKhE,YAqH5B8C,IACCnE,EAAAA,EAAAA,KAAC8H,EAAAA,EAAQ,CAACC,YAjOoBC,IACd,mBAAhBA,EAAEf,OAAOxF,IACX2C,GAAyB,EAC3B,EA8NwD3C,GAAG,iBAAgB1B,UACrEC,EAAAA,EAAAA,KAAClD,EAA2B,CAC1BE,YAAaA,EACbC,cAAeA,EACfC,eA/NaA,CAACuE,EAAIlB,KAC1B,MAAM0H,EAAenE,EAAMb,MAAKoC,GAAQA,EAAKhE,MAAQI,IACrDwG,EAAalK,YAAcwC,EAAOxC,YAClCkK,EAAarK,YAAc2C,EAAO3C,YAClCqK,EAAa/J,QAAUqC,EAAOrC,QAC9B+J,EAAa5J,MAAQkC,EAAOlC,MAC5B4J,EAAazJ,SAAW+B,EAAO/B,SAC/ByJ,EAAatJ,UAAY4B,EAAO5B,UAChCsJ,EAAanJ,SAAWyB,EAAOzB,SAC/BmJ,EAAaxI,SAAS,GAAKc,EAAOd,SAElCsE,GACED,GACW,IAAIA,EAAMmB,QAAOI,GAAQA,EAAKhE,MAAQI,IAAKwG,IACvD,EAkNO9K,yBArSmB6K,IAC3B5D,GAAyB,EAAM,MAwS5BhH,IAAa4C,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,MACI,C","sources":["pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled.js","pages/TeacherPage/TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm.styled.js","pages/TeacherPage/TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm.jsx","pages/TeacherPage/TeacherPageSpeaking.jsx"],"sourcesContent":["import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 35px;\n`;\n\nexport const LinksForm = styled(Form)`\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n`;\n\nexport const AdminInput = styled(Input)`\n  border: 2px solid var(--main-color);\n`;\n\nexport const AdminTextArea = styled(Input)`\n  border-radius: 0;\n  width: 35vw;\n  height: 75vh;\n  scrollbar-width: thin;\n  background-color: transparent;\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  position: static;\n  color: var(--main-color);\n  font-size: 24px;\n  font-weight: 700;\n  bottom: -1.1em;\n`;\n\nexport const ScheduleList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 14px;\n\n  text-transform: capitalize;\n  font-weight: 600;\n  margin-left: auto;\n`;\n\nexport const ScheduleHeading = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  margin-bottom: 12px;\n`;\n\nexport const ScheduleItem = styled.li`\n  width: 100%;\n  flex-basis: 40%;\n  flex-grow: 0;\n`;\n\nexport const ScheduleInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ScheduleData = styled.li`\n  font-size: 14px;\n  font-weight: 400;\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  padding-bottom: 5px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ScheduleDataDayText = styled.span`\n  min-width: 24px;\n`;\n\nexport const ScheduleDataTypeText = styled.span`\n  min-width: 120px;\n  text-align: center;\n`;\n\nexport const ScheduleDataTimeText = styled.span`\n  min-width: 100px;\n  text-align: center;\n`;\n\nexport const ScheduleParagraph = styled.p`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n  font-size: 14px;\n  border: 2px solid var(--main-color);\n\n  line-height: 1;\n\n  @media screen and (min-width: 768px) {\n    font-size: 19px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-burnt-color);\n    outline: transparent;\n  }\n`;\n","import { FormBtn } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport { FormSelect } from 'pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled';\nimport DatePicker from 'react-datepicker';\nimport styled from 'styled-components';\n\nexport const UserSpeakingEditForm = styled(Form)`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: calc(100vw - 20px);\n  max-width: 400px;\n\n  background-color: white;\n  padding: 16px;\n  border-radius: 16px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  & .react-datepicker__tab-loop {\n    margin-top: -6px;\n  }\n\n  & .react-datepicker-popper {\n    z-index: 2;\n  }\n\n  @media screen and (min-height: 960px) {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100%;\n    transform: translate(-50%, -50%);\n\n    padding: 16px 24px;\n    border-radius: 24px;\n\n    gap: 9px;\n  }\n\n  @media screen and (min-height: 960px) {\n    & .react-datepicker__tab-loop {\n      margin-top: -9px;\n    }\n  }\n`;\n\nexport const SpeakingLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n  position: relative;\n\n  &:first-child {\n    padding-top: 4px;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  width: 100%;\n  max-height: 38px;\n  padding: 10px;\n  border: 2px solid var(--main-color);\n\n  @media screen and (min-width: 960px) {\n    font-size: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-burnt-color);\n    outline: transparent;\n  }\n`;\n\nexport const LabelText = styled.span`\n  position: absolute;\n  top: -5.5px;\n  left: 10px;\n  z-index: 1;\n  background-color: white;\n\n  font-size: 10px;\n  display: block;\n  padding: 1px;\n\n  @media screen and (min-height: 960px) {\n    top: -8px;\n    font-size: 12px;\n    padding: 2px;\n  }\n`;\n\nexport const LabelDatePickerText = styled(LabelText)`\n  position: absolute;\n  top: 0px;\n  left: 10px;\n  z-index: 1;\n  background-color: white;\n\n  font-size: 10px;\n  display: block;\n  padding: 1px;\n\n  @media screen and (min-height: 960px) {\n    top: 1px;\n    padding: 2px;\n    font-size: 12px;\n  }\n`;\n\nexport const SpeakingSelect = styled(FormSelect)`\n  font-size: 16px;\n`;\n\nexport const SpeakingFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n  padding: 12px;\n  height: auto;\n\n  @media screen and (min-width: 768px) {\n    padding: 16px;\n    letter-spacing: 0.6px;\n  }\n`;\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { AdminInputNote } from 'pages/Streams/AdminPanel/AdminPanel.styled';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport { EditFormHeader, StudentTextArea } from '../TeacherPage.styled';\nimport {\n  LabelDatePickerText,\n  LabelText,\n  SpeakingFormBtn,\n  SpeakingLabel,\n  SpeakingSelect,\n  StyledDatePicker,\n  UserSpeakingEditForm,\n} from './TeacherPageSpeakingEditForm.styled';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nexport const TeacherPageSpeakingEditForm = ({\n  currentUser,\n  studentToEdit,\n  updateFeedback,\n  closeCourseLevelEditForm,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [temperamentValue, setTemperamentValue] = useState(\n    studentToEdit.temperament || ''\n  );\n  const [successRateValue, setSuccessRateValue] = useState(\n    studentToEdit.successRate || ''\n  );\n  const [grammarValue, setGrammarValue] = useState(studentToEdit.grammar || '');\n  const [lexisValue, setLexisValue] = useState(studentToEdit.lexis || '');\n  const [speakingValue, setSpeakingValue] = useState(\n    studentToEdit.speaking || ''\n  );\n  const [listeningValue, setListeningValue] = useState(\n    studentToEdit.listening || ''\n  );\n  const [activityValue, setActivityValue] = useState(\n    studentToEdit.activity || ''\n  );\n\n  const successRateOptions = [\n    {\n      label: 'Сильний',\n      value: 'good',\n    },\n    {\n      label: 'Середній',\n      value: 'mid',\n    },\n    {\n      label: 'Слабкий',\n      value: 'bad',\n    },\n  ];\n\n  const temperamentOptions = [\n    {\n      label: 'Екстраверт',\n      value: 'extro',\n    },\n    {\n      label: 'Інтроверт',\n      value: 'intro',\n    },\n  ];\n\n  const grammarOptions = [\n    {\n      label: 'Дуже добре',\n      value: 3,\n    },\n    {\n      label: 'Добре',\n      value: 2,\n    },\n    {\n      label: 'Потребує покращення',\n      value: 1,\n    },\n  ];\n\n  const lexisOptions = [\n    {\n      label: 'Дуже добре',\n      value: 3,\n    },\n    {\n      label: 'Добре',\n      value: 2,\n    },\n    {\n      label: 'Потребує покращення',\n      value: 1,\n    },\n  ];\n\n  const speakingOptions = [\n    {\n      label: 'Дуже добре',\n      value: 3,\n    },\n    {\n      label: 'Добре',\n      value: 2,\n    },\n    {\n      label: 'Потребує покращення',\n      value: 1,\n    },\n  ];\n\n  const listeningOptions = [\n    {\n      label: 'Дуже добре',\n      value: 3,\n    },\n    {\n      label: 'Добре',\n      value: 2,\n    },\n    {\n      label: 'Потребує покращення',\n      value: 1,\n    },\n  ];\n\n  const activityOptions = [\n    {\n      label: 'Дуже добре',\n      value: 3,\n    },\n    {\n      label: 'Добре',\n      value: 2,\n    },\n    {\n      label: 'Потребує покращення',\n      value: 1,\n    },\n  ];\n\n  const initialEditStudentValues = {\n    temperament: studentToEdit.temperament || '',\n    successRate: studentToEdit.successRate || '',\n    grammar: studentToEdit.grammar || '',\n    lexis: studentToEdit.lexis || '',\n    speaking: studentToEdit.speaking || '',\n    listening: studentToEdit.listening || '',\n    activity: studentToEdit.activity || '',\n    feedback: '',\n  };\n\n  const studentSchema = yup.object().shape({\n    temperament: yup.string(),\n    successRate: yup.string(),\n    grammar: yup.number(),\n    lexis: yup.number(),\n    speaking: yup.number(),\n    listening: yup.number(),\n    activity: yup.number(),\n    feedback: yup.string(),\n  });\n\n  const handleEditStudentSubmit = async values => {\n    console.log(values);\n\n    values.temperament = temperamentValue;\n    values.successRate = successRateValue;\n    values.grammar = grammarValue;\n    values.lexis = lexisValue;\n    values.speaking = speakingValue;\n    values.listening = listeningValue;\n    values.activity = activityValue;\n    values.feedback = `${\n      currentUser.name\n    } залишає відгук за заняття ${startDate.getDate()}.${\n      startDate.getMonth() + 1 < 10\n        ? '0' + (startDate.getMonth() + 1)\n        : startDate.getMonth() + 1\n    }.${startDate.getFullYear()}:\n${new Date().toLocaleString('uk-UA', { timeZone: '+02:00' })}:\n${values.feedback}`;\n    const scValues = { ...values, crmId: studentToEdit.crmId };\n\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.patch(\n        `/speakingusers/${studentToEdit.userId}`,\n        scValues\n      );\n      const userResponse = await axios.patch(\n        `/users/sc/${studentToEdit.userId}`,\n        values\n      );\n      console.log(response);\n      console.log(userResponse);\n      closeCourseLevelEditForm();\n      alert('Відредаговано');\n      updateFeedback(studentToEdit._id, values);\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialEditStudentValues}\n        onSubmit={handleEditStudentSubmit}\n        validationSchema={studentSchema}\n      >\n        <UserSpeakingEditForm>\n          <EditFormHeader id=\"focus\">\n            {studentToEdit.name +\n              (studentToEdit.age ? ', ' + studentToEdit.age + 'р.' : '')}\n          </EditFormHeader>\n          <SpeakingLabel>\n            <LabelDatePickerText>Оберіть дату заняття</LabelDatePickerText>\n          </SpeakingLabel>\n          <StyledDatePicker\n            selected={startDate}\n            dateFormat=\"dd.MM.yyyy\"\n            onChange={date => setStartDate(date)}\n            calendarStartDay={1}\n            shouldCloseOnSelect={true}\n          />\n\n          <SpeakingLabel>\n            {successRateValue && <LabelText>Успішність</LabelText>}\n            <SpeakingSelect\n              options={successRateOptions}\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  border: 'none',\n                  borderRadius: '0px',\n                  minHeight: '34px',\n                }),\n                menu: (baseStyles, state) => ({\n                  ...baseStyles,\n                  position: 'absolute',\n                  zIndex: '2',\n                  top: '36px',\n                }),\n                dropdownIndicator: (baseStyles, state) => ({\n                  ...baseStyles,\n                  padding: '7px',\n                }),\n              }}\n              placeholder=\"Успішність\"\n              name=\"successRate\"\n              defaultValue={successRateOptions.find(\n                option => option.value === studentToEdit.successRate\n              )}\n              onChange={successRate => {\n                setSuccessRateValue(successRate.value);\n              }}\n            />\n          </SpeakingLabel>\n          <SpeakingLabel>\n            {temperamentValue && <LabelText>Темперамент</LabelText>}\n            <SpeakingSelect\n              options={temperamentOptions}\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  border: 'none',\n                  borderRadius: '0px',\n                  minHeight: '34px',\n                }),\n                menu: (baseStyles, state) => ({\n                  ...baseStyles,\n                  position: 'absolute',\n                  zIndex: '2',\n                  top: '36px',\n                }),\n                dropdownIndicator: (baseStyles, state) => ({\n                  ...baseStyles,\n                  padding: '7px',\n                }),\n              }}\n              placeholder=\"Темперамент\"\n              name=\"temperament\"\n              defaultValue={temperamentOptions.find(\n                option => option.value === studentToEdit.temperament\n              )}\n              onChange={temperament => {\n                setTemperamentValue(temperament.value);\n              }}\n            />\n          </SpeakingLabel>\n          <SpeakingLabel>\n            {grammarValue && <LabelText>Граматика</LabelText>}\n            <SpeakingSelect\n              options={grammarOptions}\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  border: 'none',\n                  borderRadius: '0px',\n                  minHeight: '34px',\n                }),\n                menu: (baseStyles, state) => ({\n                  ...baseStyles,\n                  position: 'absolute',\n                  zIndex: '2',\n                  top: '36px',\n                }),\n                dropdownIndicator: (baseStyles, state) => ({\n                  ...baseStyles,\n                  padding: '7px',\n                }),\n              }}\n              placeholder=\"Граматика\"\n              name=\"grammar\"\n              defaultValue={grammarOptions.find(\n                option => option.value === studentToEdit.grammar\n              )}\n              onChange={grammar => {\n                setGrammarValue(grammar.value);\n              }}\n            />\n          </SpeakingLabel>\n          <SpeakingLabel>\n            {lexisValue && <LabelText>Лексика</LabelText>}\n            <SpeakingSelect\n              options={lexisOptions}\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  border: 'none',\n                  borderRadius: '0px',\n                  minHeight: '34px',\n                }),\n                menu: (baseStyles, state) => ({\n                  ...baseStyles,\n                  position: 'absolute',\n                  zIndex: '2',\n                  top: '36px',\n                }),\n                dropdownIndicator: (baseStyles, state) => ({\n                  ...baseStyles,\n                  padding: '7px',\n                }),\n              }}\n              placeholder=\"Лексика\"\n              name=\"lexis\"\n              defaultValue={lexisOptions.find(\n                option => option.value === studentToEdit.lexis\n              )}\n              onChange={lexis => {\n                setLexisValue(lexis.value);\n              }}\n            />\n          </SpeakingLabel>\n          <SpeakingLabel>\n            {speakingValue && <LabelText>Говоріння/вимова</LabelText>}\n            <SpeakingSelect\n              options={speakingOptions}\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  border: 'none',\n                  borderRadius: '0px',\n                  minHeight: '34px',\n                }),\n                menu: (baseStyles, state) => ({\n                  ...baseStyles,\n                  position: 'absolute',\n                  zIndex: '2',\n                  top: '36px',\n                }),\n                dropdownIndicator: (baseStyles, state) => ({\n                  ...baseStyles,\n                  padding: '7px',\n                }),\n              }}\n              placeholder=\"Говоріння/вимова\"\n              name=\"speaking\"\n              defaultValue={speakingOptions.find(\n                option => option.value === studentToEdit.speaking\n              )}\n              onChange={speaking => {\n                setSpeakingValue(speaking.value);\n              }}\n            />\n          </SpeakingLabel>\n          <SpeakingLabel>\n            {listeningValue && <LabelText>Слухання</LabelText>}\n            <SpeakingSelect\n              options={listeningOptions}\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  border: 'none',\n                  borderRadius: '0px',\n                  minHeight: '34px',\n                }),\n                menu: (baseStyles, state) => ({\n                  ...baseStyles,\n                  position: 'absolute',\n                  zIndex: '2',\n                  top: '36px',\n                }),\n                dropdownIndicator: (baseStyles, state) => ({\n                  ...baseStyles,\n                  padding: '7px',\n                }),\n              }}\n              placeholder=\"Слухання\"\n              name=\"listening\"\n              defaultValue={listeningOptions.find(\n                option => option.value === studentToEdit.listening\n              )}\n              onChange={listening => {\n                setListeningValue(listening.value);\n              }}\n            />\n          </SpeakingLabel>\n          <SpeakingLabel>\n            {activityValue && <LabelText>Активність</LabelText>}\n            <SpeakingSelect\n              options={activityOptions}\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  border: 'none',\n                  borderRadius: '0px',\n                  minHeight: '34px',\n                }),\n                menu: (baseStyles, state) => ({\n                  ...baseStyles,\n                  position: 'absolute',\n                  zIndex: '2',\n                  top: '36px',\n                }),\n                dropdownIndicator: (baseStyles, state) => ({\n                  ...baseStyles,\n                  padding: '7px',\n                }),\n              }}\n              placeholder=\"Активність на уроці\"\n              name=\"activity\"\n              defaultValue={activityOptions.find(\n                option => option.value === studentToEdit.activity\n              )}\n              onChange={activity => {\n                setActivityValue(activity.value);\n              }}\n            />\n          </SpeakingLabel>\n          <Label>\n            <StudentTextArea\n              type=\"text\"\n              name=\"feedback\"\n              component=\"textarea\"\n              placeholder=\"Фідбек\"\n            />\n            <AdminInputNote component=\"p\" name=\"feedback\" />\n          </Label>\n          <SpeakingFormBtn type=\"submit\">Підтвердити зміни</SpeakingFormBtn>\n        </UserSpeakingEditForm>\n      </Formik>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport {\n  UserCell,\n  UserCellLeft,\n  UserDBCaption,\n  UserDBRow,\n  UserEditButton,\n  UserHeadCell,\n} from 'pages/Streams/UserAdminPanel/UserAdminPanel.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useOutletContext } from 'react-router-dom';\nimport {\n  TeacherSpeakingDBSection,\n  TeacherSpeakingDBTable,\n} from './TeacherPage.styled';\nimport { TeacherPageSpeakingEditForm } from './TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm';\n\nconst TeacherPageSpeaking = () => {\n  const location = useLocation().pathname.split('/speakings/')[1];\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [course, setCourse] = useState('');\n  const [studentToEdit, setStudentToEdit] = useState({});\n  const [isEditStudentFormOpen, setIsEditStudentFormOpen] = useState(false);\n  const linksRegex = /\\b(?:https?|ftp):\\/\\/\\S+\\b/g;\n  const [currentUser] = useOutletContext();\n\n  const closeStudentEditForm = e => {\n    setIsEditStudentFormOpen(false);\n  };\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2\n        ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/'))\n        : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const getLocation = location => {\n    switch (location) {\n      case 'deutsch-a0':\n        return 'deutscha0';\n      case 'deutsch-a0_2':\n        return 'deutscha0_2';\n      case 'deutsch-a1':\n        return 'deutsch';\n      case 'deutsch-a1free':\n        return 'deutschfree';\n      case 'deutsch-a2':\n        return 'deutscha2';\n      case 'deutsch-a2free':\n        return 'deutscha2free';\n      case 'deutsch-b1':\n        return 'deutschb1';\n      case 'deutsch-b2':\n        return 'deutschb2';\n      case 'polski-a0':\n        return 'polskia0';\n      case 'polski-a0_2':\n        return 'polskia0_2';\n      case 'polski-a1':\n        return 'polski';\n      case 'polski-a1free':\n        return 'polskifree';\n      case 'polski-a2':\n        return 'polskia2';\n      case 'polski-b1':\n        return 'polskib1';\n      case 'polski-b2':\n        return 'polskib2';\n      default:\n        return location;\n    }\n  };\n\n  const getLanguageFromLocation = location => {\n    if (location.includes('de') || location.includes('deutsch')) {\n      return 'de';\n    } else if (location.includes('pl') || location.includes('polski')) {\n      return 'pl';\n    } else {\n      return 'en';\n    }\n  };\n  const page = getLocation(location);\n  const lang = getLanguageFromLocation(location);\n\n  const closeEditStudentFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditStudentFormOpen(false);\n    }\n  };\n\n  const updateFeedback = (id, values) => {\n    const userToUpdate = users.find(user => user._id === id);\n    userToUpdate.successRate = values.successRate;\n    userToUpdate.temperament = values.temperament;\n    userToUpdate.grammar = values.grammar;\n    userToUpdate.lexis = values.lexis;\n    userToUpdate.speaking = values.speaking;\n    userToUpdate.listening = values.listening;\n    userToUpdate.activity = values.activity;\n    userToUpdate.feedback[0] = values.feedback;\n\n    setUsers(\n      users =>\n        (users = [...users.filter(user => user._id !== id), userToUpdate])\n    );\n  };\n\n  const handleStudentEdit = async id => {\n    setStudentToEdit(\n      studentToEdit =>\n        (studentToEdit = users.find(student => student.userId === id))\n    );\n    setIsEditStudentFormOpen(true);\n  };\n\n  useEffect(() => {\n    document.title = `Speaking Teacher ${page.toLocaleUpperCase()} | AP Education`;\n    const getSpeakingUsersRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setCourse(\n          (await axios.get('/timetable')).data.filter(\n            timetable =>\n              page.includes(timetable.level) && lang === timetable.lang\n          )[0].course\n        );\n        const usersToSet = await axios.get('/speakingusers');\n\n        setUsers(\n          users =>\n            (users = [\n              ...usersToSet.data.filter(\n                user =>\n                  user.course === course ||\n                  user.course\n                    .split('/')\n                    .some(usersCourse => usersCourse === course)\n              ),\n            ])\n        );\n        console.log('eff');\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getSpeakingUsersRequest();\n  }, [course, page, lang]);\n\n  return (\n    <TeacherSpeakingDBSection>\n      <TeacherSpeakingDBTable>\n        <UserDBCaption>Список студентів, що відвідали заняття</UserDBCaption>\n        <thead>\n          <UserDBRow>\n            <UserHeadCell>№</UserHeadCell>\n            <UserHeadCell>CRM</UserHeadCell>\n            <UserHeadCell>Ім'я</UserHeadCell>\n            <UserHeadCell>Edit</UserHeadCell>\n            <UserHeadCell>Відвідини</UserHeadCell>\n            <UserHeadCell>Мова</UserHeadCell>\n            <UserHeadCell>Потік</UserHeadCell>\n            <UserHeadCell>Темперамент</UserHeadCell>\n            <UserHeadCell>Успішність</UserHeadCell>\n            <UserHeadCell>Граматика</UserHeadCell>\n            <UserHeadCell>Лексика</UserHeadCell>\n            <UserHeadCell>Говоріння</UserHeadCell>\n            <UserHeadCell>Слухання</UserHeadCell>\n            <UserHeadCell>Активність</UserHeadCell>\n            <UserHeadCell>Фідбек</UserHeadCell>\n          </UserDBRow>\n        </thead>\n        <tbody>\n          {users\n            .filter(\n              user =>\n                new Date() -\n                  new Date(\n                    changeDateFormat(user.visited[user.visited.length - 1])\n                  ) <=\n                  4 * 86400000 &&\n                (lang === user.lang ||\n                  user.lang.split('/').some(userLang => lang === userLang)) &&\n                (course === user.course ||\n                  user.course\n                    .split('/')\n                    .some(userCourse => course === userCourse))\n            )\n            .sort((a, b) => Intl.Collator('uk').compare(a.name, b.name))\n            .map((user, i) => (\n              <UserDBRow key={user._id}>\n                <UserCell>{i + 1}</UserCell>\n                <UserCell>\n                  <a\n                    href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {user.crmId}\n                  </a>\n                </UserCell>\n                <UserCellLeft>{user.name}</UserCellLeft>\n                <UserCell>\n                  {/* {user.name === 'Dev Acc' ? null : ( */}\n                    <UserEditButton\n                      onClick={() => handleStudentEdit(user.userId)}\n                    >\n                      Edit\n                    </UserEditButton>\n                  {/* )} */}\n                </UserCell>\n                <UserCell>\n                  {!user.visitedTime[user.visitedTime.length - 1]\n                    ? ''\n                    : user.visitedTime[user.visitedTime.length - 1].match(\n                        '^202'\n                      )\n                    ? new Date(\n                        user.visitedTime[user.visitedTime.length - 1]\n                      ).toLocaleString('uk-UA')\n                    : ''}\n                </UserCell>\n                <UserCell>{user.lang}</UserCell>\n                <UserCell>{user.course}</UserCell>\n                <UserCell>\n                  {user.temperament === 'extro'\n                    ? 'Екстраверт'\n                    : user.temperament === 'intro'\n                    ? 'Інтроверт'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.successRate === 'good'\n                    ? 'Сильний'\n                    : user.successRate === 'mid'\n                    ? 'Середній'\n                    : user.successRate === 'bad'\n                    ? 'Слабкий'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.grammar === 3\n                    ? 'Дуже добре'\n                    : user.grammar === 2\n                    ? 'Добре'\n                    : user.grammar === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.lexis === 3\n                    ? 'Дуже добре'\n                    : user.lexis === 2\n                    ? 'Добре'\n                    : user.lexis === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.speaking === 3\n                    ? 'Дуже добре'\n                    : user.speaking === 2\n                    ? 'Добре'\n                    : user.speaking === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.listening === 3\n                    ? 'Дуже добре'\n                    : user.listening === 2\n                    ? 'Добре'\n                    : user.listening === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.activity === 3\n                    ? 'Дуже добре'\n                    : user.activity === 2\n                    ? 'Добре'\n                    : user.activity === 1\n                    ? 'Потребує покращення'\n                    : ''}\n                </UserCell>\n                <UserCellLeft\n                  dangerouslySetInnerHTML={{\n                    __html:\n                      typeof user.feedback[user.feedback.length - 1] ===\n                      'string'\n                        ? user.feedback[user.feedback.length - 1].replace(\n                            linksRegex,\n                            match =>\n                              `<a href=\"${match}\" target=\"_blank\">${\n                                match.length > 50\n                                  ? match.slice(0, 50) + '...'\n                                  : match\n                              }</a>`\n                          )\n                        : '',\n                  }}\n                ></UserCellLeft>\n              </UserDBRow>\n            ))}\n        </tbody>\n      </TeacherSpeakingDBTable>\n\n      {isEditStudentFormOpen && (\n        <Backdrop onMouseDown={closeEditStudentFormOnClick} id=\"close-on-click\">\n          <TeacherPageSpeakingEditForm\n            currentUser={currentUser}\n            studentToEdit={studentToEdit}\n            updateFeedback={updateFeedback}\n            closeCourseLevelEditForm={closeStudentEditForm}\n          />\n        </Backdrop>\n      )}\n      {isLoading && <Loader />}\n    </TeacherSpeakingDBSection>\n  );\n};\n\nexport default TeacherPageSpeaking;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","_templateObject3","FormBtn","_templateObject4","Input","_templateObject5","_templateObject6","InputNote","_templateObject7","ScheduleList","_templateObject8","ScheduleHeading","_templateObject9","ScheduleItem","_templateObject10","ScheduleInfo","_templateObject11","ScheduleData","_templateObject12","ScheduleDataDayText","_templateObject13","ScheduleDataTypeText","_templateObject14","ScheduleDataTimeText","_templateObject15","FormSelect","_templateObject16","Select","_templateObject17","UserSpeakingEditForm","SpeakingLabel","StyledDatePicker","DatePicker","LabelText","LabelDatePickerText","SpeakingSelect","SpeakingFormBtn","axios","TeacherPageSpeakingEditForm","_ref","currentUser","studentToEdit","updateFeedback","closeCourseLevelEditForm","isLoading","setIsLoading","useState","startDate","setStartDate","Date","temperamentValue","setTemperamentValue","temperament","successRateValue","setSuccessRateValue","successRate","grammarValue","setGrammarValue","grammar","lexisValue","setLexisValue","lexis","speakingValue","setSpeakingValue","speaking","listeningValue","setListeningValue","listening","activityValue","setActivityValue","activity","successRateOptions","label","value","temperamentOptions","grammarOptions","lexisOptions","speakingOptions","listeningOptions","activityOptions","initialEditStudentValues","feedback","studentSchema","yup","shape","_jsxs","_Fragment","children","_jsx","Formik","initialValues","onSubmit","async","console","log","values","concat","name","getDate","getMonth","getFullYear","toLocaleString","timeZone","scValues","crmId","response","userId","userResponse","alert","_id","error","validationSchema","EditFormHeader","id","age","selected","dateFormat","onChange","date","calendarStartDay","shouldCloseOnSelect","options","styles","control","baseStyles","state","border","borderRadius","minHeight","menu","position","zIndex","top","dropdownIndicator","padding","placeholder","defaultValue","find","option","Label","StudentTextArea","type","component","AdminInputNote","Loader","TeacherPageSpeaking","location","useLocation","pathname","split","users","setUsers","course","setCourse","setStudentToEdit","isEditStudentFormOpen","setIsEditStudentFormOpen","linksRegex","useOutletContext","page","getLocation","lang","includes","getLanguageFromLocation","useEffect","document","title","toLocaleUpperCase","data","filter","timetable","level","usersToSet","user","some","usersCourse","getSpeakingUsersRequest","TeacherSpeakingDBSection","TeacherSpeakingDBTable","UserDBCaption","UserDBRow","UserHeadCell","dateString","dateArray","length","parse","join","changeDateFormat","visited","userLang","userCourse","sort","a","b","Intl","Collator","compare","map","i","UserCell","href","target","rel","UserCellLeft","UserEditButton","onClick","student","handleStudentEdit","visitedTime","match","dangerouslySetInnerHTML","__html","replace","slice","Backdrop","onMouseDown","e","userToUpdate"],"sourceRoot":""}