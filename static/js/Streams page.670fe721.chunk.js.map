{"version":3,"file":"static/js/Streams page.670fe721.chunk.js","mappings":"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","sources":["components/Stream/StreamNav/StreamNav.styled.js","components/Stream/StreamNav/StreamNav.jsx","pages/Streams/Streams.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StreamNavigationBox = styled.section`\n  height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  padding: 20px;\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    padding: 30px;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px;\n    gap: 25px;\n  }\n`;\n\nexport const StreamNavigation = styled.div`\n  display: flex;\n  flex-direction: column;\n  \n  font-family: var(--streams-font-family);\n  gap: 15px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 25px;\n  }\n`;\n\nexport const StreamNavTitle = styled.h2`\n  text-align: center;\n  color: var(--main-color);\n  font-size: 32px;\n  font-weight: 600;\n  letter-spacing: 1.8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 40px;\n  }\n`;\n\nexport const StreamNavDescription = styled.p`\n  text-align: center;\n  color: var(--main-color);\n\n  font-size: 22px;\n  font-weight: 500;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 26px;\n  }\n`;\n\nexport const StreamNavList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 20px;\n`;\n\nexport const StreamNavItem = styled.li`\n  min-width: 56px;\n  width: max-content;\n\n  @media screen and (min-width: 768px) {\n    min-width: 69px;\n  }\n  @media screen and (min-width: 1280px) {\n    min-width: 80px;\n  }\n`;\n\nexport const StreamNavLink = styled(Link)`\n  display: block;\n\n  cursor: pointer;\n  text-decoration: none;\n  text-align: center;\n  padding: 8px;\n\n  font-size: 32px;\n  font-weight: 600;\n  letter-spacing: 1.8px;\n\n  color: var(--accent-color);\n  border: 2px solid var(--main-transparent-color);\n  border-radius: 50%;\n\n  transition: color var(--animation-global),\n    background-color var(--animation-global);\n\n  @media screen and (min-width: 768px) {\n    padding: 12px;\n    font-size: 36px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 16px;\n    font-size: 40px;\n  }\n\n  &:hover,\n  &:focus {\n    color: var(--main-color);\n    background-color: var(--accent-transparent-color);\n  }\n`;\n","import {\n  StreamNavDescription,\n  StreamNavItem,\n  StreamNavLink,\n  StreamNavList,\n  StreamNavTitle,\n  StreamNavigation,\n  StreamNavigationBox,\n} from './StreamNav.styled';\n\nexport const StreamNav = () => {\n  return (\n    <>\n      <StreamNavigationBox>\n        <StreamNavigation>\n          <StreamNavTitle>Вітаємо на сторінці онлайн-уроків!</StreamNavTitle>\n          <StreamNavDescription>\n            Щоб знайти потрібну трансляцію, просто оберіть рівень або мову:\n          </StreamNavDescription>\n          <StreamNavList>\n            {/* <StreamNavItem>\n              <StreamNavLink to={'/streams/a0'}>A0</StreamNavLink>\n            </StreamNavItem> */}\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/a1'}>A1</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/a2'}>A2</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/b1'}>B1</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/b2'}>B2</StreamNavLink>\n            </StreamNavItem>\n            {/* <StreamNavItem>\n              <StreamNavLink to={'/streams/c1'}>C1</StreamNavLink>\n            </StreamNavItem> */}\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/deutsch'}>DE A1</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/deutscha2'}>DE A2</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/deutschb1'}>DE B1</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/deutschb2'}>DE B2</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/polski'}>PL A1</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/polskia2'}>PL A2</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/polskib1'}>PL B1</StreamNavLink>\n            </StreamNavItem>\n            <StreamNavItem>\n              <StreamNavLink to={'/streams/polskib2'}>PL B2</StreamNavLink>\n            </StreamNavItem>\n          </StreamNavList>\n        </StreamNavigation>\n        {/* <Schedule /> */}\n      </StreamNavigationBox>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { StreamsBackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { LoaderWrapper } from 'components/SharedLayout/Loaders/Loader.styled';\nimport { StreamNav } from 'components/Stream/StreamNav/StreamNav';\nimport { Formik } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport * as yup from 'yup';\nimport {\n  LoginInput,\n  LoginInputNote,\n  LoginLogo,\n  StreamAuthText,\n  StreamAuthTextHello,\n} from '../../components/Stream/Stream.styled';\nimport { AdminFormBtn, LoginForm } from './AdminPanel/AdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst Streams = () => {\n  let location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [links, setLinks] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [isUserLogged, setIsUserLogged] = useState(false);\n\n  const room = location.pathname;\n\n  const wakeupRequest = async () => {\n    try {\n      const wake = await axios.get('/');\n      console.log(wake.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const detectUser = async () => {\n    try {\n      let ip;\n      try {\n        ip = (await axios.get('https://jsonip.com/')).data.ip;\n        console.log(ip);\n      } catch (error) {\n        console.log(error);\n      }\n      const id = localStorage.getItem('userID');\n      const user = await axios.get(\n        `https://ap-chat-server.onrender.com/users/${id}`\n      );\n      console.log(user.data, 'detect');\n      setCurrentUser(\n        currentUser =>\n          (currentUser = user.data || {\n            username: 'User Is Not Logged In',\n            isBanned: false,\n            userIP: ip || 'user has disabled ip tracker',\n          })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const initialLoginValues = {\n    mail: '',\n    password: '',\n  };\n\n  const initialLoginByNameValues = {\n    name: '',\n    userId: '',\n    lang: '',\n    knowledge: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    mail: yup\n      .string()\n      .required('Вкажіть пошту, за якою ви зареєстровані на нашій платформі!'),\n    password: yup\n      .string()\n      .required(\n        'Введіть пароль, який ви використовуєте для входу на нашу платформу!'\n      ),\n  });\n\n  const loginByNameSchema = yup.object().shape({\n    name: yup.string().required(\"Необхідно ввести ім'я та прізвище!\"),\n  });\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    try {\n      const response = await axios.post('/users/login', values);\n      console.log(values);\n      console.log(response);\n      setAuthToken(response.data.token);\n      setIsUserLogged(isLogged => (isLogged = true));\n      setCurrentUser(currentUser => (currentUser = response.data.user));\n      localStorage.setItem('userID', nanoid(8));\n      localStorage.setItem('mail', values.mail);\n      localStorage.setItem('userName', response.data.user.name);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleLoginByNameSubmit = async (values, { resetForm }) => {\n    values.name = values.name.trim().trimStart();\n    values.userId = nanoid(8);\n    values.lang = room.includes('deutsch')\n      ? 'de'\n      : room.includes('polski')\n      ? 'pl'\n      : 'en';\n    values.knowledge = room.includes('a2') ? 'a2' : 'a1';\n    console.log(values);\n    try {\n      const response = await axios.post('/trialUsers/login', values);\n      console.log(values);\n      console.log(response);\n      setAuthToken(response.data.token);\n      setIsUserLogged(isLogged => (isLogged = true));\n      setCurrentUser(currentUser => (currentUser = response.data.user));\n      localStorage.setItem('userID', values.userId);\n      localStorage.setItem('userName', response.data.user.name);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useLayoutEffect(() => {\n    wakeupRequest();\n\n    const getLinksRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setLinks((await axios.get('/links')).data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getLinksRequest();\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        const res = await axios.post(\n          'https://ap-server-8qi1.onrender.com/users/refresh',\n          { mail: localStorage.getItem('mail') }\n        );\n        setIsUserLogged(isLogged => (isLogged = true));\n        const id = nanoid(8);\n        if (!localStorage.getItem('userID')) {\n          localStorage.setItem('userID', id);\n        }\n        localStorage.setItem('userName', res.data.user.name);\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n\n    const refreshTrialToken = async () => {\n      console.log('token refresher');\n\n      try {\n        const res = await axios.post('/trialUsers/refresh', {\n          name: localStorage.getItem('userName'),\n          userId: localStorage.getItem('userID'),\n        });\n        setIsUserLogged(isLogged => (isLogged = true));\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    room.includes('free') && refreshTrialToken();\n  }, [room]);\n\n  useEffect(() => {\n    detectUser();\n  }, [isLoading]);\n\n  return (\n    <>\n      <StreamsBackgroundWrapper>\n        {!isUserLogged &&\n        !location.pathname.includes('admin-panel') &&\n        !location.pathname.includes('teamlead-panel') &&\n        !location.pathname.includes('-chat') &&\n        !location.pathname.includes('free') ? (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <LoginLogo />\n              <StreamAuthText>\n                <StreamAuthTextHello>Привіт!</StreamAuthTextHello>\n                Ця сторінка недоступна для неавторизованих користувачів. Але,\n                якщо ви маєте доступ до нашої платформи, то й до цієї сторінки\n                теж. Введіть дані, які ви використовуєте для входу на платформу.\n              </StreamAuthText>\n              <Label>\n                <LoginInput type=\"text\" name=\"mail\" placeholder=\"Login\" />\n                <LoginInputNote component=\"p\" name=\"mail\" type=\"email\" />\n              </Label>\n              <Label>\n                <LoginInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <LoginInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Увійти</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        ) : !isUserLogged &&\n          location.pathname.includes('free') &&\n          !location.pathname.includes('-chat') ? (\n          <Formik\n            initialValues={initialLoginByNameValues}\n            onSubmit={handleLoginByNameSubmit}\n            validationSchema={loginByNameSchema}\n          >\n            <LoginForm>\n              <LoginLogo />\n              <StreamAuthText>\n                <StreamAuthTextHello>\n                  Вітаємо вас на сторінці пробних занять!\n                </StreamAuthTextHello>\n                Для отримання доступу, будь ласка, введіть своє ім'я та прізвище\n                у відповідне поле та натисніть кнопку \"Увійти\".\n              </StreamAuthText>\n              <Label>\n                <LoginInput\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Ім'я та прізвище*\"\n                />\n                <LoginInputNote component=\"p\" name=\"name\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Увійти</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        ) : location.pathname === '/streams' ||\n          location.pathname === '/streams/' ? (\n          <StreamNav />\n        ) : (\n          <Outlet context={[links, isLoading, currentUser, room]} />\n        )}\n\n        {isLoading && (\n          <LoaderWrapper>\n            <Loader />\n          </LoaderWrapper>\n        )}\n      </StreamsBackgroundWrapper>\n    </>\n  );\n};\n\nexport default Streams;\n"],"names":["StreamNavigationBox","styled","_templateObject","_taggedTemplateLiteral","StreamNavigation","_templateObject2","StreamNavTitle","_templateObject3","StreamNavDescription","_templateObject4","StreamNavList","_templateObject5","StreamNavItem","_templateObject6","StreamNavLink","Link","_templateObject7","StreamNav","_jsx","_Fragment","children","_jsxs","to","axios","setAuthToken","token","concat","Streams","location","useLocation","isLoading","setIsLoading","useState","links","setLinks","currentUser","setCurrentUser","isUserLogged","setIsUserLogged","room","pathname","loginSchema","yup","shape","mail","required","password","loginByNameSchema","name","useLayoutEffect","async","wake","console","log","data","error","wakeupRequest","getLinksRequest","res","localStorage","getItem","isLogged","id","nanoid","setItem","user","refreshToken","includes","userId","refreshTrialToken","useEffect","ip","username","isBanned","userIP","detectUser","StreamsBackgroundWrapper","Outlet","context","Formik","initialValues","lang","knowledge","onSubmit","values","_ref2","resetForm","trim","trimStart","response","validationSchema","LoginForm","LoginLogo","StreamAuthText","StreamAuthTextHello","Label","LoginInput","type","placeholder","LoginInputNote","component","AdminFormBtn","_ref","toLowerCase","LoaderWrapper","Loader"],"sourceRoot":""}