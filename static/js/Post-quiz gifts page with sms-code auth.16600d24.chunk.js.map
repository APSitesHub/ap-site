{"version":3,"file":"static/js/Post-quiz gifts page with sms-code auth.16600d24.chunk.js","mappings":"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","sources":["pages/Gifts/GiftsAuth.jsx"],"sourcesContent":["import axios from 'axios';\nimport {\n  Label,\n  LeftFormBackgroundStar,\n  RightFormBackgroundStar,\n} from 'components/LeadForm/LeadForm.styled';\nimport { LoginFormText } from 'components/Stream/Stream.styled';\nimport { Formik } from 'formik';\nimport {\n  ExternalLinkIcon,\n  LessonTopBox,\n  LessonValuePdfLink,\n  LessonVideoBox,\n  PdfBox,\n  PdfWrapper,\n} from 'pages/MyAP/LessonFinder/LessonFinder.styled';\nimport { Title } from 'pages/Quiz/Quiz.styled';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  LoginForm,\n} from 'pages/Streams/AdminPanel/AdminPanel.styled';\nimport { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player/youtube';\nimport * as yup from 'yup';\nimport { ReactComponent as PdfIcon } from '../../img/svg/pdf-icon.svg';\nimport {\n  GiftLinkIcon,\n  GiftsBox,\n  GiftsBoxItem,\n  GiftsDescription,\n  GiftsVideoBox,\n  Logo,\n  PdfPreview,\n  PdfPreviewBackground,\n  QuizletLink,\n  QuizletLogo,\n  QuizletShortLogo,\n  SubTitle,\n  YouTubeLogo,\n} from './Gifts.styled';\nimport { gifts } from './giftsSet';\nimport { useLocation } from 'react-router-dom';\n\nconsole.log(gifts);\n\nconst GiftsAuth = () => {\n  const [isUserLogged, setIsUserLogged] = useState(false);\n  const [user, setUser] = useState({});\n  const [isPhoneSent, setIsPhoneSent] = useState(false);\n  const [isPdfPreviewOpen, setIsPdfPreviewOpen] = useState(false);\n  const [openedPdf, setOpenedPdf] = useState('');\n\n  console.log(user);\n\n  const id = useLocation().pathname.match(/(\\d+)/)[0];\n  console.log(id);\n\n  axios.defaults.baseURL = 'http://localhost:5000';\n\n  const setAuthToken = token => {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  };\n\n  useEffect(() => {\n    document.title = 'Подарункові матеріали | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      console.log(localStorage.getItem('authCode'));\n      if (localStorage.getItem('authCode')) {\n        try {\n          const res = await axios.post('/users/refresh-code', {\n            authCode: localStorage.getItem('authCode'),\n          });\n          setIsUserLogged(isLogged => (isLogged = true));\n          console.log(res);\n          setUser(user => (user = { ...res.data.user }));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n\n    refreshToken();\n  }, []);\n\n  const initialPhoneValue = {\n    phone: '',\n  };\n\n  const initialAuthCodeValue = {\n    authCode: '',\n  };\n\n  const phoneSchema = yup.object().shape({\n    phone: yup\n      .string()\n      .required('Будь ласка, вкажіть свій номер телефону!')\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Будь ласка, введіть валідний номер телефону!'\n      )\n      .min(10, 'Номер телефону має складатися не менше ніж з 10 символів!')\n      .max(15, 'Номер телефону має складатися не більше ніж з 15 символів!'),\n  });\n\n  const authCodeSchema = yup.object().shape({\n    authCode: yup\n      .string()\n      .required('Вкажіть код, який ми надішлемо вам в SMS!'),\n  });\n\n  const handlePhoneSubmit = async (values, { resetForm }) => {\n    values.phone = values.phone.trim().trimStart();\n    try {\n      const response = await axios.put(`/users/crm/${id}`, values);\n      setAuthToken(response.data.token);\n      setIsPhoneSent(isPhoneSent => (isPhoneSent = true));\n      setUser(user => (user = { ...response.data.user }));\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCodeSubmit = async (values, { resetForm }) => {\n    values.authCode = values.authCode.trim().trimStart();\n    try {\n      const response = await axios.post('/users/login-code', values);\n      setAuthToken(response.data.token);\n      setIsUserLogged(isLogged => (isLogged = true));\n      setUser(user => (user = { ...response.data.user }));\n      localStorage.setItem('mail', user.mail);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const togglePdfPreviewOnTouch = pdfId => {\n    const pdfOpener = pdfId => {\n      console.log('opener');\n      setOpenedPdf(pdf => (pdf = pdfId));\n      setIsPdfPreviewOpen(isOpen => !isOpen);\n    };\n\n    setOpenedPdf(pdfId);\n    isPdfPreviewOpen && pdfId !== openedPdf\n      ? setOpenedPdf(pdf => (pdf = pdfId))\n      : !isPdfPreviewOpen && pdfId === openedPdf\n      ? setIsPdfPreviewOpen(isOpen => !isOpen)\n      : isPdfPreviewOpen && pdfId === openedPdf\n      ? setIsPdfPreviewOpen(isOpen => !isOpen)\n      : pdfOpener(pdfId);\n  };\n\n  const openPdfPreviewOnHover = e => {\n    setOpenedPdf(pdf => (pdf = e.target.id));\n    if (!isPdfPreviewOpen) {\n      setIsPdfPreviewOpen(isOpen => !isOpen);\n    }\n  };\n\n  const closePdfPreviewOnMouseOut = () => {\n    console.log('mouse out?');\n    setOpenedPdf(pdf => (pdf = ''));\n    if (isPdfPreviewOpen) {\n      setIsPdfPreviewOpen(isOpen => !isOpen);\n    }\n  };\n\n  return (\n    <>\n      {!isUserLogged ? (\n        <Formik\n          initialValues={initialPhoneValue}\n          onSubmit={handlePhoneSubmit}\n          validationSchema={phoneSchema}\n        >\n          <LoginForm>\n            <LeftFormBackgroundStar />\n            <RightFormBackgroundStar />\n            <LoginFormText>\n              Привіт!\n              <br />\n              Для отримання паролю від цієї сторінки, будь ласка, вкажіть свій\n              актуальний номер!\n            </LoginFormText>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"phone\"\n                placeholder=\"Номер телефону*\"\n              />\n              <AdminInputNote component=\"p\" name=\"phone\" />\n            </Label>\n            <AdminFormBtn type=\"submit\">Увійти</AdminFormBtn>\n          </LoginForm>\n        </Formik>\n      ) : !isUserLogged && isPhoneSent ? (\n        <Formik\n          initialValues={initialAuthCodeValue}\n          onSubmit={handleCodeSubmit}\n          validationSchema={authCodeSchema}\n        >\n          <LoginForm>\n            <LeftFormBackgroundStar />\n            <RightFormBackgroundStar />\n            <LoginFormText>\n              Вкажіть код, який ми надіслали вам в SMS-повідомленні!\n            </LoginFormText>\n            <Label>\n              <AdminInput type=\"text\" name=\"authcode\" placeholder=\"Код*\" />\n              <AdminInputNote component=\"p\" name=\"authcode\" />\n            </Label>\n            <AdminFormBtn type=\"submit\">Увійти</AdminFormBtn>\n          </LoginForm>\n        </Formik>\n      ) : (\n        user.lang && (\n          <>\n            <Logo />\n            <Title>Подарункові матеріали</Title>\n            <SubTitle>\n              Розпочніть своє навчання вже зараз з безкоштовними подарунковими\n              матеріалами!\n            </SubTitle>\n            <GiftsBox>\n              {gifts[user.lang][user.knowledge].map((gift, i) => (\n                <>\n                  <GiftsBoxItem key={i}>\n                    {gift.type === 'quizlet' && (\n                      <LessonTopBox>\n                        <QuizletLink\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          to={gift.link}\n                        >\n                          <QuizletLogo />\n                          <QuizletShortLogo />\n                          <GiftsDescription>\n                            Набір вправ для самостійного вивчення слів для рівня{' '}\n                            {gift.name}\n                          </GiftsDescription>\n                          <GiftLinkIcon />\n                        </QuizletLink>\n                      </LessonTopBox>\n                    )}\n                    {gift.type === 'video' && (\n                      <GiftsVideoBox\n                      // className={!isVideoOpen && 'minimized'}\n                      >\n                        <LessonTopBox>\n                          <YouTubeLogo />\n                          <GiftsDescription>{gift.name}</GiftsDescription>\n                        </LessonTopBox>\n                        <LessonVideoBox>\n                          <ReactPlayer\n                            loop={true}\n                            muted={false}\n                            controls={true}\n                            style={{\n                              display: 'block',\n                              position: 'absolute',\n                              top: 0,\n                              left: 0,\n                            }}\n                            width=\"100%\"\n                            height=\"100%\"\n                            url={gift.link}\n                          />\n                        </LessonVideoBox>\n                      </GiftsVideoBox>\n                    )}\n\n                    {gift.type === 'grammar' && (\n                      <PdfBox\n                        onMouseLeave={closePdfPreviewOnMouseOut}\n                        // className={!isGrammarOpen && 'minimized'}\n                      >\n                        <PdfWrapper\n                          id={gift.link}\n                          onMouseEnter={e => openPdfPreviewOnHover(e)}\n                          onTouchEnd={() => togglePdfPreviewOnTouch(gift.link)}\n                        >\n                          <PdfIcon />\n                          <LessonValuePdfLink\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            to={gift.link}\n                          >\n                            <GiftsDescription>{gift.name}</GiftsDescription>\n                            <ExternalLinkIcon />\n                          </LessonValuePdfLink>\n                        </PdfWrapper>\n                        <PdfPreviewBackground\n                          className={\n                            isPdfPreviewOpen &&\n                            openedPdf === gift.link &&\n                            'preview-open'\n                          }\n                        >\n                          {isPdfPreviewOpen && openedPdf === gift.link && (\n                            <PdfPreview\n                              title={`Preview of ${gift.link}`}\n                              src={gift.link\n                                .replace('open?id=', 'file/d/')\n                                .replace('view', 'preview')\n                                .replace('&usp=drive_copy', '/preview')}\n                              allow=\"autoplay\"\n                            ></PdfPreview>\n                          )}\n                        </PdfPreviewBackground>\n                      </PdfBox>\n                    )}\n                  </GiftsBoxItem>\n                </>\n              ))}\n            </GiftsBox>\n          </>\n        )\n      )}\n    </>\n  );\n};\n\nexport default GiftsAuth;\n"],"names":["console","log","gifts","GiftsAuth","isUserLogged","setIsUserLogged","useState","user","setUser","isPhoneSent","setIsPhoneSent","isPdfPreviewOpen","setIsPdfPreviewOpen","openedPdf","setOpenedPdf","id","useLocation","pathname","match","axios","setAuthToken","token","concat","useEffect","document","title","async","localStorage","getItem","res","authCode","isLogged","data","error","refreshToken","phoneSchema","yup","shape","phone","required","matches","min","max","authCodeSchema","closePdfPreviewOnMouseOut","pdf","isOpen","_jsx","_Fragment","children","Formik","initialValues","onSubmit","values","_ref2","resetForm","trim","trimStart","response","setItem","mail","validationSchema","_jsxs","LoginForm","LeftFormBackgroundStar","RightFormBackgroundStar","LoginFormText","Label","AdminInput","type","name","placeholder","AdminInputNote","component","AdminFormBtn","lang","Logo","Title","SubTitle","GiftsBox","knowledge","map","gift","i","GiftsBoxItem","LessonTopBox","QuizletLink","target","rel","to","link","QuizletLogo","QuizletShortLogo","GiftsDescription","GiftLinkIcon","GiftsVideoBox","YouTubeLogo","LessonVideoBox","ReactPlayer","loop","muted","controls","style","display","position","top","left","width","height","url","PdfBox","onMouseLeave","PdfWrapper","onMouseEnter","e","openPdfPreviewOnHover","onTouchEnd","togglePdfPreviewOnTouch","pdfId","pdfOpener","PdfIcon","LessonValuePdfLink","ExternalLinkIcon","PdfPreviewBackground","className","PdfPreview","src","replace","allow","_ref"],"sourceRoot":""}