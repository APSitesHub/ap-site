{"version":3,"file":"static/js/User Admin Panel page.08e12f3d.chunk.js","mappings":"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","sources":["pages/Streams/UserAdminPanel/UserAdminPanel.jsx","pages/Streams/UserAdminPanel/UserEditForm/UserEditForm.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useEffect, useRef, useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  AdminPanelSection,\n  FilterButton,\n  FilterPicker,\n  FilterPickerButton,\n  Filterable,\n  LoginForm,\n  UserBanButton,\n  UserCell,\n  UserDBCaption,\n  UserDBRow,\n  UserDBTable,\n  UserDeleteButton,\n  UserEditButton,\n  UserHeadCell,\n  UsersForm,\n} from './UserAdminPanel.styled';\nimport { UserEditForm } from './UserEditForm/UserEditForm';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\nconst DAYS_SET = [1, 3, 7, 14, 30];\n\nconst UserAdminPanel = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [managers, setManagers] = useState([]);\n  const [levels, setLevels] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [langs, setLangs] = useState([]);\n  const [isEditFormOpen, setIsEditFormOpen] = useState(false);\n  const [userToEdit, setUserToEdit] = useState({});\n  const [daysAfterLastLogin, setDaysAfterLastLogin] = useState(7);\n  const [isManagerPickerOpen, setIsManagerPickerOpen] = useState(false);\n  const [isLangPickerOpen, setIsLangPickerOpen] = useState(false);\n  const [isDaysPickerOpen, setIsDaysPickerOpen] = useState(false);\n  const [isLevelPickerOpen, setIsLevelPickerOpen] = useState(false);\n  const [isCoursePickerOpen, setIsCoursePickerOpen] = useState(false);\n\n  const persistentUsers = useRef([]);\n  const sortedUsers = useRef([]);\n  const filteredUsers = useRef([]);\n\n  useEffect(() => {\n    document.title = 'User Admin Panel | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        if (localStorage.getItem('isAdmin')) {\n          const res = await axios.post('admins/refresh/users/', {});\n          setAuthToken(res.data.newToken);\n          setIsUserAdmin(isAdmin => (isAdmin = true));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n\n    const getUsers = async () => {\n      try {\n        if (isUserAdmin) {\n          const response = await axios.get('/users/admin/');\n          setUsers(users => (users = [...response.data.reverse()]));\n          persistentUsers.current = [...response.data.reverse()];\n          setManagers(\n            managers =>\n              (managers = [\n                ...response.data\n                  .map(user => user.manager)\n                  .filter((manager, i, arr) => arr.indexOf(manager) === i)\n                  .sort(),\n              ])\n          );\n          setLevels(\n            levels =>\n              (levels = [\n                ...response.data\n                  .map(user => user.knowledge)\n                  .filter((level, i, arr) => arr.indexOf(level) === i)\n                  .sort(),\n              ])\n          );\n          setCourses(\n            courses =>\n              (courses = [\n                ...response.data\n                  .map(user => user.course)\n                  .filter((course, i, arr) => arr.indexOf(course) === i)\n                  .sort(),\n              ])\n          );\n          setLangs(\n            langs =>\n              (langs = [\n                ...response.data\n                  .map(user => user.lang)\n                  .filter((lang, i, arr) => arr.indexOf(lang) === i)\n                  .sort(),\n              ])\n          );\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getUsers();\n\n    const onEscapeClose = event => {\n      if (event.code === 'Escape') {\n        closeEditForm();\n      }\n    };\n\n    window.addEventListener('keydown', onEscapeClose);\n\n    return () => {\n      window.removeEventListener('keydown', onEscapeClose);\n    };\n  }, [isUserAdmin]);\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  // const calculateDaysFilter = current => {\n  //   setDaysAfterLastLogin(\n  //     days =>\n  //       (days = DAYS_SET[DAYS_SET.findIndex(days => current === days) + 1])\n  //   );\n\n  //   sortedUsers.current = [\n  //     ...users.sort(\n  //       (a, b) =>\n  //         (changeDateFormat(a.visited[a.visited.length - 1]) || 0) -\n  //         (changeDateFormat(b.visited[b.visited.length - 1]) || 0)\n  //     ),\n  //   ];\n  //   console.log(sortedUsers.current);\n  //   setUsers(users => (users = [...sortedUsers.current]));\n  // };\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2\n        ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/'))\n        : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const filterByManager = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (\n      sortedUsers.current.length > 0 &&\n      filteredUsers.current.length === 0\n    ) {\n      setUsers(\n        users =>\n          (users = [\n            ...sortedUsers.current.filter(user => user.manager === current),\n          ])\n      );\n      filteredUsers.current = [\n        ...sortedUsers.current.filter(user => user.manager === current),\n      ];\n    } else {\n      console.log('managers else');\n      console.log(filteredUsers);\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current.filter(user => user.manager === current),\n          ])\n      );\n      sortedUsers.current = [\n        ...persistentUsers.current.filter(user => user.manager === current),\n      ];\n      filteredUsers.current = [\n        ...persistentUsers.current.filter(user => user.manager === current),\n      ];\n      console.log(filteredUsers);\n    }\n  };\n\n  const filterByCourse = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (\n      sortedUsers.current.length > 0 &&\n      filteredUsers.current.length === 0\n    ) {\n      setUsers(\n        users =>\n          (users = [\n            ...sortedUsers.current.filter(user => user.course === current),\n          ])\n      );\n      filteredUsers.current = [\n        ...sortedUsers.current.filter(user => user.course === current),\n      ];\n    } else {\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current.filter(user => user.course === current),\n          ])\n      );\n      sortedUsers.current = [\n        ...persistentUsers.current.filter(user => user.course === current),\n      ];\n      filteredUsers.current = [\n        ...persistentUsers.current.filter(user => user.course === current),\n      ];\n    }\n  };\n\n  const filterByLang = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (\n      sortedUsers.current.length > 0 &&\n      filteredUsers.current.length === 0\n    ) {\n      setUsers(\n        users =>\n          (users = [\n            ...sortedUsers.current.filter(user => user.lang === current),\n          ])\n      );\n      filteredUsers.current = [\n        ...sortedUsers.current.filter(user => user.lang === current),\n      ];\n    } else {\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current.filter(user => user.lang === current),\n          ])\n      );\n      sortedUsers.current = [\n        ...persistentUsers.current.filter(user => user.lang === current),\n      ];\n      filteredUsers.current = [\n        ...persistentUsers.current.filter(user => user.lang === current),\n      ];\n    }\n  };\n\n  const filterByDays = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      console.log(\"current === '' && sortedUsers.current.length === 0\");\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (filteredUsers.current.length > 0) {\n      setUsers(\n        users =>\n          (users = [\n            ...filteredUsers.current\n              .filter(user =>\n                user.visited.length > 0\n                  ? (Date.now() -\n                      changeDateFormat(user.visited[user.visited.length - 1])) /\n                      86400000 >\n                    current\n                  : 0\n              )\n              .sort(\n                (a, b) =>\n                  (changeDateFormat(a.visited[a.visited.length - 1]) || 0) -\n                  (changeDateFormat(b.visited[b.visited.length - 1]) || 0)\n              ),\n          ])\n      );\n    } else {\n      console.log('else');\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current\n              .filter(user =>\n                user.visited.length > 0\n                  ? (Date.now() -\n                      changeDateFormat(user.visited[user.visited.length - 1])) /\n                      86400000 >\n                    current\n                  : 0\n              )\n              .sort(\n                (a, b) =>\n                  (changeDateFormat(b.visited[b.visited.length - 1]) || 0) -\n                  (changeDateFormat(a.visited[a.visited.length - 1]) || 0)\n              ),\n          ])\n      );\n    }\n  };\n\n  const filterByLevel = current => {\n    if (current === '' && sortedUsers.current.length === 0) {\n      setUsers(users => (users = [...persistentUsers.current]));\n      sortedUsers.current = [];\n    } else if (\n      sortedUsers.current.length > 0 &&\n      filteredUsers.current.length === 0\n    ) {\n      setUsers(\n        users =>\n          (users = [\n            ...sortedUsers.current.filter(user => user.knowledge === current),\n          ])\n      );\n      filteredUsers.current = [\n        ...sortedUsers.current.filter(user => user.knowledge === current),\n      ];\n    } else {\n      setUsers(\n        users =>\n          (users = [\n            ...persistentUsers.current.filter(\n              user => user.knowledge === current\n            ),\n          ])\n      );\n      sortedUsers.current = [\n        ...persistentUsers.current.filter(user => user.knowledge === current),\n      ];\n      filteredUsers.current = [\n        ...persistentUsers.current.filter(user => user.knowledge === current),\n      ];\n    }\n  };\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.post('/admins/login/users', values);\n      setAuthToken(response.data.token);\n      setIsUserAdmin(isAdmin => (isAdmin = true));\n      localStorage.setItem('isAdmin', true);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const initialUserValues = {\n    name: '',\n    mail: '',\n    zoomMail: '',\n    password: '',\n    crmId: '',\n    contactId: '',\n    pupilId: '',\n    marathonNumber: '',\n    age: '',\n    adult: true,\n    lang: '',\n    course: '',\n    package: '',\n    knowledge: '',\n    manager: '',\n  };\n\n  const usersSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required(\n        \"Ім'я - обов'язкове поле, якщо імені з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    mail: yup.string().required(\"Пошта - обов'язкове поле!\"),\n    zoomMail: yup.string(),\n    password: yup.string().required(\"Пароль - обов'язкове поле!\"),\n    crmId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    contactId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    pupilId: yup\n      .string()\n      .min(6, 'Не менше 6 цифр')\n      .max(7, 'Не більше 7 цифр')\n      .matches(/^\\d{1,7}$/, 'Лише цифри')\n      .required(\"Обов'язкове поле, дивитись на платформі\"),\n    marathonNumber: yup\n      .string()\n      .max(1, 'Не більше 1 цифри')\n      .matches(/[12]/, 'Лише цифри 1 або 2'),\n    age: yup\n      .string()\n      .required(\n        \"Вік - обов'язкове поле, якщо віку з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    lang: yup\n      .string()\n      .required(\"Мова - обов'язкове поле\")\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    course: yup\n      .string()\n      .required(\n        \"Обов'язкове поле, для тестових юзерів або нерозподілених користувачів введіть 0\"\n      ),\n    package: yup.string().optional(),\n    // .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    knowledge: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    manager: yup\n      .string()\n      .required(\"Менеджер - обов'язкове поле, введіть прізвище\"),\n  });\n\n  const handleUserSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.name = values.name.trim().trimStart();\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.zoomMail = values.zoomMail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    values.crmId = values.crmId ? +values.crmId.trim().trimStart() : undefined;\n    values.contactId = values.contactId\n      ? +values.contactId.trim().trimStart()\n      : undefined;\n    values.pupilId = values.pupilId.trim().trimStart();\n    values.marathonNumber = values.marathonNumber.trim().trimStart();\n    values.age = values.age.trim().trimStart();\n    values.adult = +values.age >= 18 ? true : false;\n    values.lang = values.lang.toLowerCase().trim().trimStart();\n    values.package = values.package.toLowerCase().trim().trimStart();\n    values.knowledge = values.knowledge.toLowerCase().trim().trimStart();\n    values.manager = values.manager.toLowerCase().trim().trimStart();\n    try {\n      const response = await axios.post('/users/new', values);\n      console.log(response.data);\n      setUsers(users => [response.data, ...users]);\n      resetForm();\n      alert('Юзера додано');\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const handleEdit = async id => {\n    setIsEditFormOpen(true);\n    setUserToEdit(\n      userToEdit => (userToEdit = users.find(user => user._id === id))\n    );\n  };\n\n  const closeEditForm = e => {\n    setIsEditFormOpen(false);\n  };\n\n  const closeEditFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditFormOpen(false);\n    }\n  };\n\n  const updateUser = (id, values) => {\n    const userToUpdate = users.find(user => user._id === id);\n    userToUpdate.name = values.name;\n    userToUpdate.mail = values.mail;\n    userToUpdate.zoomMail = values.zoomMail;\n    userToUpdate.password = values.password;\n    userToUpdate.pupilId = values.pupilId;\n    userToUpdate.marathonNumber = values.marathonNumber;\n    userToUpdate.crmId = values.crmId;\n    userToUpdate.contactId = values.contactId;\n    userToUpdate.age = values.age;\n    userToUpdate.adult = values.adult;\n    userToUpdate.lang = values.lang;\n    userToUpdate.package = values.package;\n    userToUpdate.course = values.course;\n    userToUpdate.knowledge = values.knowledge;\n    userToUpdate.manager = values.manager;\n\n    console.log(userToUpdate);\n\n    setUsers(\n      users =>\n        (users = users.map((user, i) =>\n          i === users.findIndex(user => user._id === id) ? userToUpdate : user\n        ))\n    );\n  };\n\n  const toggleDaysSinceLastVisitPicker = () => {\n    setIsDaysPickerOpen(isOpen => !isOpen);\n  };\n\n  const toggleLevelPicker = () => {\n    setIsLevelPickerOpen(isOpen => !isOpen);\n  };\n\n  const toggleCoursePicker = () => {\n    setIsCoursePickerOpen(isOpen => !isOpen);\n  };\n\n  const toggleLangPicker = () => {\n    setIsLangPickerOpen(isOpen => !isOpen);\n  };\n\n  const toggleManagerPicker = () => {\n    setIsManagerPickerOpen(isOpen => !isOpen);\n  };\n\n  const handleDelete = async id => {\n    setIsLoading(isLoading => (isLoading = true));\n    const areYouSure = window.confirm(\n      `Точно видалити ${users.find(user => user._id === id).name}?`\n    );\n\n    if (!areYouSure) {\n      setIsLoading(isLoading => (isLoading = false));\n      return;\n    } else {\n      try {\n        const response = await axios.delete(`/users/${id}`);\n        console.log(response);\n        alert('Юзера видалено');\n        setUsers(users => (users = [...users.filter(user => user._id !== id)]));\n      } catch (error) {\n        console.error(error);\n        alert(\n          'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n        );\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    }\n  };\n\n  const handleBan = async (id, isBanned) => {\n    setIsLoading(isLoading => (isLoading = true));\n\n    try {\n      const response = await axios.patch(\n        `/users/${id}`,\n        isBanned ? { isBanned: false } : { isBanned: true }\n      );\n      console.log(response);\n      isBanned ? alert('Юзера розблоковано') : alert('Юзера заблоковано');\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        {!isUserAdmin && (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Login\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Залогінитись</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        )}\n\n        {isUserAdmin && (\n          <Formik\n            initialValues={initialUserValues}\n            onSubmit={handleUserSubmit}\n            validationSchema={usersSchema}\n          >\n            <UsersForm>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Прізвище та ім'я\"\n                />\n                <AdminInputNote component=\"p\" name=\"name\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"email\"\n                  name=\"mail\"\n                  placeholder=\"Електронна пошта (логін)\"\n                />\n                <AdminInputNote component=\"p\" name=\"mail\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"email\"\n                  name=\"zoomMail\"\n                  placeholder=\"Електронна пошта (Zoom)\"\n                />\n                <AdminInputNote component=\"p\" name=\"zoomMail\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"password\" placeholder=\"Пароль\" />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"crmId\"\n                  placeholder=\"ID ліда в CRM\"\n                />\n                <AdminInputNote component=\"p\" name=\"crmId\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"contactId\"\n                  placeholder=\"ID контакту в CRM\"\n                />\n                <AdminInputNote component=\"p\" name=\"contactId\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"pupilId\"\n                  placeholder=\"ID учня на платформі\"\n                />\n                <AdminInputNote component=\"p\" name=\"pupilId\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"marathonNumber\"\n                  placeholder=\"№ марафону на платформі\"\n                />\n                <AdminInputNote component=\"p\" name=\"marathonNumber\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"age\" placeholder=\"Вік\" />\n                <AdminInputNote component=\"p\" name=\"age\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"lang\" placeholder=\"Мова\" />\n                <AdminInputNote component=\"p\" name=\"lang\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"text\" name=\"course\" placeholder=\"Потік\" />\n                <AdminInputNote component=\"p\" name=\"course\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"package\"\n                  placeholder=\"Пакет послуг\"\n                />\n                <AdminInputNote component=\"p\" name=\"package\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"knowledge\"\n                  placeholder=\"Рівень знань\"\n                />\n                <AdminInputNote component=\"p\" name=\"knowledge\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"text\"\n                  name=\"manager\"\n                  placeholder=\"Прізвище відповідального менеджера\"\n                />\n                <AdminInputNote component=\"p\" name=\"manager\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Додати юзера</AdminFormBtn>\n            </UsersForm>\n          </Formik>\n        )}\n        {isUserAdmin && users && (\n          <UserDBTable>\n            <UserDBCaption>Список юзерів з доступом до уроків</UserDBCaption>\n            <thead>\n              <UserDBRow>\n                <UserHeadCell>CRM&nbsp;Лід Контакт</UserHeadCell>\n                <UserHeadCell>Ім'я</UserHeadCell>\n                <UserHeadCell>Пошта (логін)</UserHeadCell>\n                <UserHeadCell>Zoom-пошта</UserHeadCell>\n                <UserHeadCell>Пароль</UserHeadCell>\n                <UserHeadCell>ID на платформі</UserHeadCell>\n                <UserHeadCell>Номер марафону</UserHeadCell>\n                <UserHeadCell>Юзера створено</UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>\n                    Відвідини\n                    <FilterButton\n                      onClick={toggleDaysSinceLastVisitPicker}\n                    ></FilterButton>\n                    {isDaysPickerOpen && (\n                      <FilterPicker>\n                        {DAYS_SET.map((days, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByDays(days);\n                              setDaysAfterLastLogin(days);\n                              toggleDaysSinceLastVisitPicker();\n                            }}\n                          >\n                            {days === undefined ? '—' : days}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByDays('');\n                            setDaysAfterLastLogin(7);\n                            toggleDaysSinceLastVisitPicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                    {daysAfterLastLogin}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>Відвідини з часом</Filterable>\n                </UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>\n                    Мова\n                    <FilterButton onClick={toggleLangPicker}></FilterButton>\n                    {isLangPickerOpen && (\n                      <FilterPicker>\n                        {langs.map((lang, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByLang(lang);\n                              toggleLangPicker();\n                            }}\n                          >\n                            {lang === undefined ? '—' : lang}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByLang('');\n                            toggleLangPicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>\n                    Потік\n                    <FilterButton onClick={toggleCoursePicker}></FilterButton>\n                    {isCoursePickerOpen && (\n                      <FilterPicker>\n                        {courses.map((course, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByCourse(course);\n                              toggleCoursePicker();\n                            }}\n                          >\n                            {course === undefined ? '—' : course}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByCourse('');\n                            toggleCoursePicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>\n                  <Filterable>\n                    Знання\n                    <FilterButton onClick={toggleLevelPicker}></FilterButton>\n                    {isLevelPickerOpen && (\n                      <FilterPicker>\n                        {levels.map((level, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByLevel(level);\n                              toggleLevelPicker();\n                            }}\n                          >\n                            {level === undefined ? '—' : level}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByLevel('');\n                            toggleLevelPicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>Пакет послуг</UserHeadCell>\n                <UserHeadCell className=\"filterable\">\n                  <Filterable>\n                    Менеджер\n                    <FilterButton onClick={toggleManagerPicker}></FilterButton>\n                    {isManagerPickerOpen && (\n                      <FilterPicker>\n                        {managers.map((manager, i) => (\n                          <FilterPickerButton\n                            key={i}\n                            onClick={() => {\n                              filterByManager(manager);\n                              toggleManagerPicker();\n                            }}\n                          >\n                            {manager === undefined ? '—' : manager}\n                          </FilterPickerButton>\n                        ))}\n                        <FilterPickerButton\n                          onClick={() => {\n                            filterByManager('');\n                            toggleManagerPicker();\n                          }}\n                        >\n                          ВСІ\n                        </FilterPickerButton>\n                      </FilterPicker>\n                    )}\n                  </Filterable>\n                </UserHeadCell>\n                <UserHeadCell>Edit</UserHeadCell>\n                <UserHeadCell>Delete</UserHeadCell>\n                <UserHeadCell>Ban</UserHeadCell>\n              </UserDBRow>\n            </thead>\n            <tbody>\n              {users.map(user => (\n                <UserDBRow key={user._id}>\n                  <UserCell>\n                    <a\n                      href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {user.crmId}\n                    </a>{' '}\n                    <a\n                      href={`https://apeducation.kommo.com/contacts/detail/${user.contactId}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {user.contactId}\n                    </a>\n                  </UserCell>\n                  <UserCell>{user.name}</UserCell>\n                  <UserCell>{user.mail}</UserCell>\n                  <UserCell>{user.zoomMail}</UserCell>\n                  <UserCell>{user.password}</UserCell>\n                  <UserCell>{user.pupilId}</UserCell>\n                  <UserCell>{user.marathonNumber}</UserCell>\n                  <UserCell>\n                    {new Date(user.createdAt).toLocaleDateString('uk-UA')}\n                  </UserCell>\n                  <UserCell\n                    className={\n                      Math.floor(\n                        (Date.now() -\n                          changeDateFormat(\n                            user.visited[user.visited.length - 1]\n                          )) /\n                          86400000\n                      ) > daysAfterLastLogin\n                        ? 'attention'\n                        : ''\n                    }\n                  >\n                    {user.visited[user.visited.length - 1]}\n                  </UserCell>\n                  <UserCell>\n                    {!user.visitedTime[user.visitedTime.length - 1]\n                      ? ''\n                      : user.visitedTime[user.visitedTime.length - 1].match(\n                          '^202'\n                        )\n                      ? new Date(\n                          user.visitedTime[user.visitedTime.length - 1]\n                        ).toLocaleString('uk-UA')\n                      : new Date(\n                          changeDateFormat(\n                            user.visitedTime[user.visitedTime.length - 1]\n                          )\n                        ).toLocaleString('uk-UA', { timeZone: '+06:00' })}\n                  </UserCell>\n                  <UserCell>{user.lang}</UserCell>\n                  <UserCell>{user.course}</UserCell>\n                  <UserCell\n                    className={user.knowledge?.includes('а') && 'error'}\n                  >\n                    {user.knowledge}\n                  </UserCell>\n                  <UserCell>{user.package}</UserCell>\n                  <UserCell className=\"last-name\">{user.manager}</UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserEditButton onClick={() => handleEdit(user._id)}>\n                        Edit\n                      </UserEditButton>\n                    )}\n                  </UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserDeleteButton onClick={() => handleDelete(user._id)}>\n                        Del\n                      </UserDeleteButton>\n                    )}\n                  </UserCell>\n                  <UserCell>\n                    {user.name === 'Dev Acc' ? null : (\n                      <UserBanButton\n                        className={user.isBanned ? 'banned' : 'not_banned'}\n                        onClick={() => handleBan(user._id, user.isBanned)}\n                      >\n                        {user.isBanned ? 'Unban' : 'Ban'}\n                      </UserBanButton>\n                    )}\n                  </UserCell>\n                </UserDBRow>\n              ))}\n            </tbody>\n          </UserDBTable>\n        )}\n        {isEditFormOpen && (\n          <Backdrop onMouseDown={closeEditFormOnClick} id=\"close-on-click\">\n            <UserEditForm\n              userToEdit={userToEdit}\n              updateUser={updateUser}\n              closeEditForm={closeEditForm}\n            />\n          </Backdrop>\n        )}\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n\nexport default UserAdminPanel;\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  UsersEditForm,\n} from '../UserAdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nexport const UserEditForm = ({ userToEdit, updateUser, closeEditForm }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const initialUserValues = {\n    crmId: userToEdit.crmId || '',\n    contactId: userToEdit.contactId || '',\n    name: userToEdit.name,\n    mail: userToEdit.mail,\n    zoomMail: userToEdit.zoomMail || '',\n    password: userToEdit.password,\n    pupilId: userToEdit.pupilId,\n    marathonNumber: userToEdit.marathonNumber || '',\n    adult: userToEdit.adult,\n    age: userToEdit.age,\n    lang: userToEdit.lang,\n    course: userToEdit.course,\n    package: userToEdit.package,\n    knowledge: userToEdit.knowledge,\n    manager: userToEdit.manager,\n  };\n\n  const usersSchema = yup.object().shape({\n    name: yup\n      .string()\n      .required(\n        \"Ім'я - обов'язкове поле, якщо імені з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    mail: yup.string().required(\"Пошта - обов'язкове поле!\"),\n    zoomMail: yup.string(),\n    password: yup.string().required(\"Пароль - обов'язкове поле!\"),\n    crmId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    contactId: yup.string().matches(/^[0-9]*$/, 'Лише цифри'),\n    pupilId: yup\n      .string()\n      .min(6, 'Не менше 6 цифр')\n      .max(7, 'Не більше 7 цифр')\n      .matches(/^\\d{1,7}$/, 'Лише цифри')\n      .required(\"Обов'язкове поле, дивитись на платформі\"),\n    marathonNumber: yup\n      .string()\n      .max(1, 'Не більше 1 цифри')\n      .matches(/[12]/, 'Лише цифри 1 або 2'),\n    age: yup\n      .string()\n      .required(\n        \"Вік - обов'язкове поле, якщо віку з якоїсь причини ми не знаємо, введіть N/A\"\n      ),\n    lang: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    course: yup\n      .string()\n      .required(\n        \"Обов'язкове поле, для тестових юзерів або нерозподілених користувачів введіть 0\"\n      ),\n    package: yup.string().optional(),\n    // .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    knowledge: yup\n      .string()\n      .optional()\n      .matches(/^[A-Za-z0-9/]+$/, 'Лише латинські літери'),\n    manager: yup\n      .string()\n      .required(\"Менеджер - обов'язкове поле, введіть прізвище\"),\n  });\n\n  const handleUserSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.name = values.name.trim().trimStart();\n    values.mail = values.mail.toLowerCase().trim().trimStart();\n    values.zoomMail = values.zoomMail.toLowerCase().trim().trimStart();\n    values.password = values.password.trim().trimStart();\n    values.pupilId = values.pupilId.trim().trimStart();\n    values.marathonNumber = values.marathonNumber.trim().trimStart();\n    values.crmId =\n      values.crmId && typeof values.crmId !== 'number'\n        ? +values.crmId.trim().trimStart()\n        : typeof values.crmId === 'number'\n        ? values.crmId\n        : undefined;\n    values.contactId =\n      values.contactId && typeof values.contactId !== 'number'\n        ? +values.contactId.trim().trimStart()\n        : typeof values.contactId === 'number'\n        ? values.contactId\n        : undefined;\n    values.age = values.age.trim().trimStart();\n    values.adult = +values.age > 18 ? true : false;\n    values.lang = values.lang.toLowerCase().trim().trimStart();\n    values.package =\n      values.package === undefined\n        ? ''\n        : values.package.toLowerCase().trim().trimStart();\n    values.course =\n      values.course === undefined\n        ? ''\n        : values.course.toLowerCase().trim().trimStart();\n    values.knowledge =\n      values.knowledge === undefined\n        ? ''\n        : values.knowledge.toLowerCase().trim().trimStart();\n    values.manager = values.manager.toLowerCase().trim().trimStart();\n    try {\n      const response = await axios.put(`/users/${userToEdit._id}`, values);\n      console.log(response);\n      resetForm();\n      alert('Юзера відредаговано');\n      updateUser(userToEdit._id, values);\n      closeEditForm();\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialUserValues}\n        onSubmit={handleUserSubmit}\n        validationSchema={usersSchema}\n      >\n        <UsersEditForm>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Прізвище та ім'я\"\n            />\n            <AdminInputNote component=\"p\" name=\"name\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"email\"\n              name=\"mail\"\n              placeholder=\"Електронна пошта (логін)\"\n            />\n            <AdminInputNote component=\"p\" name=\"mail\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"email\" name=\"zoomMail\" placeholder=\"Zoom-пошта\" />\n            <AdminInputNote component=\"p\" name=\"zoomMail\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"password\" placeholder=\"Пароль\" />\n            <AdminInputNote component=\"p\" name=\"password\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"crmId\" placeholder=\"ID ліда в CRM\" />\n            <AdminInputNote component=\"p\" name=\"crmId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"contactId\"\n              placeholder=\"ID контакту в CRM\"\n            />\n            <AdminInputNote component=\"p\" name=\"contactId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"pupilId\"\n              placeholder=\"ID учня на платформі\"\n            />\n            <AdminInputNote component=\"p\" name=\"pupilId\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"marathonNumber\"\n              placeholder=\"№ марафону на платформі\"\n            />\n            <AdminInputNote component=\"p\" name=\"marathonNumber\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"age\" placeholder=\"Вік\" />\n            <AdminInputNote component=\"p\" name=\"age\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"lang\" placeholder=\"Мова\" />\n            <AdminInputNote component=\"p\" name=\"lang\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"course\" placeholder=\"Потік\" />\n            <AdminInputNote component=\"p\" name=\"course\" />\n          </Label>\n          <Label>\n            <AdminInput type=\"text\" name=\"package\" placeholder=\"Пакет послуг\" />\n            <AdminInputNote component=\"p\" name=\"package\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"knowledge\"\n              placeholder=\"Рівень знань\"\n            />\n            <AdminInputNote component=\"p\" name=\"knowledge\" />\n          </Label>\n          <Label>\n            <AdminInput\n              type=\"text\"\n              name=\"manager\"\n              placeholder=\"Прізвище відповідального менеджера\"\n            />\n            <AdminInputNote component=\"p\" name=\"manager\" />\n          </Label>\n          <AdminFormBtn type=\"submit\">Підтвердити зміни</AdminFormBtn>\n        </UsersEditForm>\n      </Formik>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n"],"names":["axios","setAuthToken","token","concat","DAYS_SET","UserAdminPanel","isLoading","setIsLoading","useState","isUserAdmin","setIsUserAdmin","users","setUsers","managers","setManagers","levels","setLevels","courses","setCourses","langs","setLangs","isEditFormOpen","setIsEditFormOpen","userToEdit","setUserToEdit","daysAfterLastLogin","setDaysAfterLastLogin","isManagerPickerOpen","setIsManagerPickerOpen","isLangPickerOpen","setIsLangPickerOpen","isDaysPickerOpen","setIsDaysPickerOpen","isLevelPickerOpen","setIsLevelPickerOpen","isCoursePickerOpen","setIsCoursePickerOpen","persistentUsers","useRef","sortedUsers","filteredUsers","useEffect","document","title","async","console","log","localStorage","getItem","res","data","newToken","isAdmin","error","refreshToken","response","reverse","current","map","user","manager","filter","i","arr","indexOf","sort","knowledge","level","course","lang","getUsers","onEscapeClose","event","code","closeEditForm","window","addEventListener","removeEventListener","loginSchema","yup","shape","login","required","password","changeDateFormat","dateString","dateArray","split","length","Date","parse","join","filterByManager","filterByCourse","filterByLang","filterByDays","visited","now","a","b","filterByLevel","usersSchema","name","mail","zoomMail","crmId","matches","contactId","pupilId","min","max","marathonNumber","age","package","optional","e","toggleDaysSinceLastVisitPicker","isOpen","toggleLevelPicker","toggleCoursePicker","toggleLangPicker","toggleManagerPicker","_jsx","_Fragment","children","_jsxs","AdminPanelSection","Formik","initialValues","onSubmit","values","_ref","resetForm","setItem","validationSchema","LoginForm","Label","AdminInput","type","placeholder","AdminInputNote","component","AdminFormBtn","adult","_ref2","trim","trimStart","toLowerCase","undefined","alert","UsersForm","UserDBTable","UserDBCaption","UserDBRow","UserHeadCell","Filterable","FilterButton","onClick","FilterPicker","days","FilterPickerButton","className","_user$knowledge","UserCell","href","target","rel","createdAt","toLocaleDateString","Math","floor","visitedTime","match","toLocaleString","timeZone","includes","UserEditButton","find","_id","id","handleEdit","UserDeleteButton","confirm","handleDelete","UserBanButton","isBanned","handleBan","Backdrop","onMouseDown","UserEditForm","updateUser","userToUpdate","findIndex","Loader","initialUserValues","UsersEditForm"],"sourceRoot":""}