{"version":3,"file":"static/js/Pedagogium Attendance Panel page.79a84dbf.chunk.js","mappings":"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","sources":["pages/Streams/UserAdminPanel/UniUserAttendancePedagogium.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  AdminPanelSection,\n  LoginForm,\n  UserCell,\n  UserDBCaption,\n  UserDBRow,\n  UserDBTable,\n  UserHeadCell,\n} from './UserAdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst UniUserAttendancePedagogium = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\n  const [users, setUsers] = useState([]);\n  // eslint-disable-next-line\n  const [daysAfterLastLogin, setDaysAfterLastLogin] = useState(7);\n\n  useEffect(() => {\n    document.title = 'Polish University Users Admin Panel | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        if (localStorage.getItem('isAdmin')) {\n          const res = await axios.post('admins/refresh/users/', {});\n          setAuthToken(res.data.newToken);\n          setIsUserAdmin(isAdmin => (isAdmin = true));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n\n    const getUsers = async () => {\n      try {\n        if (isUserAdmin) {\n          const response = await axios.get('/uniusers/admin/');\n          setUsers(users => (users = [...response.data.reverse()]));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getUsers();\n\n    return () => {};\n  }, [isUserAdmin]);\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2 ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/')) : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.post('/admins/login/users', values);\n      setAuthToken(response.data.token);\n      setIsUserAdmin(isAdmin => (isAdmin = true));\n      localStorage.setItem('isAdmin', true);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        {!isUserAdmin && (\n          <Formik initialValues={initialLoginValues} onSubmit={handleLoginSubmit} validationSchema={loginSchema}>\n            <LoginForm>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Login\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput type=\"password\" name=\"password\" placeholder=\"Password\" />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Залогінитись</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        )}\n\n        {isUserAdmin && users && (\n          <UserDBTable>\n            <UserDBCaption>Список юзерів з доступом до уроків</UserDBCaption>\n            <thead>\n              <UserDBRow>\n                <UserHeadCell>CRM&nbsp;Лід Контакт</UserHeadCell>\n                <UserHeadCell>Ім'я</UserHeadCell>\n                <UserHeadCell>Пошта (логін)</UserHeadCell>\n                <UserHeadCell>Пароль</UserHeadCell>\n                <UserHeadCell>Університет</UserHeadCell>\n                <UserHeadCell>ID на платформі</UserHeadCell>\n                <UserHeadCell>Відвідини</UserHeadCell>\n                <UserHeadCell>Відвідини з часом</UserHeadCell>\n              </UserDBRow>\n            </thead>\n            <tbody>\n              {users.map(user => (\n                <UserDBRow key={user._id}>\n                  <UserCell>\n                    <a href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`} target=\"_blank\" rel=\"noreferrer\">\n                      {user.crmId}\n                    </a>{' '}\n                    <a href={`https://apeducation.kommo.com/contacts/detail/${user.contactId}`} target=\"_blank\" rel=\"noreferrer\">\n                      {user.contactId}\n                    </a>\n                  </UserCell>\n                  <UserCell>{user.name}</UserCell>\n                  <UserCell>{user.mail}</UserCell>\n                  <UserCell>{user.password}</UserCell>\n                  <UserCell className=\"last-name\">{user.university}</UserCell>\n                  <UserCell>{user.pupilId}</UserCell>\n                  <UserCell\n                    className={\n                      Math.floor((Date.now() - changeDateFormat(user.visited[user.visited.length - 1])) / 86400000) > daysAfterLastLogin\n                        ? 'attention'\n                        : ''\n                    }\n                  >\n                    {user.visited[user.visited.length - 1]}\n                  </UserCell>\n                  <UserCell>\n                    {!user.visitedTime[user.visitedTime.length - 1]\n                      ? ''\n                      : user.visitedTime[user.visitedTime.length - 1].match('^202')\n                      ? new Date(user.visitedTime[user.visitedTime.length - 1]).toLocaleString('uk-UA')\n                      : new Date(changeDateFormat(user.visitedTime[user.visitedTime.length - 1])).toLocaleString('uk-UA', { timeZone: '+06:00' })}\n                  </UserCell>\n                </UserDBRow>\n              ))}\n            </tbody>\n          </UserDBTable>\n        )}\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n\nexport default UniUserAttendancePedagogium;\n"],"names":["axios","setAuthToken","token","concat","UniUserAttendancePedagogium","isLoading","setIsLoading","useState","isUserAdmin","setIsUserAdmin","users","setUsers","daysAfterLastLogin","setDaysAfterLastLogin","useEffect","document","title","async","console","log","localStorage","getItem","res","data","newToken","isAdmin","error","refreshToken","response","reverse","getUsers","loginSchema","yup","shape","login","required","password","changeDateFormat","dateString","dateArray","split","length","Date","parse","join","_jsx","_Fragment","children","_jsxs","AdminPanelSection","Formik","initialValues","onSubmit","values","_ref","resetForm","setItem","validationSchema","LoginForm","Label","AdminInput","type","name","placeholder","AdminInputNote","component","AdminFormBtn","UserDBTable","UserDBCaption","UserDBRow","UserHeadCell","map","user","UserCell","href","crmId","target","rel","contactId","mail","className","university","pupilId","Math","floor","now","visited","visitedTime","match","toLocaleString","timeZone","_id","Loader"],"sourceRoot":""}