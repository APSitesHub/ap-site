{"version":3,"file":"static/js/Streams A1 page.1556c2b5.chunk.js","mappings":"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","sources":["pages/Streams/A1/StreamA1.jsx"],"sourcesContent":["import useSize from '@react-hook/size';\nimport axios from 'axios';\nimport { Kahoots } from 'components/Stream/Kahoots/Kahoots';\nimport { Support } from 'components/Stream/Support/Support';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { useOutletContext } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { Chat } from 'utils/Chat/Chat';\nimport {\n  BoxHideLeftSwitch,\n  BoxHideRightSwitch,\n  BoxHideSwitch,\n  ButtonBox,\n  ChatBox,\n  ChatBtn,\n  ChatLogo,\n  KahootBtn,\n  KahootLogo,\n  MoldingNoClick,\n  MoldingNoClickSecondary,\n  StreamPlaceHolder,\n  StreamPlaceHolderText,\n  StreamSection,\n  SupportArrow,\n  SupportBtn,\n  SupportLogo,\n  SupportMarkerLeft,\n  SupportMarkerRight,\n  SupportPointer,\n  VideoBox,\n} from '../../../components/Stream/Stream.styled';\n\nconst StreamA1 = () => {\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isKahootOpen, setIsKahootOpen] = useState(false);\n  const [isSupportOpen, setIsSupportOpen] = useState(false);\n  const [isButtonBoxOpen, setIsButtonBoxOpen] = useState(true);\n  const [isOpenedLast, setIsOpenedLast] = useState('');\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [animatedID, setAnimationID] = useState('');\n  const [links, isLoading, currentUser, room] = useOutletContext();\n  const chatEl = useRef();\n  // eslint-disable-next-line\n  const [chatWidth, chatHeight] = useSize(chatEl);\n  const [width, height] = useSize(document.body);\n  const [isBanned, setIsBanned] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const toggleKahoot = e => {\n    setIsKahootOpen(isKahootOpen => !isKahootOpen);\n    isChatOpen || isSupportOpen\n      ? setIsOpenedLast(isOpenedLast => 'kahoot')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleChat = () => {\n    setIsChatOpen(isChatOpen => !isChatOpen);\n    isKahootOpen || isSupportOpen\n      ? setIsOpenedLast(isOpenedLast => 'chat')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleSupport = () => {\n    setIsSupportOpen(isSupportOpen => !isSupportOpen);\n    setAnimationID('');\n    isKahootOpen || isChatOpen\n      ? setIsOpenedLast(isOpenedLast => 'support')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleButtonBox = () => {\n    setIsButtonBoxOpen(isOpen => !isOpen);\n  };\n  const handleSupportClick = data_id => {\n    setAnimationID(id => (id = data_id));\n    if (!isAnimated) {\n      setIsAnimated(isAnimated => !isAnimated);\n    }\n  };\n\n  const videoBoxWidth =\n    chatWidth === 0 && width > height ? width - 300 : width - chatWidth;\n\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    document.title = 'A1 English | AP Education';\n\n    socketRef.current = io('https://ap-chat-server.onrender.com/');\n    // socketRef.current = io('http://localhost:4000/');\n\n    socketRef.current.on('connected', (connected, handshake) => {\n      console.log(connected);\n      console.log(handshake.time);\n      socketRef.current.emit('connected:user', socketRef.current.id, room);\n    });\n\n    socketRef.current.on('connected:user', (id, lvl) => {\n      console.log(id);\n      console.log(lvl);\n    });\n\n    const getMessages = async () => {\n      console.log('get');\n      try {\n        const dbMessages = await axios.get(\n          `https://ap-chat-server.onrender.com/messages/room`,\n          {\n            params: {\n              room,\n            },\n          }\n        );\n        const todayMessages = dbMessages.data.filter(\n          message =>\n            new Date(message.createdAt).getDate() === new Date().getDate()\n        );\n        setMessages(messages => (messages = todayMessages));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMessages();\n\n    socketRef.current.on('message', async data => {\n      setMessages(messages => (messages = [...messages, data]));\n      const updateMessages = async () => {\n        try {\n          await axios.post(\n            'https://ap-chat-server.onrender.com/messages',\n            data\n          );\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      await updateMessages();\n    });\n\n    socketRef.current.on('message:get', async data => {\n      setMessages(messages => (messages = [...messages, data]));\n    });\n\n    socketRef.current.on('message:pinned', async (id, data) => {\n      console.log(id);\n      console.log(data);\n      setMessages(messages => {\n        messages[messages.findIndex(message => message.id === id)].isPinned =\n          data.isPinned;\n        return [...messages];\n      });\n    });\n\n    socketRef.current.on('message:delete', async id => {\n      console.log('delete fired');\n      setMessages(\n        messages =>\n          (messages = [...messages.filter(message => message.id !== id)])\n      );\n      const deleteMessage = async () => {\n        try {\n          await axios.delete(\n            `https://ap-chat-server.onrender.com/messages/${id}`\n          );\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      await deleteMessage();\n    });\n\n    socketRef.current.on('message:deleted', async id => {\n      console.log(id);\n      setMessages(\n        messages =>\n          (messages = [...messages.filter(message => message.id !== id)])\n      );\n    });\n\n    socketRef.current.on('user:banned', async (userID, userIP) => {\n      console.log(userID);\n      console.log(userIP);\n      if (userID === currentUser.userID) {\n        setIsBanned(true);\n      }\n    });\n\n    return () => {\n      console.log('disconnecting');\n      socketRef.current.emit(\n        'connected:disconnect',\n        socketRef.current.id,\n        room\n      );\n      socketRef.current.off('connected');\n      socketRef.current.off('message');\n      socketRef.current.off('user');\n      socketRef.current.disconnect();\n    };\n  }, [currentUser, room]);\n\n  return (\n    <>\n      {(links.a1 === undefined || links.a1[0] < 10) && !isLoading ? (\n        <StreamPlaceHolder>\n          <StreamPlaceHolderText>\n            Привіт! <br />\n            Наразі урок на цій сторінці не проводиться! Перевірте, чи ви\n            перейшли за правильним посиланням або спробуйте пізніше.\n          </StreamPlaceHolderText>\n        </StreamPlaceHolder>\n      ) : currentUser.isBanned || isBanned ? (\n        <StreamPlaceHolder>\n          <StreamPlaceHolderText>\n            Хмммм, схоже що ви були нечемні! <br />\n            Вас було заблоковано за порушення правил нашої платформи. Зв'яжіться\n            зі своїм менеджером сервісу!\n          </StreamPlaceHolderText>\n        </StreamPlaceHolder>\n      ) : (\n        <>\n          <StreamSection\n            style={{\n              width:\n                isChatOpen && width > height ? `${videoBoxWidth}px` : '100%',\n            }}\n          >\n            <VideoBox>\n              <MoldingNoClick />\n              <MoldingNoClickSecondary />\n              <SupportMarkerLeft\n                className={\n                  (isAnimated && animatedID === 'sound') ||\n                  (isAnimated && animatedID === 'live')\n                    ? 'animated'\n                    : ''\n                }\n              >\n                <SupportArrow\n                  className={\n                    (isAnimated && animatedID === 'sound') ||\n                    (isAnimated && animatedID === 'live')\n                      ? 'animated'\n                      : ''\n                  }\n                />\n              </SupportMarkerLeft>\n              <SupportMarkerRight\n                className={\n                  isAnimated && animatedID === 'quality' ? 'animated' : ''\n                }\n              >\n                <SupportPointer\n                  className={\n                    isAnimated && animatedID === 'quality' ? 'animated' : ''\n                  }\n                />\n              </SupportMarkerRight>\n              <ReactPlayer\n                playing={true}\n                muted={true}\n                controls={true}\n                config={{\n                  youtube: {\n                    playerVars: { rel: 0 },\n                  },\n                }}\n                style={{\n                  display: 'block',\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                }}\n                width=\"100%\"\n                height=\"100vh\"\n                url={links.a1}\n              />\n            </VideoBox>\n\n            <ButtonBox className={!isButtonBoxOpen ? 'hidden' : ''}>\n              <KahootBtn\n                onClick={toggleKahoot}\n                className={\n                  isAnimated && animatedID === 'kahoot_open' ? 'animated' : ''\n                }\n              >\n                <KahootLogo />\n              </KahootBtn>\n\n              <ChatBtn\n                onClick={toggleChat}\n                className={\n                  isAnimated && animatedID === 'chat_open' ? 'animated' : ''\n                }\n              >\n                <ChatLogo />\n              </ChatBtn>\n\n              <SupportBtn onClick={toggleSupport}>\n                <SupportLogo />\n              </SupportBtn>\n            </ButtonBox>\n\n            <BoxHideSwitch id=\"no-transform\" onClick={toggleButtonBox}>\n              {isButtonBoxOpen ? <BoxHideLeftSwitch /> : <BoxHideRightSwitch />}\n            </BoxHideSwitch>\n            {console.log(socketRef.current)}\n            {height > width && (\n              <ChatBox\n                ref={chatEl}\n                className={isChatOpen ? 'shown' : 'hidden'}\n                style={\n                  isOpenedLast === 'chat' ? { zIndex: '2' } : { zIndex: '1' }\n                }\n              >\n                <Chat\n                  socket={socketRef.current}\n                  messages={messages}\n                  isChatOpen={isChatOpen}\n                  currentUser={currentUser}\n                />\n              </ChatBox>\n            )}\n\n            <Support\n              sectionWidth={width}\n              isSupportOpen={isSupportOpen}\n              isOpenedLast={isOpenedLast}\n              handleSupport={handleSupportClick}\n              openKahoot={toggleKahoot}\n              isKahootOpen={isKahootOpen}\n            />\n\n            <Kahoots\n              sectionWidth={width}\n              sectionHeight={height}\n              isKahootOpen={isKahootOpen}\n              isChatOpen={isChatOpen}\n              isOpenedLast={isOpenedLast}\n            />\n          </StreamSection>\n          {width >= height && (\n            <ChatBox\n              ref={chatEl}\n              className={isChatOpen ? 'shown' : 'hidden'}\n              style={\n                isOpenedLast === 'chat' ? { zIndex: '2' } : { zIndex: '1' }\n              }\n            >\n              <Chat\n                socket={socketRef.current}\n                messages={messages}\n                isChatOpen={isChatOpen}\n                currentUser={currentUser}\n              />\n            </ChatBox>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StreamA1;\n"],"names":["StreamA1","isChatOpen","setIsChatOpen","useState","isKahootOpen","setIsKahootOpen","isSupportOpen","setIsSupportOpen","isButtonBoxOpen","setIsButtonBoxOpen","isOpenedLast","setIsOpenedLast","isAnimated","setIsAnimated","animatedID","setAnimationID","links","isLoading","currentUser","room","useOutletContext","chatEl","useRef","chatWidth","chatHeight","useSize","width","height","document","body","isBanned","setIsBanned","messages","setMessages","toggleKahoot","e","videoBoxWidth","socketRef","useEffect","title","current","io","on","connected","handshake","console","log","time","emit","id","lvl","async","todayMessages","axios","params","data","filter","message","Date","createdAt","getDate","error","getMessages","updateMessages","findIndex","isPinned","concat","deleteMessage","userID","userIP","off","disconnect","_jsx","_Fragment","children","undefined","a1","StreamPlaceHolder","_jsxs","StreamPlaceHolderText","StreamSection","style","VideoBox","MoldingNoClick","MoldingNoClickSecondary","SupportMarkerLeft","className","SupportArrow","SupportMarkerRight","SupportPointer","ReactPlayer","playing","muted","controls","config","youtube","playerVars","rel","display","position","top","left","url","ButtonBox","KahootBtn","onClick","KahootLogo","ChatBtn","toggleChat","ChatLogo","SupportBtn","toggleSupport","SupportLogo","BoxHideSwitch","toggleButtonBox","isOpen","BoxHideLeftSwitch","BoxHideRightSwitch","ChatBox","ref","zIndex","Chat","socket","Support","sectionWidth","handleSupport","data_id","openKahoot","Kahoots","sectionHeight"],"sourceRoot":""}