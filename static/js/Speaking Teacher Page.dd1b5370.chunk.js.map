{"version":3,"file":"static/js/Speaking Teacher Page.dd1b5370.chunk.js","mappings":"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","sources":["pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled.js","pages/TeacherPage/TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm.jsx","pages/TeacherPage/TeacherPageSpeaking.jsx"],"sourcesContent":["import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 35px;\n`;\n\nexport const LinksForm = styled(Form)`\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n`;\n\nexport const AdminInput = styled(Input)`\n  border: 2px solid var(--main-color);\n`;\n\nexport const AdminTextArea = styled(Input)`\n  border-radius: 0;\n  width: 35vw;\n  height: 75vh;\n  scrollbar-width: thin;\n  background-color: transparent;\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  position: static;\n  color: var(--main-color);\n  font-size: 24px;\n  font-weight: 700;\n  bottom: -1.1em;\n`;\n\nexport const ScheduleList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 14px;\n\n  text-transform: capitalize;\n  font-weight: 600;\n  margin-left: auto;\n`;\n\nexport const ScheduleHeading = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  margin-bottom: 12px;\n`;\n\nexport const ScheduleItem = styled.li`\n  width: 100%;\n  flex-basis: 40%;\n  flex-grow: 0;\n`;\n\nexport const ScheduleInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ScheduleData = styled.li`\n  font-size: 14px;\n  font-weight: 400;\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  padding-bottom: 5px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ScheduleDataDayText = styled.span`\n  min-width: 24px;\n`;\n\nexport const ScheduleDataTypeText = styled.span`\n  min-width: 120px;\n  text-align: center;\n`;\n\nexport const ScheduleDataTimeText = styled.span`\n  min-width: 100px;\n  text-align: center;\n`;\n\nexport const ScheduleParagraph = styled.p`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n  font-size: 14px;\n  border: 2px solid var(--main-color);\n\n  line-height: 1;\n\n  @media screen and (min-width: 768px) {\n    font-size: 19px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-burnt-color);\n    outline: transparent;\n  }\n`;\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport {\n  AdminFormBtn,\n  AdminInputNote,\n} from 'pages/Streams/AdminPanel/AdminPanel.styled';\nimport { FormSelect } from 'pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled';\nimport { UsersEditForm } from 'pages/Streams/UserAdminPanel/UserAdminPanel.styled';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport { EditFormHeader, StudentTextArea } from '../TeacherPage.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nexport const TeacherPageSpeakingEditForm = ({\n  currentUser,\n  studentToEdit,\n  updateFeedback,\n  closeCourseLevelEditForm,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [temperamentValue, setTemperamentValue] = useState(\n    studentToEdit.temperament || ''\n  );\n  const [successRateValue, setSuccessRateValue] = useState(\n    studentToEdit.successRate || ''\n  );\n\n  const successRateOptions = [\n    {\n      label: 'Сильний',\n      value: 'good',\n    },\n    {\n      label: 'Середній',\n      value: 'mid',\n    },\n    {\n      label: 'Слабкий',\n      value: 'bad',\n    },\n  ];\n\n  const temperamentOptions = [\n    {\n      label: 'Екстраверт',\n      value: 'extro',\n    },\n    {\n      label: 'Інтроверт',\n      value: 'intro',\n    },\n  ];\n\n  const initialEditStudentValues = {\n    temperament: studentToEdit.temperament || '',\n    successRate: studentToEdit.successRate || '',\n    feedback: '',\n  };\n\n  const studentSchema = yup.object().shape({\n    temperament: yup.string(),\n    successRate: yup.string(),\n    feedback: yup.string(),\n  });\n\n  const handleEditStudentSubmit = async values => {\n    values.temperament = temperamentValue;\n    values.successRate = successRateValue;\n    values.feedback = `${currentUser.name},\n${new Date().toLocaleString('uk-UA', { timeZone: '+03:00' })}:\n${values.feedback}`;\n    const scValues = { ...values, crmId: studentToEdit.crmId };\n\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.patch(\n        `/speakingusers/${studentToEdit.userId}`,\n        scValues\n      );\n      const userResponse = await axios.patch(\n        `/users/sc/${studentToEdit.userId}`,\n        values\n      );\n      console.log(response);\n      console.log(userResponse);\n      closeCourseLevelEditForm();\n      alert('Відредаговано');\n      updateFeedback(studentToEdit._id, values);\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialEditStudentValues}\n        onSubmit={handleEditStudentSubmit}\n        validationSchema={studentSchema}\n      >\n        <UsersEditForm>\n          <EditFormHeader>\n            {studentToEdit.name +\n              (studentToEdit.age ? ', ' + studentToEdit.age + 'р.' : '')}\n          </EditFormHeader>\n          <FormSelect\n            options={successRateOptions}\n            styles={{\n              control: (baseStyles, state) => ({\n                ...baseStyles,\n                border: 'none',\n                borderRadius: '0px',\n              }),\n            }}\n            placeholder=\"Успішність\"\n            name=\"successRate\"\n            defaultValue={successRateOptions.find(\n              option => option.value === studentToEdit.successRate\n            )}\n            onChange={successRate => {\n              setSuccessRateValue(successRate.value);\n            }}\n          />\n          <FormSelect\n            options={temperamentOptions}\n            styles={{\n              control: (baseStyles, state) => ({\n                ...baseStyles,\n                border: 'none',\n                borderRadius: '0px',\n              }),\n            }}\n            placeholder=\"Темперамент\"\n            name=\"temperament\"\n            defaultValue={temperamentOptions.find(\n              option => option.value === studentToEdit.temperament\n            )}\n            onChange={temperament => {\n              setTemperamentValue(temperament.value);\n            }}\n          />\n          <Label>\n            <StudentTextArea\n              type=\"text\"\n              name=\"feedback\"\n              component=\"textarea\"\n              placeholder=\"Фідбек\"\n            />\n            <AdminInputNote component=\"p\" name=\"feedback\" />\n          </Label>\n          <AdminFormBtn type=\"submit\">Підтвердити зміни</AdminFormBtn>\n        </UsersEditForm>\n      </Formik>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport {\n  UserCell,\n  UserCellLeft,\n  UserDBCaption,\n  UserDBRow,\n  UserEditButton,\n  UserHeadCell,\n} from 'pages/Streams/UserAdminPanel/UserAdminPanel.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  TeacherSpeakingDBSection,\n  TeacherSpeakingDBTable,\n} from './TeacherPage.styled';\nimport { TeacherPageSpeakingEditForm } from './TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm';\nimport { useOutletContext } from 'react-router-dom';\n\nconst TeacherPageSpeaking = () => {\n  const location = useLocation().pathname.split('/speakings/')[1];\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [course, setCourse] = useState('');\n  const [studentToEdit, setStudentToEdit] = useState({});\n  const [isEditStudentFormOpen, setIsEditStudentFormOpen] = useState(false);\n  const linksRegex = /\\b(?:https?|ftp):\\/\\/\\S+\\b/g;\n  const [currentUser] = useOutletContext();\n\n  const closeStudentEditForm = e => {\n    setIsEditStudentFormOpen(false);\n  };\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2\n        ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('/'))\n        : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const getLocation = location => {\n    switch (location) {\n      case 'deutsch-a0':\n        return 'deutscha0';\n      case 'deutsch-a0_2':\n        return 'deutscha0_2';\n      case 'deutsch-a1':\n        return 'deutsch';\n      case 'deutsch-a1free':\n        return 'deutschfree';\n      case 'deutsch-a2':\n        return 'deutscha2';\n      case 'deutsch-a2free':\n        return 'deutscha2free';\n      case 'deutsch-b1':\n        return 'deutschb1';\n      case 'deutsch-b2':\n        return 'deutschb2';\n      case 'polski-a0':\n        return 'polskia0';\n      case 'polski-a0_2':\n        return 'polskia0_2';\n      case 'polski-a1':\n        return 'polski';\n      case 'polski-a1free':\n        return 'polskifree';\n      case 'polski-a2':\n        return 'polskia2';\n      case 'polski-b1':\n        return 'polskib1';\n      case 'polski-b2':\n        return 'polskib2';\n      default:\n        return location;\n    }\n  };\n\n  const getLanguageFromLocation = location => {\n    if (location.includes('de') || location.includes('deutsch')) {\n      return 'de';\n    } else if (location.includes('pl') || location.includes('polski')) {\n      return 'pl';\n    } else {\n      return 'en';\n    }\n  };\n  const page = getLocation(location);\n  const lang = getLanguageFromLocation(location);\n\n  const closeEditStudentFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditStudentFormOpen(false);\n    }\n  };\n\n  const updateFeedback = (id, values) => {\n    const userToUpdate = users.find(user => user._id === id);\n    userToUpdate.successRate = values.successRate;\n    userToUpdate.temperament = values.temperament;\n    userToUpdate.feedback[0] = values.feedback;\n\n    setUsers(\n      users =>\n        (users = [...users.filter(user => user._id !== id), userToUpdate])\n    );\n  };\n\n  const handleStudentEdit = async id => {\n    setStudentToEdit(\n      studentToEdit =>\n        (studentToEdit = users.find(student => student.userId === id))\n    );\n    setIsEditStudentFormOpen(true);\n  };\n\n  useEffect(() => {\n    document.title = `Speaking Teacher ${page.toLocaleUpperCase()} | AP Education`;\n    const getSpeakingUsersRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setCourse(\n          (await axios.get('/timetable')).data.filter(\n            timetable =>\n              page.includes(timetable.level) && lang === timetable.lang\n          )[0].course\n        );\n        const usersToSet = await axios.get('/speakingusers');\n\n        setUsers(\n          users =>\n            (users = [\n              ...usersToSet.data.filter(\n                user =>\n                  user.course === course ||\n                  user.course\n                    .split('/')\n                    .some(usersCourse => usersCourse === course)\n              ),\n            ])\n        );\n        console.log('eff');\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getSpeakingUsersRequest();\n  }, [course, page, lang]);\n\n  return (\n    <TeacherSpeakingDBSection>\n      <TeacherSpeakingDBTable>\n        <UserDBCaption>Список студентів, що відвідали заняття</UserDBCaption>\n        <thead>\n          <UserDBRow>\n            <UserHeadCell>№</UserHeadCell>\n            <UserHeadCell>CRM</UserHeadCell>\n            <UserHeadCell>Ім'я</UserHeadCell>\n            <UserHeadCell>Edit</UserHeadCell>\n            <UserHeadCell>Відвідини</UserHeadCell>\n            <UserHeadCell>Мова</UserHeadCell>\n            <UserHeadCell>Потік</UserHeadCell>\n            <UserHeadCell>Темперамент</UserHeadCell>\n            <UserHeadCell>Успішність</UserHeadCell>\n            <UserHeadCell>Фідбек</UserHeadCell>\n          </UserDBRow>\n        </thead>\n        <tbody>\n          {users\n            .filter(\n              user =>\n                new Date() -\n                  new Date(\n                    changeDateFormat(user.visited[user.visited.length - 1])\n                  ) <=\n                  4 * 86400000 &&\n                (lang === user.lang ||\n                  user.lang.split('/').some(userLang => lang === userLang)) &&\n                (course === user.course ||\n                  user.course\n                    .split('/')\n                    .some(userCourse => course === userCourse))\n            )\n            .sort((a, b) => Intl.Collator('uk').compare(a.name, b.name))\n            .map((user, i) => (\n              <UserDBRow key={user._id}>\n                <UserCell>{i + 1}</UserCell>\n                <UserCell>\n                  <a\n                    href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {user.crmId}\n                  </a>\n                </UserCell>\n                <UserCellLeft>{user.name}</UserCellLeft>\n                <UserCell>\n                  {user.name === 'Dev Acc' ? null : (\n                    <UserEditButton\n                      onClick={() => handleStudentEdit(user.userId)}\n                    >\n                      Edit\n                    </UserEditButton>\n                  )}\n                </UserCell>\n                <UserCell>\n                  {!user.visitedTime[user.visitedTime.length - 1]\n                    ? ''\n                    : user.visitedTime[user.visitedTime.length - 1].match(\n                        '^202'\n                      )\n                    ? new Date(\n                        user.visitedTime[user.visitedTime.length - 1]\n                      ).toLocaleString('uk-UA')\n                    : ''}\n                </UserCell>\n                <UserCell>{user.lang}</UserCell>\n                <UserCell>{user.course}</UserCell>\n                <UserCell>\n                  {user.temperament === 'extro'\n                    ? 'Екстраверт'\n                    : user.temperament === 'intro'\n                    ? 'Інтроверт'\n                    : ''}\n                </UserCell>\n                <UserCell>\n                  {user.successRate === 'good'\n                    ? 'Сильний'\n                    : user.successRate === 'mid'\n                    ? 'Середній'\n                    : user.successRate === 'bad'\n                    ? 'Слабкий'\n                    : ''}\n                </UserCell>\n                <UserCellLeft\n                  dangerouslySetInnerHTML={{\n                    __html:\n                      typeof user.feedback[user.feedback.length - 1] ===\n                      'string'\n                        ? user.feedback[user.feedback.length - 1].replace(\n                            linksRegex,\n                            match =>\n                              `<a href=\"${match}\" target=\"_blank\">${\n                                match.length > 50\n                                  ? match.slice(0, 50) + '...'\n                                  : match\n                              }</a>`\n                          )\n                        : '',\n                  }}\n                ></UserCellLeft>\n              </UserDBRow>\n            ))}\n        </tbody>\n      </TeacherSpeakingDBTable>\n\n      {isEditStudentFormOpen && (\n        <Backdrop onMouseDown={closeEditStudentFormOnClick} id=\"close-on-click\">\n          <TeacherPageSpeakingEditForm\n            currentUser={currentUser}\n            studentToEdit={studentToEdit}\n            updateFeedback={updateFeedback}\n            closeCourseLevelEditForm={closeStudentEditForm}\n          />\n        </Backdrop>\n      )}\n      {isLoading && <Loader />}\n    </TeacherSpeakingDBSection>\n  );\n};\n\nexport default TeacherPageSpeaking;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","_templateObject3","FormBtn","_templateObject4","Input","_templateObject5","_templateObject6","InputNote","_templateObject7","ScheduleList","_templateObject8","ScheduleHeading","_templateObject9","ScheduleItem","_templateObject10","ScheduleInfo","_templateObject11","ScheduleData","_templateObject12","ScheduleDataDayText","_templateObject13","ScheduleDataTypeText","_templateObject14","ScheduleDataTimeText","_templateObject15","FormSelect","_templateObject16","Select","_templateObject17","axios","TeacherPageSpeakingEditForm","_ref","currentUser","studentToEdit","updateFeedback","closeCourseLevelEditForm","isLoading","setIsLoading","useState","temperamentValue","setTemperamentValue","temperament","successRateValue","setSuccessRateValue","successRate","successRateOptions","label","value","temperamentOptions","initialEditStudentValues","feedback","studentSchema","yup","shape","_jsxs","_Fragment","children","_jsx","Formik","initialValues","onSubmit","async","values","concat","name","Date","toLocaleString","timeZone","scValues","crmId","response","userId","userResponse","console","log","alert","_id","error","validationSchema","UsersEditForm","EditFormHeader","age","options","styles","control","baseStyles","state","border","borderRadius","placeholder","defaultValue","find","option","onChange","Label","StudentTextArea","type","component","AdminInputNote","AdminFormBtn","Loader","TeacherPageSpeaking","location","useLocation","pathname","split","users","setUsers","course","setCourse","setStudentToEdit","isEditStudentFormOpen","setIsEditStudentFormOpen","linksRegex","useOutletContext","page","getLocation","lang","includes","getLanguageFromLocation","useEffect","document","title","toLocaleUpperCase","data","filter","timetable","level","usersToSet","user","some","usersCourse","getSpeakingUsersRequest","TeacherSpeakingDBSection","TeacherSpeakingDBTable","UserDBCaption","UserDBRow","UserHeadCell","dateString","dateArray","length","parse","join","changeDateFormat","visited","userLang","userCourse","sort","a","b","Intl","Collator","compare","map","i","UserCell","href","target","rel","UserCellLeft","UserEditButton","onClick","student","id","handleStudentEdit","visitedTime","match","dangerouslySetInnerHTML","__html","replace","slice","Backdrop","onMouseDown","e","userToUpdate"],"sourceRoot":""}