{"version":3,"file":"static/js/Teacher Page.8dd7d0ac.chunk.js","mappings":"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","sources":["pages/TeacherPage/TeacherPage.jsx","pages/TeacherPage/Platform/PlatformVertical.jsx","pages/TeacherPage/Viewer/ViewerVertical.jsx","pages/TeacherPage/WhiteBoard/WhiteBoardVertical.jsx","pages/TeacherPage/TeacherPageVertical.jsx"],"sourcesContent":["import useSize from '@react-hook/size';\nimport { KahootBtn, KahootLogo } from 'components/Stream/Stream.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { HostKahoots } from './HostKahoots/HostKahoots';\nimport { Platform } from './Platform/Platform';\nimport { TeacherChat } from './TeacherChat/TeacherChat';\nimport {\n  BoxHideLeftSwitch,\n  BoxHideRightSwitch,\n  PlatformBtn,\n  PlatformLogo,\n  TeacherButtonBox,\n  TeacherButtonBoxHideSwitch,\n  ViewerBtn,\n  ViewerLogo,\n  WhiteBoardBtn,\n  WhiteBoardLogo,\n} from './TeacherPage.styled';\nimport { Viewer } from './Viewer/Viewer';\nimport { WhiteBoard } from './WhiteBoard/WhiteBoard';\n\nconst TeacherPage = () => {\n  const [isWhiteBoardOpen, setIsWhiteBoardOpen] = useState(false);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n  const [isPlatformOpen, setIsPlatformOpen] = useState(false);\n  const [isKahootOpen, setIsKahootOpen] = useState(false);\n  const [isInputOpen, setIsInputOpen] = useState(false);\n  const [isButtonBoxOpen, setIsButtonBoxOpen] = useState(true);\n  const [isOpenedLast, setIsOpenedLast] = useState('');\n  const [width, height] = useSize(document.body);\n  const location = useLocation().pathname.split('/teacher/')[1];\n\n  const getLocation = location => {\n    switch (location) {\n      case 'deutsch-a0':\n        return 'deutscha0';\n      case 'deutsch-a0_2':\n        return 'deutscha0_2';\n      case 'deutsch-a1':\n        return 'deutsch';\n      case 'deutsch-a1free':\n        return 'deutschfree';\n      case 'deutsch-a2':\n        return 'deutscha2';\n      case 'deutsch-a2free':\n        return 'deutscha2free';\n      case 'deutsch-b1':\n        return 'deutschb1';\n      case 'deutsch-b2':\n        return 'deutschb2';\n      case 'polski-a0':\n        return 'polskia0';\n      case 'polski-a0_2':\n        return 'polskia0_2';\n      case 'polski-a1':\n        return 'polski';\n      case 'polski-a1free':\n        return 'polskifree';\n      case 'polski-a2':\n        return 'polskia2';\n      case 'polski-b1':\n        return 'polskib1';\n      case 'polski-b2':\n        return 'polskib2';\n      default:\n        return location;\n    }\n  };\n  const page = getLocation(location);\n\n  useEffect(() => {\n    document.title = `Teacher ${page.toLocaleUpperCase()} | AP Education`;\n  }, [page]);\n\n  const toggleViewer = () => {\n    !isOpenedLast\n      ? setIsViewerOpen(isViewerOpen => !isViewerOpen)\n      : isOpenedLast === 'viewer' && setIsViewerOpen(isViewerOpen => !isViewerOpen);\n    isWhiteBoardOpen || isPlatformOpen || isKahootOpen || isInputOpen\n      ? setIsOpenedLast(isOpenedLast => 'viewer')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleWhiteBoard = () => {\n    !isOpenedLast\n      ? setIsWhiteBoardOpen(isWhiteBoardOpen => !isWhiteBoardOpen)\n      : isOpenedLast === 'whiteboard' &&\n        setIsWhiteBoardOpen(isWhiteBoardOpen => !isWhiteBoardOpen);\n    isViewerOpen || isPlatformOpen || isKahootOpen || isInputOpen\n      ? setIsOpenedLast(isOpenedLast => 'whiteboard')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const togglePlatform = () => {\n    !isOpenedLast\n      ? setIsPlatformOpen(isPlatformOpen => !isPlatformOpen)\n      : isOpenedLast === 'platform' &&\n        setIsPlatformOpen(isPlatformOpen => !isPlatformOpen);\n    isViewerOpen || isWhiteBoardOpen || isKahootOpen || isInputOpen\n      ? setIsOpenedLast(isOpenedLast => 'platform')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleKahoot = () => {\n    !isOpenedLast\n      ? setIsKahootOpen(isKahootOpen => !isKahootOpen)\n      : isOpenedLast === 'kahoot' && setIsKahootOpen(isKahootOpen => !isKahootOpen);\n    isPlatformOpen || isWhiteBoardOpen || isViewerOpen || isInputOpen\n      ? setIsOpenedLast(isOpenedLast => 'kahoot')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  // eslint-disable-next-line\n  const toggleInput = () => {\n    !isOpenedLast\n      ? setIsInputOpen(isInputOpen => !isInputOpen)\n      : isOpenedLast === 'input' && setIsInputOpen(isInputOpen => !isInputOpen);\n    isPlatformOpen || isWhiteBoardOpen || isViewerOpen || isKahootOpen\n      ? setIsOpenedLast(isOpenedLast => 'input')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleButtonBox = () => {\n    setIsButtonBoxOpen(isOpen => !isOpen);\n  };\n\n  return (\n    <>\n      <TeacherButtonBox className={!isButtonBoxOpen ? 'hidden' : ''}>\n        <ViewerBtn onClick={toggleViewer}>\n          <ViewerLogo />\n        </ViewerBtn>\n\n        <WhiteBoardBtn onClick={toggleWhiteBoard}>\n          <WhiteBoardLogo />\n        </WhiteBoardBtn>\n\n        <PlatformBtn onClick={togglePlatform}>\n          <PlatformLogo />\n        </PlatformBtn>\n\n        <KahootBtn onClick={toggleKahoot}>\n          <KahootLogo />\n        </KahootBtn>\n\n        {/* <InputBtn onClick={toggleInput}>\n          <InputLogo />\n        </InputBtn> */}\n      </TeacherButtonBox>\n      <TeacherButtonBoxHideSwitch id=\"no-transform\" onClick={toggleButtonBox}>\n        {isButtonBoxOpen ? <BoxHideRightSwitch /> : <BoxHideLeftSwitch />}\n      </TeacherButtonBoxHideSwitch>\n\n      <Viewer\n        page={page}\n        sectionWidth={width}\n        isViewerOpen={isViewerOpen}\n        isOpenedLast={isOpenedLast}\n      />\n\n      <WhiteBoard\n        page={page}\n        sectionWidth={width}\n        isWhiteBoardOpen={isWhiteBoardOpen}\n        isOpenedLast={isOpenedLast}\n      />\n      <Platform\n        page={page}\n        sectionWidth={width}\n        isPlatformOpen={isPlatformOpen}\n        isOpenedLast={isOpenedLast}\n      />\n      <HostKahoots\n        page={page}\n        sectionWidth={width}\n        sectionHeight={height}\n        isKahootOpen={isKahootOpen}\n        isOpenedLast={isOpenedLast}\n      />\n      <TeacherChat page={page} />\n      {/* <TeacherInput page={page} isInputOpen={isInputOpen} isOpenedLast={isOpenedLast} /> */}\n    </>\n  );\n};\n\nexport default TeacherPage;\n","import { PlatformBoxVertical } from './Platform.styled';\n\nexport const PlatformVertical = ({ isPlatformOpen, isOpenedLast }) => {\n  const supportBoxStylesHandler = () => {\n    return {\n      zIndex: isOpenedLast === 'platform' ? '4' : '1',\n    };\n  };\n\n  return (\n    <>\n      <PlatformBoxVertical\n        className={isPlatformOpen ? 'shown' : 'hidden'}\n        style={{ ...supportBoxStylesHandler() }}\n      >\n        <iframe\n          className={'active'}\n          id=\"platform-window\"\n          title=\"platform-pin\"\n          src=\"https://online.ap.education/school/\"\n          width=\"58.82%\"\n          height=\"58.82%\"\n        ></iframe>\n      </PlatformBoxVertical>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { LoaderWrapper } from 'components/SharedLayout/Loaders/Loader.styled';\nimport {\n  KahootExitFullScreenIcon,\n  KahootFullScreenIcon\n} from 'components/Stream/Kahoots/Kahoots.styled';\nimport parse from 'html-react-parser';\nimport { useEffect, useState } from 'react';\nimport { ViewerBoxVertical, ViewerFullScreenBtn } from './Viewer.styled';\n\nexport const ViewerVertical = ({ isViewerOpen, isOpenedLast, page }) => {\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [collection, setCollection] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const supportBoxStylesHandler = () => {\n    return {\n      zIndex: isOpenedLast === 'viewer' ? '4' : '1',\n      height: isFullScreen && '100%',\n    };\n  };\n\n  useEffect(() => {\n    document.title = `Teacher ${page.toLocaleUpperCase()} | AP Education`;\n\n    const getCollectionsRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setCollection((await axios.get('/collections')).data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getCollectionsRequest();\n  }, [page]);\n\n  const toggleFullScreen = () => {\n    setIsFullScreen(isFullScreen => (isFullScreen = !isFullScreen));\n  };\n\n  const collectionRefresher = async e => {\n    if (e.target === e.currentTarget) {\n      setCollection((await axios.get('/collections')).data);\n    }\n  };\n\n  return (\n    <>\n      <ViewerBoxVertical\n        className={isViewerOpen ? 'shown' : 'hidden'}\n        style={{ ...supportBoxStylesHandler() }}\n        onTransitionEnd={collectionRefresher}\n      >\n        <ViewerFullScreenBtn onClick={toggleFullScreen} className={isFullScreen && 'fullscreen-on'}>\n          {isFullScreen ? (\n            <KahootExitFullScreenIcon />\n          ) : (\n            <KahootFullScreenIcon />\n          )}\n        </ViewerFullScreenBtn>\n        {collection &&\n          collection.length &&\n          collection.map(coll => parse(coll[page]))}\n      </ViewerBoxVertical>\n      {isLoading && (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n    </>\n  );\n};\n","import { WhiteBoardBoxVertical } from './WhiteBoard.styled';\n\nexport const WhiteBoardVertical = ({\n  page,\n  isWhiteBoardOpen,\n  isOpenedLast,\n  sectionWidth,\n}) => {\n  const BOARDS = {\n    record: 'http://go.limnu.com/chestnut-eatable',\n  };\n\n  const supportBoxStylesHandler = () => {\n    return {\n      zIndex: isOpenedLast === 'whiteboard' ? '3' : '1',\n      width: sectionWidth,\n    };\n  };\n\n  return (\n    <>\n      <WhiteBoardBoxVertical\n        className={isWhiteBoardOpen ? 'shown' : 'hidden'}\n        style={{ ...supportBoxStylesHandler() }}\n      >\n        <iframe\n          id=\"whiteboard window\"\n          title=\"whiteboard-pin\"\n          src={BOARDS[page]}\n          width=\"100%\"\n          height=\"100%\"\n        ></iframe>\n      </WhiteBoardBoxVertical>\n    </>\n  );\n};\n","import useSize from '@react-hook/size';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { PlatformVertical } from './Platform/PlatformVertical';\nimport {\n  BoxHideLeftSwitch,\n  BoxHideRightSwitch,\n  PlatformBtn,\n  PlatformLogo,\n  TeacherButtonBoxHideSwitchVertical,\n  TeacherButtonBoxVertical,\n  ViewerBtn,\n  ViewerLogo,\n  WhiteBoardBtn,\n  WhiteBoardLogo,\n} from './TeacherPage.styled';\nimport { ViewerVertical } from './Viewer/ViewerVertical';\nimport { WhiteBoardVertical } from './WhiteBoard/WhiteBoardVertical';\n\nconst TeacherPageVertical = () => {\n  const [isWhiteBoardOpen, setIsWhiteBoardOpen] = useState(false);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n  const [isPlatformOpen, setIsPlatformOpen] = useState(false);\n\n  const [isButtonBoxOpen, setIsButtonBoxOpen] = useState(true);\n  const [isOpenedLast, setIsOpenedLast] = useState('');\n  \n  // eslint-disable-next-line\n  const [width, height] = useSize(document.body);\n  const location = useLocation().pathname.split('/teacher/')[1];\n\n  const getLocation = location => {\n    switch (location) {\n      case 'deutsch-a0':\n        return 'deutscha0';\n      case 'deutsch-a1':\n        return 'deutsch';\n      case 'deutsch-a1free':\n        return 'deutschfree';\n      case 'deutsch-a2':\n        return 'deutscha2';\n      case 'deutsch-a2free':\n        return 'deutscha2free';\n      case 'deutsch-b1':\n        return 'deutschb1';\n      case 'polski-a0':\n        return 'polskia0';\n      case 'polski-a1':\n        return 'polski';\n      case 'polski-a1free':\n        return 'polskifree';\n      case 'polski-a2':\n        return 'polskia2';\n      case 'polski-b1':\n        return 'polskib1';\n      case 'record':\n        return 'record';\n      default:\n        return location;\n    }\n  };\n  const page = getLocation(location);\n\n  useEffect(() => {\n    document.title = `Teacher ${page.toLocaleUpperCase()} | AP Education`;\n  }, [page]);\n\n  const toggleViewer = () => {\n    !isOpenedLast\n      ? setIsViewerOpen(isViewerOpen => !isViewerOpen)\n      : isOpenedLast === 'viewer' &&\n        setIsViewerOpen(isViewerOpen => !isViewerOpen);\n    isWhiteBoardOpen || isPlatformOpen\n      ? setIsOpenedLast(isOpenedLast => 'viewer')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleWhiteBoard = () => {\n    !isOpenedLast\n      ? setIsWhiteBoardOpen(isWhiteBoardOpen => !isWhiteBoardOpen)\n      : isOpenedLast === 'whiteboard' &&\n        setIsWhiteBoardOpen(isWhiteBoardOpen => !isWhiteBoardOpen);\n    isViewerOpen || isPlatformOpen\n      ? setIsOpenedLast(isOpenedLast => 'whiteboard')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const togglePlatform = () => {\n    !isOpenedLast\n      ? setIsPlatformOpen(isPlatformOpen => !isPlatformOpen)\n      : isOpenedLast === 'platform' &&\n        setIsPlatformOpen(isPlatformOpen => !isPlatformOpen);\n    isViewerOpen || isWhiteBoardOpen\n      ? setIsOpenedLast(isOpenedLast => 'platform')\n      : setIsOpenedLast(isOpenedLast => '');\n  };\n  const toggleButtonBox = () => {\n    setIsButtonBoxOpen(isOpen => !isOpen);\n  };\n\n  return (\n    <>\n      <TeacherButtonBoxVertical className={!isButtonBoxOpen ? 'hidden' : ''}>\n        <ViewerBtn onClick={toggleViewer}>\n          <ViewerLogo />\n        </ViewerBtn>\n\n        <WhiteBoardBtn onClick={toggleWhiteBoard}>\n          <WhiteBoardLogo />\n        </WhiteBoardBtn>\n\n        <PlatformBtn onClick={togglePlatform}>\n          <PlatformLogo />\n        </PlatformBtn>\n      </TeacherButtonBoxVertical>\n      <TeacherButtonBoxHideSwitchVertical\n        id=\"no-transform\"\n        onClick={toggleButtonBox}\n      >\n        {isButtonBoxOpen ? <BoxHideRightSwitch /> : <BoxHideLeftSwitch />}\n      </TeacherButtonBoxHideSwitchVertical>\n      <ViewerVertical\n        page={page}\n        isViewerOpen={isViewerOpen}\n        isOpenedLast={isOpenedLast}\n      />\n      <WhiteBoardVertical\n        page={page}\n        sectionWidth={width}\n        isWhiteBoardOpen={isWhiteBoardOpen}\n        isOpenedLast={isOpenedLast}\n      />\n      <PlatformVertical\n        page={page}\n        isPlatformOpen={isPlatformOpen}\n        isOpenedLast={isOpenedLast}\n      />\n    </>\n  );\n};\n\nexport default TeacherPageVertical;\n"],"names":["TeacherPage","isWhiteBoardOpen","setIsWhiteBoardOpen","useState","isViewerOpen","setIsViewerOpen","isPlatformOpen","setIsPlatformOpen","isKahootOpen","setIsKahootOpen","isInputOpen","setIsInputOpen","isButtonBoxOpen","setIsButtonBoxOpen","isOpenedLast","setIsOpenedLast","width","height","useSize","document","body","page","location","getLocation","useLocation","pathname","split","useEffect","title","concat","toLocaleUpperCase","_jsxs","_Fragment","children","TeacherButtonBox","className","_jsx","ViewerBtn","onClick","toggleViewer","ViewerLogo","WhiteBoardBtn","toggleWhiteBoard","WhiteBoardLogo","PlatformBtn","togglePlatform","PlatformLogo","KahootBtn","toggleKahoot","KahootLogo","TeacherButtonBoxHideSwitch","id","toggleButtonBox","isOpen","BoxHideRightSwitch","BoxHideLeftSwitch","Viewer","sectionWidth","WhiteBoard","Platform","HostKahoots","sectionHeight","TeacherChat","PlatformVertical","_ref","PlatformBoxVertical","style","zIndex","src","ViewerVertical","isFullScreen","setIsFullScreen","collection","setCollection","isLoading","setIsLoading","async","axios","data","error","console","log","getCollectionsRequest","ViewerBoxVertical","onTransitionEnd","e","target","currentTarget","ViewerFullScreenBtn","toggleFullScreen","KahootExitFullScreenIcon","KahootFullScreenIcon","length","map","coll","parse","LoaderWrapper","Loader","WhiteBoardVertical","WhiteBoardBoxVertical","record","TeacherPageVertical","TeacherButtonBoxVertical","TeacherButtonBoxHideSwitchVertical"],"sourceRoot":""}