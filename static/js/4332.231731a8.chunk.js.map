{"version":3,"file":"static/js/4332.231731a8.chunk.js","mappings":"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","sources":["pages/Streams/KahootAdminPanel/EWSPALogisticsKahootForm.jsx","pages/Streams/KahootAdminPanel/EWSPAPrepKahootForm.jsx","pages/Streams/KahootAdminPanel/MeritoLogisticsKahootForm.jsx","pages/Streams/KahootAdminPanel/MeritoPrepKahootForm.jsx","pages/Streams/KahootAdminPanel/PedagogiumLogisticsKahootForm.jsx","pages/Streams/KahootAdminPanel/PedagogiumPrepKahootForm.jsx","pages/Streams/KahootAdminPanel/WSBMIRLogisticsKahootForm.jsx","pages/Streams/KahootAdminPanel/WSBMIRPrepKahootForm.jsx","pages/Streams/KahootAdminPanel/WSTIJOLogisticsKahootForm.jsx","pages/Streams/KahootAdminPanel/WSTIJOPrepKahootForm.jsx","pages/Streams/KahootAdminPanel/WSTiHLogisticsKahootForm.jsx","pages/Streams/KahootAdminPanel/WSTiHPrepKahootForm.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const EWSPALogisticsKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    ewspa_logistics_1: '',\n    ewspa_logistics_2: '',\n    ewspa_logistics_3: '',\n    ewspa_logistics_4: '',\n    ewspa_logistics_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    ewspa_logistics_1: yup.string().optional(),\n    ewspa_logistics_2: yup.string().optional(),\n    ewspa_logistics_3: yup.string().optional(),\n    ewspa_logistics_4: yup.string().optional(),\n    ewspa_logistics_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const ewspa_logisticslinks = { ewspa_logistics: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          ewspa_logisticslinks.ewspa_logistics.links[key] = value;\n        } else {\n          ewspa_logisticslinks.ewspa_logistics.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, ewspa_logisticslinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>EWSPA Logistics</FormTitle>\n        <Formik initialValues={initialLinksValues} onSubmit={handleLinksSubmit} validationSchema={linksSchema}>\n          <LinksForm>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_logistics_1\" autoComplete=\"off\" placeholder=\"Перший кахут для EWSPA Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_logistics_2\" autoComplete=\"off\" placeholder=\"Другий кахут для EWSPA Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_logistics_3\" autoComplete=\"off\" placeholder=\"Третій кахут для EWSPA Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_logistics_4\" autoComplete=\"off\" placeholder=\"Четвертий кахут для EWSPA Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_logistics_5\" autoComplete=\"off\" placeholder=\"П'ятий кахут для EWSPA Logistics\" />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const EWSPAPrepKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    ewspa_prep_1: '',\n    ewspa_prep_2: '',\n    ewspa_prep_3: '',\n    ewspa_prep_4: '',\n    ewspa_prep_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    ewspa_prep_1: yup.string().optional(),\n    ewspa_prep_2: yup.string().optional(),\n    ewspa_prep_3: yup.string().optional(),\n    ewspa_prep_4: yup.string().optional(),\n    ewspa_prep_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const ewspa_preplinks = { ewspa_prep: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          ewspa_preplinks.ewspa_prep.links[key] = value;\n        } else {\n          ewspa_preplinks.ewspa_prep.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, ewspa_preplinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>EWSPA Prep</FormTitle>\n        <Formik initialValues={initialLinksValues} onSubmit={handleLinksSubmit} validationSchema={linksSchema}>\n          <LinksForm>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_prep_1\" autoComplete=\"off\" placeholder=\"Перший кахут для EWSPA Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_prep_2\" autoComplete=\"off\" placeholder=\"Другий кахут для EWSPA Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_prep_3\" autoComplete=\"off\" placeholder=\"Третій кахут для EWSPA Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_prep_4\" autoComplete=\"off\" placeholder=\"Четвертий кахут для EWSPA Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"ewspa_prep_5\" autoComplete=\"off\" placeholder=\"П'ятий кахут для EWSPA Prep\" />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const MeritoLogisticsKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    merito_logistics_1: '',\n    merito_logistics_2: '',\n    merito_logistics_3: '',\n    merito_logistics_4: '',\n    merito_logistics_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    merito_logistics_1: yup.string().optional(),\n    merito_logistics_2: yup.string().optional(),\n    merito_logistics_3: yup.string().optional(),\n    merito_logistics_4: yup.string().optional(),\n    merito_logistics_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const merito_logisticslinks = { merito_logistics: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          merito_logisticslinks.merito_logistics.links[key] = value;\n        } else {\n          merito_logisticslinks.merito_logistics.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, merito_logisticslinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>Merito Logistics</FormTitle>\n        <Formik initialValues={initialLinksValues} onSubmit={handleLinksSubmit} validationSchema={linksSchema}>\n          <LinksForm>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_logistics_1\" autoComplete=\"off\" placeholder=\"Перший кахут для Merito Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_logistics_2\" autoComplete=\"off\" placeholder=\"Другий кахут для Merito Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_logistics_3\" autoComplete=\"off\" placeholder=\"Третій кахут для Merito Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_logistics_4\" autoComplete=\"off\" placeholder=\"Четвертий кахут для Merito Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_logistics_5\" autoComplete=\"off\" placeholder=\"П'ятий кахут для Merito Logistics\" />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const MeritoPrepKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    merito_prep_1: '',\n    merito_prep_2: '',\n    merito_prep_3: '',\n    merito_prep_4: '',\n    merito_prep_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    merito_prep_1: yup.string().optional(),\n    merito_prep_2: yup.string().optional(),\n    merito_prep_3: yup.string().optional(),\n    merito_prep_4: yup.string().optional(),\n    merito_prep_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const merito_preplinks = { merito_prep: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          merito_preplinks.merito_prep.links[key] = value;\n        } else {\n          merito_preplinks.merito_prep.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, merito_preplinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>Merito Prep</FormTitle>\n        <Formik initialValues={initialLinksValues} onSubmit={handleLinksSubmit} validationSchema={linksSchema}>\n          <LinksForm>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_prep_1\" autoComplete=\"off\" placeholder=\"Перший кахут для Merito Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_prep_2\" autoComplete=\"off\" placeholder=\"Другий кахут для Merito Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_prep_3\" autoComplete=\"off\" placeholder=\"Третій кахут для Merito Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_prep_4\" autoComplete=\"off\" placeholder=\"Четвертий кахут для Merito Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"merito_prep_5\" autoComplete=\"off\" placeholder=\"П'ятий кахут для Merito Prep\" />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const PedagogiumLogisticsKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    pedagogium_logistics_1: '',\n    pedagogium_logistics_2: '',\n    pedagogium_logistics_3: '',\n    pedagogium_logistics_4: '',\n    pedagogium_logistics_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    pedagogium_logistics_1: yup.string().optional(),\n    pedagogium_logistics_2: yup.string().optional(),\n    pedagogium_logistics_3: yup.string().optional(),\n    pedagogium_logistics_4: yup.string().optional(),\n    pedagogium_logistics_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const pedagogium_logisticslinks = { pedagogium_logistics: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          pedagogium_logisticslinks.pedagogium_logistics.links[key] = value;\n        } else {\n          pedagogium_logisticslinks.pedagogium_logistics.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, pedagogium_logisticslinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>Pedagogium Logistics</FormTitle>\n        <Formik initialValues={initialLinksValues} onSubmit={handleLinksSubmit} validationSchema={linksSchema}>\n          <LinksForm>\n            <Label>\n              <AdminInput type=\"text\" name=\"pedagogium_logistics_1\" autoComplete=\"off\" placeholder=\"Перший кахут для Pedagogium Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"pedagogium_logistics_2\" autoComplete=\"off\" placeholder=\"Другий кахут для Pedagogium Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"pedagogium_logistics_3\" autoComplete=\"off\" placeholder=\"Третій кахут для Pedagogium Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"pedagogium_logistics_4\" autoComplete=\"off\" placeholder=\"Четвертий кахут для Pedagogium Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"pedagogium_logistics_5\" autoComplete=\"off\" placeholder=\"П'ятий кахут для Pedagogium Logistics\" />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const PedagogiumPrepKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    pedagogium_prep_1: '',\n    pedagogium_prep_2: '',\n    pedagogium_prep_3: '',\n    pedagogium_prep_4: '',\n    pedagogium_prep_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    pedagogium_prep_1: yup.string().optional(),\n    pedagogium_prep_2: yup.string().optional(),\n    pedagogium_prep_3: yup.string().optional(),\n    pedagogium_prep_4: yup.string().optional(),\n    pedagogium_prep_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо\n              так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn\n                className=\"cancel\"\n                onClick={() => toast.dismiss(t.id)}\n              >\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const pedagogium_preplinks = { pedagogium_prep: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          pedagogium_preplinks.pedagogium_prep.links[key] = value;\n        } else {\n          pedagogium_preplinks.pedagogium_prep.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, pedagogium_preplinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>Pedagogium Prep</FormTitle>\n        <Formik\n          initialValues={initialLinksValues}\n          onSubmit={handleLinksSubmit}\n          validationSchema={linksSchema}\n        >\n          <LinksForm>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"pedagogium_prep_1\"\n                autoComplete=\"off\"\n                placeholder=\"Перший кахут для Pedagogium Prep\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"pedagogium_prep_2\"\n                autoComplete=\"off\"\n                placeholder=\"Другий кахут для Pedagogium Prep\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"pedagogium_prep_3\"\n                autoComplete=\"off\"\n                placeholder=\"Третій кахут для Pedagogium Prep\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"pedagogium_prep_4\"\n                autoComplete=\"off\"\n                placeholder=\"Четвертий кахут для Pedagogium Prep\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"pedagogium_prep_5\"\n                autoComplete=\"off\"\n                placeholder=\"П'ятий кахут для Pedagogium Prep\"\n              />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br />{' '}\n              Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 -\n              внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const WSBMIRLogisticsKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    wsbmir_logistics_1: '',\n    wsbmir_logistics_2: '',\n    wsbmir_logistics_3: '',\n    wsbmir_logistics_4: '',\n    wsbmir_logistics_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    wsbmir_logistics_1: yup.string().optional(),\n    wsbmir_logistics_2: yup.string().optional(),\n    wsbmir_logistics_3: yup.string().optional(),\n    wsbmir_logistics_4: yup.string().optional(),\n    wsbmir_logistics_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const wsbmir_logisticslinks = { wsbmir_logistics: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          wsbmir_logisticslinks.wsbmir_logistics.links[key] = value;\n        } else {\n          wsbmir_logisticslinks.wsbmir_logistics.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, wsbmir_logisticslinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>WSBMIR Logistics</FormTitle>\n        <Formik initialValues={initialLinksValues} onSubmit={handleLinksSubmit} validationSchema={linksSchema}>\n          <LinksForm>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_logistics_1\" autoComplete=\"off\" placeholder=\"Перший кахут для WSBMIR Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_logistics_2\" autoComplete=\"off\" placeholder=\"Другий кахут для WSBMIR Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_logistics_3\" autoComplete=\"off\" placeholder=\"Третій кахут для WSBMIR Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_logistics_4\" autoComplete=\"off\" placeholder=\"Четвертий кахут для WSBMIR Logistics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_logistics_5\" autoComplete=\"off\" placeholder=\"П'ятий кахут для WSBMIR Logistics\" />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const WSBMIRPrepKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    wsbmir_prep_1: '',\n    wsbmir_prep_2: '',\n    wsbmir_prep_3: '',\n    wsbmir_prep_4: '',\n    wsbmir_prep_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    wsbmir_prep_1: yup.string().optional(),\n    wsbmir_prep_2: yup.string().optional(),\n    wsbmir_prep_3: yup.string().optional(),\n    wsbmir_prep_4: yup.string().optional(),\n    wsbmir_prep_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const wsbmir_preplinks = { wsbmir_prep: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          wsbmir_preplinks.wsbmir_prep.links[key] = value;\n        } else {\n          wsbmir_preplinks.wsbmir_prep.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, wsbmir_preplinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>WSBMIR Prep</FormTitle>\n        <Formik initialValues={initialLinksValues} onSubmit={handleLinksSubmit} validationSchema={linksSchema}>\n          <LinksForm>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_prep_1\" autoComplete=\"off\" placeholder=\"Перший кахут для WSBMIR Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_prep_2\" autoComplete=\"off\" placeholder=\"Другий кахут для WSBMIR Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_prep_3\" autoComplete=\"off\" placeholder=\"Третій кахут для WSBMIR Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_prep_4\" autoComplete=\"off\" placeholder=\"Четвертий кахут для WSBMIR Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wsbmir_prep_5\" autoComplete=\"off\" placeholder=\"П'ятий кахут для WSBMIR Prep\" />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const WSTIJOLogisticsKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    wstijo_logistics_1: '',\n    wstijo_logistics_2: '',\n    wstijo_logistics_3: '',\n    wstijo_logistics_4: '',\n    wstijo_logistics_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    wstijo_logistics_1: yup.string().optional(),\n    wstijo_logistics_2: yup.string().optional(),\n    wstijo_logistics_3: yup.string().optional(),\n    wstijo_logistics_4: yup.string().optional(),\n    wstijo_logistics_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const wstijo_logisticslinks = { wstijo_logistics: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          wstijo_logisticslinks.wstijo_logistics.links[key] = value;\n        } else {\n          wstijo_logisticslinks.wstijo_logistics.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, wstijo_logisticslinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>WSTIJO Logistics</FormTitle>\n        <Formik initialValues={initialLinksValues} onSubmit={handleLinksSubmit} validationSchema={linksSchema}>\n          <LinksForm>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_logistics_1\" autoComplete=\"off\" placeholder=\"Перший кахут для WSTIJO Logisitics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_logistics_2\" autoComplete=\"off\" placeholder=\"Другий кахут для WSTIJO Logisitics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_logistics_3\" autoComplete=\"off\" placeholder=\"Третій кахут для WSTIJO Logisitics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_logistics_4\" autoComplete=\"off\" placeholder=\"Четвертий кахут для WSTIJO Logisitics\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_logistics_5\" autoComplete=\"off\" placeholder=\"П'ятий кахут для WSTIJO Logisitics\" />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const WSTIJOPrepKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    wstijo_prep_1: '',\n    wstijo_prep_2: '',\n    wstijo_prep_3: '',\n    wstijo_prep_4: '',\n    wstijo_prep_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    wstijo_prep_1: yup.string().optional(),\n    wstijo_prep_2: yup.string().optional(),\n    wstijo_prep_3: yup.string().optional(),\n    wstijo_prep_4: yup.string().optional(),\n    wstijo_prep_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const wstijo_preplinks = { wstijo_prep: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          wstijo_preplinks.wstijo_prep.links[key] = value;\n        } else {\n          wstijo_preplinks.wstijo_prep.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, wstijo_preplinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>WSTIJO Prep</FormTitle>\n        <Formik initialValues={initialLinksValues} onSubmit={handleLinksSubmit} validationSchema={linksSchema}>\n          <LinksForm>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_prep_1\" autoComplete=\"off\" placeholder=\"Перший кахут для WSTIJO Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_prep_2\" autoComplete=\"off\" placeholder=\"Другий кахут для WSTIJO Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_prep_3\" autoComplete=\"off\" placeholder=\"Третій кахут для WSTIJO Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_prep_4\" autoComplete=\"off\" placeholder=\"Четвертий кахут для WSTIJO Prep\" />\n            </Label>\n            <Label>\n              <AdminInput type=\"text\" name=\"wstijo_prep_5\" autoComplete=\"off\" placeholder=\"П'ятий кахут для WSTIJO Prep\" />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її зняти, можна виправити конкретний лінк, не зачіпаючи інші.\n              Наприклад, якщо треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const WSTiHLogisticsKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    wstih_logistics_1: '',\n    wstih_logistics_2: '',\n    wstih_logistics_3: '',\n    wstih_logistics_4: '',\n    wstih_logistics_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    wstih_logistics_1: yup.string().optional(),\n    wstih_logistics_2: yup.string().optional(),\n    wstih_logistics_3: yup.string().optional(),\n    wstih_logistics_4: yup.string().optional(),\n    wstih_logistics_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і\n              треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const wstih_logisticslinks = { wstih_logistics: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          wstih_logisticslinks.wstih_logistics.links[key] = value;\n        } else {\n          wstih_logisticslinks.wstih_logistics.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, wstih_logisticslinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>WSTiH Logistics</FormTitle>\n        <Formik\n          initialValues={initialLinksValues}\n          onSubmit={handleLinksSubmit}\n          validationSchema={linksSchema}\n        >\n          <LinksForm>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_logistics_1\"\n                autoComplete=\"off\"\n                placeholder=\"Перший кахут для WSTiH Logisitics\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_logistics_2\"\n                autoComplete=\"off\"\n                placeholder=\"Другий кахут для WSTiH Logisitics\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_logistics_3\"\n                autoComplete=\"off\"\n                placeholder=\"Третій кахут для WSTiH Logisitics\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_logistics_4\"\n                autoComplete=\"off\"\n                placeholder=\"Четвертий кахут для WSTiH Logisitics\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_logistics_5\"\n                autoComplete=\"off\"\n                placeholder=\"П'ятий кахут для WSTiH Logisitics\"\n              />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її\n              зняти, можна виправити конкретний лінк, не зачіпаючи інші. Наприклад, якщо\n              треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у\n              відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { DismissIcon } from 'components/Stream/Kahoots/Kahoots.styled';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport * as yup from 'yup';\nimport {\n  AdminCheckbox,\n  AdminFormBtn,\n  AdminInput,\n  AdminPanelSection,\n  FormTitle,\n  LabelCheckBox,\n  LinksForm,\n  WarningBox,\n  WarningBtn,\n  WarningBtnBox,\n  WarningDismissBtn,\n  WarningText,\n} from './KahootAdminPanel.styled';\n\nexport const WSTiHPrepKahootForm = ({ destination }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const initialLinksValues = {\n    wstih_prep_1: '',\n    wstih_prep_2: '',\n    wstih_prep_3: '',\n    wstih_prep_4: '',\n    wstih_prep_5: '',\n    replace: true,\n  };\n\n  const linksSchema = yup.object().shape({\n    wstih_prep_1: yup.string().optional(),\n    wstih_prep_2: yup.string().optional(),\n    wstih_prep_3: yup.string().optional(),\n    wstih_prep_4: yup.string().optional(),\n    wstih_prep_5: yup.string().optional(),\n    replace: yup.bool().required(),\n  });\n\n  const handleLinksSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    const emptyValues = Object.values(values)\n      .filter(value => typeof value === 'string')\n      .every(value => !value === true);\n\n    !confirmation &&\n      emptyValues &&\n      toast(\n        t => (\n          <WarningBox>\n            <WarningDismissBtn onClick={() => toast.dismiss(t.id)}>\n              <DismissIcon />\n            </WarningDismissBtn>\n            <WarningText>\n              Краще не відправляти пусту форму, бо так затруться ВСІ лінки. Якщо так і\n              треба, клацай \"Затерти все\" і відправ форму знов.\n            </WarningText>\n            <WarningBtnBox>\n              <WarningBtn\n                className=\"delete\"\n                onClick={() => {\n                  setConfirmation(confirmation => (confirmation = true));\n                  toast.dismiss(t.id);\n                }}\n              >\n                Затерти все\n              </WarningBtn>\n              <WarningBtn className=\"cancel\" onClick={() => toast.dismiss(t.id)}>\n                Додати лінки\n              </WarningBtn>\n            </WarningBtnBox>\n          </WarningBox>\n        ),\n        { duration: Infinity }\n      );\n\n    if (!emptyValues || confirmation) {\n      const wstih_preplinks = { wstih_prep: { links: {} } };\n      for (const [key, value] of Object.entries(values)) {\n        if (value && key !== 'replace') {\n          wstih_preplinks.wstih_prep.links[key] = value;\n        } else {\n          wstih_preplinks.wstih_prep.replace = value;\n        }\n      }\n      try {\n        const response = await axios.patch(destination, wstih_preplinks);\n        console.log(response);\n        resetForm();\n        alert('Лінки замінилися, молодець');\n      } catch (error) {\n        console.error(error);\n        alert('Щось не прокнуло');\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n        setConfirmation(confirmation => (confirmation = false));\n      }\n    }\n    setIsLoading(isLoading => (isLoading = false));\n    return;\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        <FormTitle>WSTiH Prep</FormTitle>\n        <Formik\n          initialValues={initialLinksValues}\n          onSubmit={handleLinksSubmit}\n          validationSchema={linksSchema}\n        >\n          <LinksForm>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_prep_1\"\n                autoComplete=\"off\"\n                placeholder=\"Перший кахут для WSTiH Prep\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_prep_2\"\n                autoComplete=\"off\"\n                placeholder=\"Другий кахут для WSTiH Prep\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_prep_3\"\n                autoComplete=\"off\"\n                placeholder=\"Третій кахут для WSTiH Prep\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_prep_4\"\n                autoComplete=\"off\"\n                placeholder=\"Четвертий кахут для WSTiH Prep\"\n              />\n            </Label>\n            <Label>\n              <AdminInput\n                type=\"text\"\n                name=\"wstih_prep_5\"\n                autoComplete=\"off\"\n                placeholder=\"П'ятий кахут для WSTiH Prep\"\n              />\n            </Label>\n            <LabelCheckBox>\n              <AdminCheckbox type=\"checkbox\" name=\"replace\" />\n              Якщо не зняти галочку, всі лінки перезапишуться повністю. <br /> Якщо її\n              зняти, можна виправити конкретний лінк, не зачіпаючи інші. Наприклад, якщо\n              треба виправити тільки один Кахут, наприклад, №3 - внось його лінк у\n              відповідне поле (третє) і знімай галочку.\n            </LabelCheckBox>\n            <AdminFormBtn type=\"submit\">Замінити лінки</AdminFormBtn>\n          </LinksForm>\n        </Formik>\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n"],"names":["EWSPALogisticsKahootForm","_ref","destination","isLoading","setIsLoading","useState","confirmation","setConfirmation","linksSchema","yup","shape","ewspa_logistics_1","optional","ewspa_logistics_2","ewspa_logistics_3","ewspa_logistics_4","ewspa_logistics_5","replace","required","_jsx","_Fragment","children","_jsxs","AdminPanelSection","FormTitle","Formik","initialValues","onSubmit","async","values","_ref2","resetForm","emptyValues","Object","filter","value","every","toast","t","WarningBox","WarningDismissBtn","onClick","id","DismissIcon","WarningText","WarningBtnBox","WarningBtn","className","duration","Infinity","ewspa_logisticslinks","ewspa_logistics","links","key","entries","response","axios","console","log","alert","error","validationSchema","LinksForm","Label","AdminInput","type","name","autoComplete","placeholder","LabelCheckBox","AdminCheckbox","AdminFormBtn","Loader","EWSPAPrepKahootForm","ewspa_prep_1","ewspa_prep_2","ewspa_prep_3","ewspa_prep_4","ewspa_prep_5","ewspa_preplinks","ewspa_prep","MeritoLogisticsKahootForm","merito_logistics_1","merito_logistics_2","merito_logistics_3","merito_logistics_4","merito_logistics_5","merito_logisticslinks","merito_logistics","MeritoPrepKahootForm","merito_prep_1","merito_prep_2","merito_prep_3","merito_prep_4","merito_prep_5","merito_preplinks","merito_prep","PedagogiumLogisticsKahootForm","pedagogium_logistics_1","pedagogium_logistics_2","pedagogium_logistics_3","pedagogium_logistics_4","pedagogium_logistics_5","pedagogium_logisticslinks","pedagogium_logistics","PedagogiumPrepKahootForm","pedagogium_prep_1","pedagogium_prep_2","pedagogium_prep_3","pedagogium_prep_4","pedagogium_prep_5","pedagogium_preplinks","pedagogium_prep","WSBMIRLogisticsKahootForm","wsbmir_logistics_1","wsbmir_logistics_2","wsbmir_logistics_3","wsbmir_logistics_4","wsbmir_logistics_5","wsbmir_logisticslinks","wsbmir_logistics","WSBMIRPrepKahootForm","wsbmir_prep_1","wsbmir_prep_2","wsbmir_prep_3","wsbmir_prep_4","wsbmir_prep_5","wsbmir_preplinks","wsbmir_prep","WSTIJOLogisticsKahootForm","wstijo_logistics_1","wstijo_logistics_2","wstijo_logistics_3","wstijo_logistics_4","wstijo_logistics_5","wstijo_logisticslinks","wstijo_logistics","WSTIJOPrepKahootForm","wstijo_prep_1","wstijo_prep_2","wstijo_prep_3","wstijo_prep_4","wstijo_prep_5","wstijo_preplinks","wstijo_prep","WSTiHLogisticsKahootForm","wstih_logistics_1","wstih_logistics_2","wstih_logistics_3","wstih_logistics_4","wstih_logistics_5","wstih_logisticslinks","wstih_logistics","WSTiHPrepKahootForm","wstih_prep_1","wstih_prep_2","wstih_prep_3","wstih_prep_4","wstih_prep_5","wstih_preplinks","wstih_prep"],"sourceRoot":""}