{"version":3,"file":"static/js/Ratings Admin Panel page.a7c7e4e8.chunk.js","mappings":"6NAgBAA,EAAAA,EAAAA,SAAAA,QAAyB,sCACzB,MAAMC,EAAeC,IACnBF,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAA8C,UAAAG,OAAaD,EAAO,EAkLpE,EA/K0BE,KACxB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,IAE/CG,EAAAA,EAAAA,YAAU,KACRC,SAASC,MAAQ,qCAEIC,WACnBC,QAAQC,IAAI,mBACZ,IACE,GAAIC,aAAaC,QAAQ,WAAY,CACnC,MAAMC,QAAYlB,EAAAA,EAAAA,KAAW,uBAAwB,CAAC,GACtDc,QAAQC,IAAIG,GACZT,GAAeU,IAAsB,IACrClB,EAAaiB,EAAIE,KAAKC,SACxB,CAGF,CAFE,MAAOC,GACPR,QAAQC,IAAIO,EACd,GAEFC,EAAc,GACb,CAACf,IAEJ,MAKMgB,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KAAaG,SAAS,8EAC7BC,SAAUJ,EAAAA,KAAaG,SAAS,sFA4B5BE,EAAgBL,EAAAA,KAAaC,MAAM,CACvCK,OAAQN,EAAAA,KAAaG,SAAS,8DAuChC,OACEI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAiB,CAAAF,SAAA,EACd1B,IACAwB,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACLC,cAhFiB,CACzBX,MAAO,GACPE,SAAU,IA+EFU,SAvEgB1B,MAAO2B,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EACpDnC,GAAaD,IAA0B,IACvC,IACE,MAAMsC,QAAiB3C,EAAAA,EAAAA,KAAW,sBAAuBwC,GACzDvC,EAAa0C,EAASvB,KAAKlB,OAC3BO,GAAeU,IAAsB,IACrCH,aAAa4B,QAAQ,WAAW,GAChCF,GAKF,CAJE,MAAOpB,GACPR,QAAQQ,MAAMA,EAChB,CAAC,QACChB,GAAaD,IAA0B,GACzC,GA4DQwC,iBAAkBrB,EAAYU,UAE9BC,EAAAA,EAAAA,MAACW,EAAAA,GAAS,CAAAZ,SAAA,EACRC,EAAAA,EAAAA,MAACY,EAAAA,GAAK,CAAAb,SAAA,EACJF,EAAAA,EAAAA,KAACgB,EAAAA,GAAU,CAACC,KAAK,OAAOC,KAAK,QAAQC,YAAY,WACjDnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAc,CAACC,UAAU,IAAIH,KAAK,cAErCf,EAAAA,EAAAA,MAACY,EAAAA,GAAK,CAAAb,SAAA,EACJF,EAAAA,EAAAA,KAACgB,EAAAA,GAAU,CACTC,KAAK,WACLC,KAAK,WACLC,YAAY,cAEdnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAc,CAACC,UAAU,IAAIH,KAAK,iBAErClB,EAAAA,EAAAA,KAACsB,EAAAA,GAAY,CAACL,KAAK,SAAQf,SAAC,kFAKjC1B,IACCwB,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACLC,cA/EmB,CAC3BiB,OAAQ,MACRxB,OAAQ,IA8EAQ,SAlEkB1B,MAAO2B,EAAMgB,KAAqB,IAAnB,UAAEd,GAAWc,EACtDlD,GAAaD,IAA0B,IACvCmC,EAAOT,OAAS0B,KAAKC,MAAMlB,EAAOT,QAElC,IACEjB,QAAQC,IAAIyB,GACZ,MAAMG,QAAiB3C,EAAAA,EAAAA,MAAY,WAAYwC,GAC/C1B,QAAQC,IAAI4B,GACZD,IACAiB,MAAM,kKAMR,CALE,MAAOrC,GACPR,QAAQQ,MAAMA,GACdqC,MAAM,0FACR,CAAC,QACCrD,GAAaD,IAA0B,GACzC,GAoDQwC,iBAAkBf,EAAcI,UAEhCC,EAAAA,EAAAA,MAACyB,EAAAA,GAAS,CAAA1B,SAAA,EACRC,EAAAA,EAAAA,MAACY,EAAAA,GAAK,CAAAb,SAAA,EACJF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAa,CACZZ,KAAK,OACLC,KAAK,SACLG,UAAU,WACVF,YAAY,+KAEdnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAc,CAACC,UAAU,IAAIH,KAAK,eAErClB,EAAAA,EAAAA,KAACsB,EAAAA,GAAY,CAACL,KAAK,SAAQf,SAAC,sJAMjC1B,IACCwB,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACLC,cAhG0B,CAClCiB,OAAQ,UACRxB,OAAQ,IA+FAQ,SAtEyB1B,MAAO2B,EAAMsB,KAAqB,IAAnB,UAAEpB,GAAWoB,EAC7DxD,GAAaD,IAA0B,IACvCmC,EAAOT,OAAS0B,KAAKC,MAAMlB,EAAOT,QAElC,IACEjB,QAAQC,IAAIyB,GACZ,MAAMG,QAAiB3C,EAAAA,EAAAA,MAAY,WAAYwC,GAC/C1B,QAAQC,IAAI4B,GACZD,IACAiB,MAAM,kKAMR,CALE,MAAOrC,GACPR,QAAQQ,MAAMA,GACdqC,MAAM,0FACR,CAAC,QACCrD,GAAaD,IAA0B,GACzC,GAwDQwC,iBAAkBf,EAAcI,UAEhCC,EAAAA,EAAAA,MAACyB,EAAAA,GAAS,CAAA1B,SAAA,EACRC,EAAAA,EAAAA,MAACY,EAAAA,GAAK,CAAAb,SAAA,EACJF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAa,CACZZ,KAAK,OACLC,KAAK,SACLG,UAAU,WACVF,YAAY,qOAEdnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAc,CAACC,UAAU,IAAIH,KAAK,eAErClB,EAAAA,EAAAA,KAACsB,EAAAA,GAAY,CAACL,KAAK,SAAQf,SAAC,gJAMjC7B,IAAa2B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,QAEtB,C","sources":["pages/Streams/RatingsAdminPanel/RatingsAdminPanel.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Label } from 'components/LeadForm/LeadForm.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport {\n  AdminFormBtn,\n  AdminInput,\n  AdminInputNote,\n  AdminPanelSection,\n  AdminTextArea,\n  LinksForm,\n  LoginForm,\n} from './RatingsAdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\nconst setAuthToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\n\nconst RatingsAdminPanel = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUserAdmin, setIsUserAdmin] = useState(false);\n\n  useEffect(() => {\n    document.title = 'Ratings Admin Panel | AP Education';\n\n    const refreshToken = async () => {\n      console.log('token refresher');\n      try {\n        if (localStorage.getItem('isAdmin')) {\n          const res = await axios.post('admins/refresh/users', {});\n          console.log(res);\n          setIsUserAdmin(isAdmin => (isAdmin = true));\n          setAuthToken(res.data.newToken);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    refreshToken();\n  }, [isUserAdmin]);\n\n  const initialLoginValues = {\n    login: '',\n    password: '',\n  };\n\n  const loginSchema = yup.object().shape({\n    login: yup.string().required('Вкажіть логін!'),\n    password: yup.string().required('Введіть пароль!'),\n  });\n\n  const handleLoginSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.post('/admins/login/users', values);\n      setAuthToken(response.data.token);\n      setIsUserAdmin(isAdmin => (isAdmin = true));\n      localStorage.setItem('isAdmin', true);\n      resetForm();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const initialRatingsValues = {\n    period: 'all',\n    rating: '',\n  };\n\n  const initialMonthlyRatingsValues = {\n    period: 'monthly',\n    rating: '',\n  };\n\n  const ratingsSchema = yup.object().shape({\n    rating: yup.string().required('Внеси бали!'),\n  });\n\n  const handleRatingsSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.rating = JSON.parse(values.rating);\n\n    try {\n      console.log(values);\n      const response = await axios.patch(`/ratings`, values);\n      console.log(response);\n      resetForm();\n      alert('Рейтинги замінилися, молодець');\n    } catch (error) {\n      console.error(error);\n      alert('Щось не прокнуло!');\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  const handleMonthlyRatingsSubmit = async (values, { resetForm }) => {\n    setIsLoading(isLoading => (isLoading = true));\n    values.rating = JSON.parse(values.rating);\n\n    try {\n      console.log(values);\n      const response = await axios.patch('/ratings', values);\n      console.log(response);\n      resetForm();\n      alert('Рейтинги замінилися, молодець');\n    } catch (error) {\n      console.error(error);\n      alert('Щось не прокнуло!');\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <AdminPanelSection>\n        {!isUserAdmin && (\n          <Formik\n            initialValues={initialLoginValues}\n            onSubmit={handleLoginSubmit}\n            validationSchema={loginSchema}\n          >\n            <LoginForm>\n              <Label>\n                <AdminInput type=\"text\" name=\"login\" placeholder=\"Login\" />\n                <AdminInputNote component=\"p\" name=\"login\" />\n              </Label>\n              <Label>\n                <AdminInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n                <AdminInputNote component=\"p\" name=\"password\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">Залогінитись</AdminFormBtn>\n            </LoginForm>\n          </Formik>\n        )}\n\n        {isUserAdmin && (\n          <Formik\n            initialValues={initialRatingsValues}\n            onSubmit={handleRatingsSubmit}\n            validationSchema={ratingsSchema}\n          >\n            <LinksForm>\n              <Label>\n                <AdminTextArea\n                  type=\"text\"\n                  name=\"rating\"\n                  component=\"textarea\"\n                  placeholder=\"Бали всіх-всіх-всіх за все-все-все\"\n                />\n                <AdminInputNote component=\"p\" name=\"rating\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">\n                Оновити загальний рейтинг\n              </AdminFormBtn>\n            </LinksForm>\n          </Formik>\n        )}\n        {isUserAdmin && (\n          <Formik\n            initialValues={initialMonthlyRatingsValues}\n            onSubmit={handleMonthlyRatingsSubmit}\n            validationSchema={ratingsSchema}\n          >\n            <LinksForm>\n              <Label>\n                <AdminTextArea\n                  type=\"text\"\n                  name=\"rating\"\n                  component=\"textarea\"\n                  placeholder=\"Бали всіх-всіх-всіх за місяць-місяць-місяць\"\n                />\n                <AdminInputNote component=\"p\" name=\"rating\" />\n              </Label>\n              <AdminFormBtn type=\"submit\">\n                Оновити місячний рейтинг\n              </AdminFormBtn>\n            </LinksForm>\n          </Formik>\n        )}\n        {isLoading && <Loader />}\n      </AdminPanelSection>\n    </>\n  );\n};\n\nexport default RatingsAdminPanel"],"names":["axios","setAuthToken","token","concat","RatingsAdminPanel","isLoading","setIsLoading","useState","isUserAdmin","setIsUserAdmin","useEffect","document","title","async","console","log","localStorage","getItem","res","isAdmin","data","newToken","error","refreshToken","loginSchema","yup","shape","login","required","password","ratingsSchema","rating","_jsx","_Fragment","children","_jsxs","AdminPanelSection","Formik","initialValues","onSubmit","values","_ref","resetForm","response","setItem","validationSchema","LoginForm","Label","AdminInput","type","name","placeholder","AdminInputNote","component","AdminFormBtn","period","_ref2","JSON","parse","alert","LinksForm","AdminTextArea","_ref3","Loader"],"sourceRoot":""}