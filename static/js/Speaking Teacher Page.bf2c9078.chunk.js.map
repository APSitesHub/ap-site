{"version":3,"file":"static/js/Speaking Teacher Page.bf2c9078.chunk.js","mappings":"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","sources":["pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled.js","pages/TeacherPage/TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm.jsx","pages/TeacherPage/TeacherPageSpeaking.jsx"],"sourcesContent":["import { FormBtn, Input, InputNote } from 'components/LeadForm/LeadForm.styled';\nimport { Form } from 'formik';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n\nexport const AdminPanelSection = styled.section`\n  height: max-content;\n  padding: 30px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LoginForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 35px;\n`;\n\nexport const LinksForm = styled(Form)`\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n`;\n\nexport const AdminFormBtn = styled(FormBtn)`\n  margin: 0 auto;\n`;\n\nexport const AdminInput = styled(Input)`\n  border: 2px solid var(--main-color);\n`;\n\nexport const AdminTextArea = styled(Input)`\n  border-radius: 0;\n  width: 35vw;\n  height: 75vh;\n  scrollbar-width: thin;\n  background-color: transparent;\n`;\n\nexport const AdminInputNote = styled(InputNote)`\n  position: static;\n  color: var(--main-color);\n  font-size: 24px;\n  font-weight: 700;\n  bottom: -1.1em;\n`;\n\nexport const ScheduleList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 14px;\n\n  text-transform: capitalize;\n  font-weight: 600;\n  margin-left: auto;\n`;\n\nexport const ScheduleHeading = styled.h2`\n  font-size: 32px;\n  text-align: center;\n  margin-bottom: 12px;\n`;\n\nexport const ScheduleItem = styled.li`\n  width: 100%;\n  flex-basis: 40%;\n  flex-grow: 0;\n`;\n\nexport const ScheduleInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ScheduleData = styled.li`\n  font-size: 14px;\n  font-weight: 400;\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n  padding-bottom: 5px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ScheduleDataDayText = styled.span`\n  min-width: 24px;\n`;\n\nexport const ScheduleDataTypeText = styled.span`\n  min-width: 120px;\n  text-align: center;\n`;\n\nexport const ScheduleDataTimeText = styled.span`\n  min-width: 100px;\n  text-align: center;\n`;\n\nexport const ScheduleParagraph = styled.p`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n  font-size: 14px;\n  border: 2px solid var(--main-color);\n\n  line-height: 1;\n\n  @media screen and (min-width: 768px) {\n    font-size: 19px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-burnt-color);\n    outline: transparent;\n  }\n`;\n","import axios from 'axios';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport { FormSelect } from 'pages/Streams/TimeTableAdminPanel/TimeTableAdminPanel.styled';\nimport { UsersEditForm } from 'pages/Streams/UserAdminPanel/UserAdminPanel.styled';\nimport { AdminFormBtn } from 'pages/Streams/AdminPanel/AdminPanel.styled';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nexport const TeacherPageSpeakingEditForm = ({\n  studentToEdit,\n  closeCourseLevelEditForm,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [temperamentValue, setTemperamentValue] = useState(studentToEdit.temperament || '');\n  const [successRateValue, setSuccessRateValue] = useState(studentToEdit.successRate || '');\n\n  console.log(studentToEdit);\n\n  const successRateOptions = [\n    {\n      label: 'Сильний',\n      value: 'good',\n    },\n    {\n      label: 'Середній',\n      value: 'mid',\n    },\n    {\n      label: 'Слабкий',\n      value: 'bad',\n    },\n  ];\n\n  const temperamentOptions = [\n    {\n      label: 'Екстраверт',\n      value: 'extro',\n    },\n    {\n      label: 'Інтроверт',\n      value: 'intro',\n    },\n  ];\n\n  const initialEditStudentValues = {\n    temperament: studentToEdit.temperament || '',\n    successRate: studentToEdit.successRate || '',\n    feedback: studentToEdit.feedback || '',\n  };\n\n  const studentSchema = yup.object().shape({\n    temperament: yup.string(),\n    successRate: yup.string(),\n    feedback: yup.string(),\n  });\n\n  const handleEditTimetableSubmit = async values => {\n    values = {\n      temperament: temperamentValue,\n      successRate: successRateValue,\n    };\n\n    console.log(values);\n    setIsLoading(isLoading => (isLoading = true));\n    try {\n      const response = await axios.patch(\n        `/timetable/course/${studentToEdit._id}`,\n        values\n      );\n      console.log(response);\n      closeCourseLevelEditForm();\n      alert('Відредаговано');\n    } catch (error) {\n      console.error(error);\n      alert(\n        'Десь якась проблема - клацай F12, роби скрін консолі, відправляй Кирилу'\n      );\n    } finally {\n      setIsLoading(isLoading => (isLoading = false));\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialEditStudentValues}\n        onSubmit={handleEditTimetableSubmit}\n        validationSchema={studentSchema}\n      >\n        <UsersEditForm>\n          <FormSelect\n            options={successRateOptions}\n            styles={{\n              control: (baseStyles, state) => ({\n                ...baseStyles,\n                border: 'none',\n                borderRadius: '0px',\n              }),\n            }}\n            placeholder=\"Успішність\"\n            name=\"successRate\"\n            defaultValue={successRateOptions.find(\n              option => option.value === studentToEdit.lang\n            )}\n            isDisabled\n            onChange={successRate => {\n              setSuccessRateValue(successRate.value);\n            }}\n          />\n          <FormSelect\n            options={temperamentOptions}\n            styles={{\n              control: (baseStyles, state) => ({\n                ...baseStyles,\n                border: 'none',\n                borderRadius: '0px',\n              }),\n            }}\n            placeholder=\"Темперамент\"\n            name=\"temperament\"\n            defaultValue={temperamentOptions.find(\n              option => option.value === studentToEdit.temperament\n            )}\n            onChange={temperament => {\n              setTemperamentValue(temperament.value);\n            }}\n          />\n          <AdminFormBtn type=\"submit\">Змінити юзера</AdminFormBtn>\n        </UsersEditForm>\n      </Formik>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n","import axios from 'axios';\nimport { Backdrop } from 'components/LeadForm/Backdrop/Backdrop.styled';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport {\n  UserCell,\n  UserDBCaption,\n  UserDBRow,\n  UserDBTable,\n  UserEditButton,\n  UserHeadCell,\n} from 'pages/Streams/UserAdminPanel/UserAdminPanel.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TeacherPageSpeakingEditForm } from './TeacherPageSpeakingEditForm/TeacherPageSpeakingEditForm';\n\nconst TeacherPageSpeaking = () => {\n  const location = useLocation().pathname.split('/speakings/')[1];\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [course, setCourse] = useState('');\n  const [studentToEdit, setStudentToEdit] = useState({});\n  const [isEditStudentFormOpen, setIsEditStudentFormOpen] = useState(false);\n\n  const closeStudentEditForm = e => {\n    setIsEditStudentFormOpen(false);\n  };\n\n  const changeDateFormat = dateString => {\n    if (dateString) {\n      const dateArray = dateString.split('.');\n      return dateArray.length > 2\n        ? Date.parse([dateArray[1], dateArray[0], dateArray[2]].join('.'))\n        : Date.parse(dateString);\n    }\n    return;\n  };\n\n  const getLocation = location => {\n    switch (location) {\n      case 'deutsch-a0':\n        return 'deutscha0';\n      case 'deutsch-a0_2':\n        return 'deutscha0_2';\n      case 'deutsch-a1':\n        return 'deutsch';\n      case 'deutsch-a1free':\n        return 'deutschfree';\n      case 'deutsch-a2':\n        return 'deutscha2';\n      case 'deutsch-a2free':\n        return 'deutscha2free';\n      case 'deutsch-b1':\n        return 'deutschb1';\n      case 'deutsch-b2':\n        return 'deutschb2';\n      case 'polski-a0':\n        return 'polskia0';\n      case 'polski-a0_2':\n        return 'polskia0_2';\n      case 'polski-a1':\n        return 'polski';\n      case 'polski-a1free':\n        return 'polskifree';\n      case 'polski-a2':\n        return 'polskia2';\n      case 'polski-b1':\n        return 'polskib1';\n      case 'polski-b2':\n        return 'polskib2';\n      default:\n        return location;\n    }\n  };\n\n  const getLanguageFromLocation = location => {\n    if (location.includes('de') || location.includes('deutsch')) {\n      return 'de';\n    } else if (location.includes('pl') || location.includes('polski')) {\n      return 'pl';\n    } else {\n      return 'en';\n    }\n  };\n  const page = getLocation(location);\n  const lang = getLanguageFromLocation(location);\n\n  const closeEditStudentFormOnClick = e => {\n    if (e.target.id === 'close-on-click') {\n      setIsEditStudentFormOpen(false);\n    }\n  };\n\n  const handleStudentEdit = async id => {\n    setStudentToEdit(\n      studentToEdit =>\n        (studentToEdit = users.find(student => student.userId === id))\n    );\n    setIsEditStudentFormOpen(true);\n  };\n\n  useEffect(() => {\n    document.title = `Speaking Teacher ${page.toLocaleUpperCase()} | AP Education`;\n    const getSpeakingUsersRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setCourse(\n          (await axios.get('/timetable')).data.filter(\n            timetable =>\n              page.includes(timetable.level) && lang === timetable.lang\n          )[0].course\n        );\n        setUsers(\n          (\n            await axios.get('/speakingusers/admin', {\n              params: { isAdmin: true },\n            })\n          ).data.filter(\n            user =>\n              (new Date(\n                changeDateFormat(user.visited[user.visited.length - 1])\n              ).getDate() ===\n                new Date().getDate() - 1 ||\n                new Date(\n                  changeDateFormat(user.visited[user.visited.length - 1])\n                ).getDate() ===\n                  new Date().getDate() - 2 ||\n                new Date(\n                  changeDateFormat(user.visited[user.visited.length - 1])\n                ).getDate() === new Date().getDate()) &&\n              (lang === user.lang || lang === user.lang.split('/')[0]) &&\n              course === user.course\n          )\n        );\n        console.log('eff');\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getSpeakingUsersRequest();\n  }, [course, page, lang]);\n\n  return (\n    <>\n      <UserDBTable>\n        <UserDBCaption>Список юзерів, що відвідали заняття</UserDBCaption>\n        <thead>\n          <UserDBRow>\n            <UserHeadCell>CRM&nbsp;Лід Контакт</UserHeadCell>\n            <UserHeadCell>Ім'я</UserHeadCell>\n            <UserHeadCell>Відвідини</UserHeadCell>\n            <UserHeadCell>Відвідини з часом</UserHeadCell>\n            <UserHeadCell>Мова</UserHeadCell>\n            <UserHeadCell>Потік</UserHeadCell>\n            <UserHeadCell>Темперамент</UserHeadCell>\n            <UserHeadCell>Успішність</UserHeadCell>\n            <UserHeadCell>Фідбек</UserHeadCell>\n            <UserHeadCell>Edit</UserHeadCell>\n          </UserDBRow>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <UserDBRow key={user._id}>\n              <UserCell>\n                <a\n                  href={`https://apeducation.kommo.com/leads/detail/${user.crmId}`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  {user.crmId}\n                </a>{' '}\n                <a\n                  href={`https://apeducation.kommo.com/contacts/detail/${user.contactId}`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  {user.contactId}\n                </a>\n              </UserCell>\n              <UserCell>{user.name}</UserCell>\n              <UserCell>{user.visited[user.visited.length - 1]}</UserCell>\n              <UserCell>\n                {!user.visitedTime[user.visitedTime.length - 1]\n                  ? ''\n                  : user.visitedTime[user.visitedTime.length - 1].match('^202')\n                  ? new Date(\n                      user.visitedTime[user.visitedTime.length - 1]\n                    ).toLocaleString('uk-UA')\n                  : ''}\n              </UserCell>\n              <UserCell>{user.lang}</UserCell>\n              <UserCell>{user.course}</UserCell>\n              <UserCell>{user.temperament}</UserCell>\n              <UserCell>{user.successRate}</UserCell>\n              <UserCell>{user.feedback}</UserCell>\n              <UserCell>\n                {user.name === 'Dev Acc' ? null : (\n                  <UserEditButton\n                    onClick={() => handleStudentEdit(user.userId)}\n                  >\n                    Edit\n                  </UserEditButton>\n                )}\n              </UserCell>\n            </UserDBRow>\n          ))}\n        </tbody>\n      </UserDBTable>\n      {isEditStudentFormOpen && (\n        <Backdrop onClick={closeEditStudentFormOnClick} id=\"close-on-click\">\n          <TeacherPageSpeakingEditForm\n            studentToEdit={studentToEdit}\n            closeCourseLevelEditForm={closeStudentEditForm}\n          />\n        </Backdrop>\n      )}\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default TeacherPageSpeaking;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","_templateObject3","FormBtn","_templateObject4","Input","_templateObject5","_templateObject6","InputNote","_templateObject7","ScheduleList","_templateObject8","ScheduleHeading","_templateObject9","ScheduleItem","_templateObject10","ScheduleInfo","_templateObject11","ScheduleData","_templateObject12","ScheduleDataDayText","_templateObject13","ScheduleDataTypeText","_templateObject14","ScheduleDataTimeText","_templateObject15","FormSelect","_templateObject16","Select","_templateObject17","axios","TeacherPageSpeakingEditForm","_ref","studentToEdit","closeCourseLevelEditForm","isLoading","setIsLoading","useState","temperamentValue","setTemperamentValue","temperament","successRateValue","setSuccessRateValue","successRate","console","log","successRateOptions","label","value","temperamentOptions","initialEditStudentValues","feedback","studentSchema","yup","shape","_jsxs","_Fragment","children","_jsx","Formik","initialValues","onSubmit","async","values","response","concat","_id","alert","error","validationSchema","UsersEditForm","options","styles","control","baseStyles","state","border","borderRadius","placeholder","name","defaultValue","find","option","lang","isDisabled","onChange","AdminFormBtn","type","Loader","TeacherPageSpeaking","location","useLocation","pathname","split","users","setUsers","course","setCourse","setStudentToEdit","isEditStudentFormOpen","setIsEditStudentFormOpen","changeDateFormat","dateString","dateArray","length","Date","parse","join","page","getLocation","includes","getLanguageFromLocation","useEffect","document","title","toLocaleUpperCase","data","filter","timetable","level","params","isAdmin","user","visited","getDate","getSpeakingUsersRequest","UserDBTable","UserDBCaption","UserDBRow","UserHeadCell","map","UserCell","href","crmId","target","rel","contactId","visitedTime","match","toLocaleString","UserEditButton","onClick","student","userId","id","handleStudentEdit","Backdrop","e"],"sourceRoot":""}