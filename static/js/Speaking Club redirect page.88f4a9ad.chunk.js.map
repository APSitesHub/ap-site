{"version":3,"file":"static/js/Speaking Club redirect page.88f4a9ad.chunk.js","mappings":"4NAYAA,EAAAA,EAAAA,SAAAA,QAAyB,sCAEzB,MAuGA,EAvG2BC,KACzB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,CAAC,IAC3BK,EAAYC,IAAiBN,EAAAA,EAAAA,WAAS,GAGvCO,GAFWC,EAAAA,EAAAA,MAAcC,SAETC,QAAQ,YAAa,IAAIA,QAAQ,KAAM,IACvDC,EAAOJ,EAAKK,SAAS,QACvBL,EAAKG,QAAQ,OAAQ,WACrBH,EAAKK,SAAS,MACdL,EAAKG,QAAQ,KAAM,WACnBH,EAAKK,SAAS,QACdL,EAAKG,QAAQ,OAAQ,UACrBH,EAAKK,SAAS,MACdL,EAAKG,QAAQ,KAAM,UACnBH,EAgEJ,OA9DAM,EAAAA,EAAAA,kBAAgB,KACUC,WACtB,IACEf,GAAaD,IAA0B,IACvCI,SAAuBN,EAAAA,EAAAA,IAAU,eAAemB,KAAKJ,IACrD,MAAMK,QAAoBpB,EAAAA,EAAAA,KAAW,iBAAkB,CACrDqB,KAAMC,aAAaC,QAAQ,UAE7BC,QAAQC,IAAIL,EAAYD,KAAKZ,MAC7BC,GACED,IACU,CACNmB,OAAQN,EAAYD,KAAKZ,KAAKoB,GAC9BC,KAAMR,EAAYD,KAAKZ,KAAKqB,KAC5BP,KAAMD,EAAYD,KAAKZ,KAAKc,KAC5BQ,SAAUT,EAAYD,KAAKZ,KAAKsB,SAChCC,IAAKV,EAAYD,KAAKZ,KAAKuB,IAC3BC,KAAMX,EAAYD,KAAKZ,KAAKwB,KAC5BC,OAAQZ,EAAYD,KAAKZ,KAAKyB,OAC9BC,MAAOb,EAAYD,KAAKZ,KAAK0B,MAC7BC,UAAWd,EAAYD,KAAKZ,KAAK2B,UACjCC,YAAaf,EAAYD,KAAKZ,KAAK4B,YACnCC,YAAahB,EAAYD,KAAKZ,KAAK6B,YACnCC,QAASjB,EAAYD,KAAKZ,KAAK8B,QAC/BC,YAAalB,EAAYD,KAAKZ,KAAK+B,YACnCC,SAAUnB,EAAYD,KAAKZ,KAAKgC,YAOxC,CAJE,MAAOC,GACPhB,QAAQC,IAAIe,EACd,CAAC,QACCrC,GAAaD,IAA0B,GACzC,GAEFuC,EAAiB,GAChB,CAAC1B,KAEJ2B,EAAAA,EAAAA,YAAU,KACRC,SAASC,MAAK,mHAEO1B,WACnB,IACEM,QAAQC,IAAIlB,EAAKmB,QACjB,MAAMmB,QAAqB7C,EAAAA,EAAAA,IAAU,kBAAD8C,OAChBvC,EAAKmB,SAEzBF,QAAQC,IAAI,eAAgBoB,GAC5BrB,QAAQC,IAAIlB,IAECsC,EAAa1B,WAEhBnB,EAAAA,EAAAA,IAAU,kBAAD8C,OAAmBvC,EAAKmB,QAAUnB,SAD3CP,EAAAA,EAAAA,KAAW,qBAAsBO,KAGpCG,GAAc,EAGvB,CAFE,MAAO8B,GACPhB,QAAQC,IAAIe,EACd,GAGFO,EAAc,GACb,CAACxC,KAGFyC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAa,CAAAD,UACZE,EAAAA,EAAAA,MAACC,EAAAA,GAAwB,CAAAH,SAAA,CACtBhD,IACC8C,EAAAA,EAAAA,KAACM,EAAAA,GAAa,CAAAJ,UACZF,EAAAA,EAAAA,KAACO,EAAAA,EAAM,OAGXP,EAAAA,EAAAA,KAACQ,EAAAA,EAAiB,CAAAN,UAChBE,EAAAA,EAAAA,MAACK,EAAAA,GAAqB,CAAAP,SAAA,CAAC,0CACbF,EAAAA,EAAAA,KAAA,SAAM,gYAKjB3C,GAAgBI,GAAciD,OAAOC,SAAS7C,QAAQT,SAG1D,C","sources":["pages/Speakings/StreamSpeakingClub.jsx"],"sourcesContent":["import axios from 'axios';\nimport { StreamsBackgroundWrapper } from 'components/BackgroundWrapper/BackgroundWrappers';\nimport { Loader } from 'components/SharedLayout/Loaders/Loader';\nimport { LoaderWrapper } from 'components/SharedLayout/Loaders/Loader.styled';\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport {\n  StreamPlaceHolder,\n  StreamPlaceHolderText,\n  StreamSection,\n} from '../../components/Stream/Stream.styled';\nimport { useLocation } from 'react-router-dom';\n\naxios.defaults.baseURL = 'https://ap-server-8qi1.onrender.com';\n\nconst StreamSpeakingClub = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [redirectLink, setRedirectLink] = useState('');\n  const [user, setUser] = useState({});\n  const [isApproved, setIsApproved] = useState(false);\n  const location = useLocation().pathname;\n\n  const page = location.replace('/streams/', '').replace('sc', '');\n  const link = page.includes('dea1')\n    ? page.replace('dea1', 'deutsch')\n    : page.includes('de')\n    ? page.replace('de', 'deutsch')\n    : page.includes('pla1')\n    ? page.replace('pla1', 'polski')\n    : page.includes('pl')\n    ? page.replace('pl', 'polski')\n    : page;\n\n  useLayoutEffect(() => {\n    const getLinksRequest = async () => {\n      try {\n        setIsLoading(isLoading => (isLoading = true));\n        setRedirectLink((await axios.get('/speakings')).data[link]);\n        const currentUser = await axios.post('/users/refresh', {\n          mail: localStorage.getItem('mail'),\n        });\n        console.log(currentUser.data.user);\n        setUser(\n          user =>\n            (user = {\n              userId: currentUser.data.user.id,\n              name: currentUser.data.user.name,\n              mail: currentUser.data.user.mail,\n              zoomMail: currentUser.data.user.zoomMail,\n              age: currentUser.data.user.age,\n              lang: currentUser.data.user.lang,\n              course: currentUser.data.user.course,\n              crmId: currentUser.data.user.crmId,\n              contactId: currentUser.data.user.contactId,\n              successRate: currentUser.data.user.successRate,\n              temperament: currentUser.data.user.temperament,\n              visited: currentUser.data.user.visited,\n              visitedTime: currentUser.data.user.visitedTime,\n              feedback: currentUser.data.user.feedback,\n            })\n        );\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(isLoading => (isLoading = false));\n      }\n    };\n    getLinksRequest();\n  }, [link]);\n\n  useEffect(() => {\n    document.title = `Практичне заняття | AP Education`;\n\n    const sendUserInfo = async () => {\n      try {\n        console.log(user.userId);\n        const existingUser = await axios.get(\n          `/speakingusers/${user.userId}`\n        );\n        console.log('existingUser', existingUser);\n        console.log(user);\n\n        const res = !existingUser.data\n          ? await axios.post('/speakingusers/new', user)\n          : await axios.put(`/speakingusers/${user.userId}`, user)\n\n        res && setIsApproved(true);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    sendUserInfo();\n  }, [user]);\n\n  return (\n    <>\n      <StreamSection>\n        <StreamsBackgroundWrapper>\n          {isLoading && (\n            <LoaderWrapper>\n              <Loader />\n            </LoaderWrapper>\n          )}\n          <StreamPlaceHolder>\n            <StreamPlaceHolderText>\n              Привіт! <br />\n              Будь ласка, зачекайте, незабаром вас переадресує на практичне\n              заняття в Zoom\n            </StreamPlaceHolderText>\n          </StreamPlaceHolder>\n          {redirectLink && isApproved && window.location.replace(redirectLink)}\n        </StreamsBackgroundWrapper>\n      </StreamSection>\n    </>\n  );\n};\n\nexport default StreamSpeakingClub;\n"],"names":["axios","StreamSpeakingClub","isLoading","setIsLoading","useState","redirectLink","setRedirectLink","user","setUser","isApproved","setIsApproved","page","useLocation","pathname","replace","link","includes","useLayoutEffect","async","data","currentUser","mail","localStorage","getItem","console","log","userId","id","name","zoomMail","age","lang","course","crmId","contactId","successRate","temperament","visited","visitedTime","feedback","error","getLinksRequest","useEffect","document","title","existingUser","concat","sendUserInfo","_jsx","_Fragment","children","StreamSection","_jsxs","StreamsBackgroundWrapper","LoaderWrapper","Loader","StreamPlaceHolder","StreamPlaceHolderText","window","location"],"sourceRoot":""}